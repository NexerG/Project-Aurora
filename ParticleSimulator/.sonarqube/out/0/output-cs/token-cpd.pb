еж
_H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Simulators\Vulkan\Simulator3D.cs
	namespace 	
ArctisAurora
 
. 

Simulators !
.! "
Vulkan" (
{ 
public 

class 
Simulator3D 
{ 
Frame

 
SC

 
;

 
bool 
	simOpenTK 
= 
true 
; 
Vector3D 
< 
float 
> 
simSize 
;  
List 
< 
Force 
> 
forces 
= 
new  
List! %
<% &
Force& +
>+ ,
(, -
)- .
;. /
Vector3D 
< 
float 
> 

ConstForce "
=# $
new% (
Vector3D) 1
<1 2
float2 7
>7 8
(8 9
)9 :
;: ;
List 
< 

Particle3D 
> 
parts 
; 
float 
[ 
] 
	densities 
; 
public 
float 
targetDensity "
=# $
$num% -
;- .
public 
float 
smoothingRadius $
=% &
$num' *
;* +
public 
float 
pressureMultiplier '
=( )
$num* /
;/ 0
public 
float 
viscosityStr !
=" #
$num$ '
;' (
public 
float 
GravStrength !
=" #
$num$ &
;& '
Entry 
[ 
] 
SpatialLookup 
; 
int 
[ 
] 
StartIndices 
; 
public 
Vector3D 
< 
float 
> 
[ 
]  
	Offsets2D! *
=+ ,
new- 0
Vector3D1 9
<9 :
float: ?
>? @
[@ A
$numA C
]C D
;D E
public 
Simulator3D 
( 
) 
{ 	
Gravity 
g 
= 
new 
Gravity #
(# $
new$ '
PointF( .
(. /
$num/ 0
,0 1
$num2 6
)6 7
)7 8
;8 9
forces   
.   
Add   
(   
g   
)   
;   
SpatialLookup"" 
="" 
new"" 
Entry""  %
[""% &
parts""& +
.""+ ,
Count"", 1
]""1 2
;""2 3
StartIndices## 
=## 
new## 
int## "
[##" #
parts### (
.##( )
Count##) .
]##. /
;##/ 0
	densities$$ 
=$$ 
new$$ 
float$$ !
[$$! "
parts$$" '
.$$' (
Count$$( -
]$$- .
;$$. /
CreateOffsets&& 
(&& 
)&& 
;&& 
UpdateSpatialLookup'' 
(''  
parts''  %
,''% &
smoothingRadius''' 6
)''6 7
;''7 8
CalcConstForces(( 
((( 
)(( 
;(( 
CreateOffsets)) 
()) 
))) 
;)) 
UpdateUI** 
(** 
)** 
;** 
}++ 	
public-- 
Simulator3D-- 
(-- 
List-- 
<--  

Particle3D--  *
>--* +
parts--, 1
,--1 2
Frame--3 8
SC--9 ;
)--; <
{.. 	
Gravity// 
g// 
=// 
new// 
Gravity// #
(//# $
new//$ '
Vector3D//( 0
<//0 1
float//1 6
>//6 7
(//7 8
$num//8 :
,//: ;
$num//< >
,//> ?
$num//@ D
)//D E
)//E F
;//F G
forces00 
.00 
Add00 
(00 
g00 
)00 
;00 
this11 
.11 
parts11 
=11 
parts11 
;11 
this22 
.22 
SC22 
=22 
SC22 
;22 
SpatialLookup44 
=44 
new44 
Entry44  %
[44% &
parts44& +
.44+ ,
Count44, 1
]441 2
;442 3
StartIndices55 
=55 
new55 
int55 "
[55" #
parts55# (
.55( )
Count55) .
]55. /
;55/ 0
	densities66 
=66 
new66 
float66 !
[66! "
parts66" '
.66' (
Count66( -
]66- .
;66. /
CreateOffsets88 
(88 
)88 
;88 
UpdateSpatialLookup99 
(99  
parts99  %
,99% &
smoothingRadius99' 6
)996 7
;997 8
CalcConstForces:: 
(:: 
):: 
;:: 
UpdateDensities;; 
(;; 
);; 
;;; 
UpdateUI<< 
(<< 
)<< 
;<< 
}== 	
public?? 
Simulator3D?? 
(?? 
Frame??  
frame??! &
,??& '
List??( ,
<??, -

Particle3D??- 7
>??7 8
parts??9 >
,??> ?
Vector3D??@ H
<??H I
float??I N
>??N O
simSize??P W
)??W X
{@@ 	
SCAA 
=AA 
frameAA 
;AA 
GravityBB 
gBB 
=BB 
newBB 
GravityBB #
(BB# $
newBB$ '
Vector3DBB( 0
<BB0 1
floatBB1 6
>BB6 7
(BB7 8
$numBB8 :
,BB: ;
$numBB< @
,BB@ A
$numBBB D
)BBD E
)BBE F
;BBF G
forcesCC 
.CC 
AddCC 
(CC 
gCC 
)CC 
;CC 
thisDD 
.DD 
partsDD 
=DD 
partsDD 
;DD 
SpatialLookupFF 
=FF 
newFF 
EntryFF  %
[FF% &
partsFF& +
.FF+ ,
CountFF, 1
]FF1 2
;FF2 3
StartIndicesGG 
=GG 
newGG 
intGG "
[GG" #
partsGG# (
.GG( )
CountGG) .
]GG. /
;GG/ 0
	densitiesHH 
=HH 
newHH 
floatHH !
[HH! "
partsHH" '
.HH' (
CountHH( -
]HH- .
;HH. /
thisII 
.II 
simSizeII 
=II 
simSizeII "
;II" #
CreateOffsetsKK 
(KK 
)KK 
;KK 
UpdateSpatialLookupLL 
(LL  
partsLL  %
,LL% &
smoothingRadiusLL' 6
)LL6 7
;LL7 8
CalcConstForcesMM 
(MM 
)MM 
;MM 
UpdateDensitiesNN 
(NN 
)NN 
;NN 
UpdateUIOO 
(OO 
)OO 
;OO 
}PP 	
publicRR 
Simulator3DRR 
(RR 
ListRR 
<RR  

Particle3DRR  *
>RR* +
partsRR, 1
,RR1 2
Vector3DRR3 ;
<RR; <
floatRR< A
>RRA B
simSizeRRC J
)RRJ K
{SS 	
GravityTT 
gTT 
=TT 
newTT 
GravityTT #
(TT# $
newTT$ '
Vector3DTT( 0
<TT0 1
floatTT1 6
>TT6 7
(TT7 8
$numTT8 :
,TT: ;
-TT< =
$numTT= A
,TTA B
$numTTC E
)TTE F
)TTF G
;TTG H
forcesUU 
.UU 
AddUU 
(UU 
gUU 
)UU 
;UU 
thisVV 
.VV 
partsVV 
=VV 
partsVV 
;VV 
SpatialLookupXX 
=XX 
newXX 
EntryXX  %
[XX% &
partsXX& +
.XX+ ,
CountXX, 1
]XX1 2
;XX2 3
StartIndicesYY 
=YY 
newYY 
intYY "
[YY" #
partsYY# (
.YY( )
CountYY) .
]YY. /
;YY/ 0
	densitiesZZ 
=ZZ 
newZZ 
floatZZ !
[ZZ! "
partsZZ" '
.ZZ' (
CountZZ( -
]ZZ- .
;ZZ. /
this[[ 
.[[ 
simSize[[ 
=[[ 
simSize[[ "
;[[" #
CreateOffsets]] 
(]] 
)]] 
;]] 
UpdateSpatialLookup^^ 
(^^  
parts^^  %
,^^% &
smoothingRadius^^' 6
)^^6 7
;^^7 8
CalcConstForces__ 
(__ 
)__ 
;__ 
UpdateDensities`` 
(`` 
)`` 
;`` 
}aa 	
privatecc 
voidcc 
UpdateUIcc 
(cc 
)cc 
{dd 	
SCee 
.ee 
TB_SmoothingRadiusee !
.ee! "
Textee" &
=ee' (
smoothingRadiusee) 8
.ee8 9
ToStringee9 A
(eeA B
)eeB C
;eeC D
SCff 
.ff 
TB_TargetDensityff 
.ff  
Textff  $
=ff% &
targetDensityff' 4
.ff4 5
ToStringff5 =
(ff= >
)ff> ?
;ff? @
SCgg 
.gg  
TB_ViscosityStrengthgg #
.gg# $
Textgg$ (
=gg) *
viscosityStrgg+ 7
.gg7 8
ToStringgg8 @
(gg@ A
)ggA B
;ggB C
SChh 
.hh 
TB_PressureMulthh 
.hh 
Texthh #
=hh$ %
pressureMultiplierhh& 8
.hh8 9
ToStringhh9 A
(hhA B
)hhB C
;hhC D
SCii 
.ii 

TB_GravStrii 
.ii 
Textii 
=ii  
GravStrengthii! -
.ii- .
ToStringii. 6
(ii6 7
)ii7 8
;ii8 9
}jj 	
publicll 
voidll 
CreateOffsetsll !
(ll! "
)ll" #
{mm 	
	Offsets2Doo 
[oo 
$numoo 
]oo 
=oo 
newoo 
Vector3Doo '
<oo' (
floatoo( -
>oo- .
(oo. /
-oo/ 0
$numoo0 1
,oo1 2
$numoo3 4
,oo4 5
$numoo6 7
)oo7 8
;oo8 9
	Offsets2Dpp 
[pp 
$numpp 
]pp 
=pp 
newpp 
Vector3Dpp '
<pp' (
floatpp( -
>pp- .
(pp. /
$numpp/ 0
,pp0 1
$numpp2 3
,pp3 4
$numpp5 6
)pp6 7
;pp7 8
	Offsets2Dqq 
[qq 
$numqq 
]qq 
=qq 
newqq 
Vector3Dqq '
<qq' (
floatqq( -
>qq- .
(qq. /
$numqq/ 0
,qq0 1
$numqq2 3
,qq3 4
$numqq5 6
)qq6 7
;qq7 8
	Offsets2Drr 
[rr 
$numrr 
]rr 
=rr 
newrr 
Vector3Drr '
<rr' (
floatrr( -
>rr- .
(rr. /
-rr/ 0
$numrr0 1
,rr1 2
$numrr3 4
,rr4 5
$numrr6 7
)rr7 8
;rr8 9
	Offsets2Dss 
[ss 
$numss 
]ss 
=ss 
newss 
Vector3Dss '
<ss' (
floatss( -
>ss- .
(ss. /
$numss/ 0
,ss0 1
$numss2 3
,ss3 4
$numss5 6
)ss6 7
;ss7 8
	Offsets2Dtt 
[tt 
$numtt 
]tt 
=tt 
newtt 
Vector3Dtt '
<tt' (
floattt( -
>tt- .
(tt. /
$numtt/ 0
,tt0 1
$numtt2 3
,tt3 4
$numtt5 6
)tt6 7
;tt7 8
	Offsets2Duu 
[uu 
$numuu 
]uu 
=uu 
newuu 
Vector3Duu '
<uu' (
floatuu( -
>uu- .
(uu. /
-uu/ 0
$numuu0 1
,uu1 2
-uu3 4
$numuu4 5
,uu5 6
$numuu7 8
)uu8 9
;uu9 :
	Offsets2Dvv 
[vv 
$numvv 
]vv 
=vv 
newvv 
Vector3Dvv '
<vv' (
floatvv( -
>vv- .
(vv. /
$numvv/ 0
,vv0 1
-vv2 3
$numvv3 4
,vv4 5
$numvv6 7
)vv7 8
;vv8 9
	Offsets2Dww 
[ww 
$numww 
]ww 
=ww 
newww 
Vector3Dww '
<ww' (
floatww( -
>ww- .
(ww. /
$numww/ 0
,ww0 1
-ww2 3
$numww3 4
,ww4 5
$numww6 7
)ww7 8
;ww8 9
	Offsets2Dyy 
[yy 
$numyy 
]yy 
=yy 
newyy 
Vector3Dyy '
<yy' (
floatyy( -
>yy- .
(yy. /
-yy/ 0
$numyy0 1
,yy1 2
$numyy3 4
,yy4 5
$numyy6 7
)yy7 8
;yy8 9
	Offsets2Dzz 
[zz 
$numzz 
]zz 
=zz 
newzz 
Vector3Dzz  (
<zz( )
floatzz) .
>zz. /
(zz/ 0
$numzz0 1
,zz1 2
$numzz3 4
,zz4 5
$numzz6 7
)zz7 8
;zz8 9
	Offsets2D{{ 
[{{ 
$num{{ 
]{{ 
={{ 
new{{ 
Vector3D{{  (
<{{( )
float{{) .
>{{. /
({{/ 0
$num{{0 1
,{{1 2
$num{{3 4
,{{4 5
$num{{6 7
){{7 8
;{{8 9
	Offsets2D|| 
[|| 
$num|| 
]|| 
=|| 
new|| 
Vector3D||  (
<||( )
float||) .
>||. /
(||/ 0
-||0 1
$num||1 2
,||2 3
$num||4 5
,||5 6
$num||7 8
)||8 9
;||9 :
	Offsets2D}} 
[}} 
$num}} 
]}} 
=}} 
new}} 
Vector3D}}  (
<}}( )
float}}) .
>}}. /
(}}/ 0
$num}}0 1
,}}1 2
$num}}3 4
,}}4 5
$num}}6 7
)}}7 8
;}}8 9
	Offsets2D~~ 
[~~ 
$num~~ 
]~~ 
=~~ 
new~~ 
Vector3D~~  (
<~~( )
float~~) .
>~~. /
(~~/ 0
$num~~0 1
,~~1 2
$num~~3 4
,~~4 5
$num~~6 7
)~~7 8
;~~8 9
	Offsets2D 
[ 
$num 
] 
= 
new 
Vector3D  (
<( )
float) .
>. /
(/ 0
-0 1
$num1 2
,2 3
-4 5
$num5 6
,6 7
$num8 9
)9 :
;: ;
	Offsets2D
── 
[
── 
$num
── 
]
── 
=
── 
new
── 
Vector3D
──  (
<
──( )
float
──) .
>
──. /
(
──/ 0
$num
──0 1
,
──1 2
-
──3 4
$num
──4 5
,
──5 6
$num
──7 8
)
──8 9
;
──9 :
	Offsets2D
││ 
[
││ 
$num
││ 
]
││ 
=
││ 
new
││ 
Vector3D
││  (
<
││( )
float
││) .
>
││. /
(
││/ 0
$num
││0 1
,
││1 2
-
││3 4
$num
││4 5
,
││5 6
$num
││7 8
)
││8 9
;
││9 :
	Offsets2D
┐┐ 
[
┐┐ 
$num
┐┐ 
]
┐┐ 
=
┐┐ 
new
┐┐ 
Vector3D
┐┐  (
<
┐┐( )
float
┐┐) .
>
┐┐. /
(
┐┐/ 0
-
┐┐0 1
$num
┐┐1 2
,
┐┐2 3
$num
┐┐4 5
,
┐┐5 6
-
┐┐7 8
$num
┐┐8 9
)
┐┐9 :
;
┐┐: ;
	Offsets2D
└└ 
[
└└ 
$num
└└ 
]
└└ 
=
└└ 
new
└└ 
Vector3D
└└  (
<
└└( )
float
└└) .
>
└└. /
(
└└/ 0
$num
└└0 1
,
└└1 2
$num
└└3 4
,
└└4 5
-
└└6 7
$num
└└7 8
)
└└8 9
;
└└9 :
	Offsets2D
┘┘ 
[
┘┘ 
$num
┘┘ 
]
┘┘ 
=
┘┘ 
new
┘┘ 
Vector3D
┘┘  (
<
┘┘( )
float
┘┘) .
>
┘┘. /
(
┘┘/ 0
$num
┘┘0 1
,
┘┘1 2
$num
┘┘3 4
,
┘┘4 5
-
┘┘6 7
$num
┘┘7 8
)
┘┘8 9
;
┘┘9 :
	Offsets2D
├├ 
[
├├ 
$num
├├ 
]
├├ 
=
├├ 
new
├├ 
Vector3D
├├  (
<
├├( )
float
├├) .
>
├├. /
(
├├/ 0
-
├├0 1
$num
├├1 2
,
├├2 3
$num
├├4 5
,
├├5 6
-
├├7 8
$num
├├8 9
)
├├9 :
;
├├: ;
	Offsets2D
┤┤ 
[
┤┤ 
$num
┤┤ 
]
┤┤ 
=
┤┤ 
new
┤┤ 
Vector3D
┤┤  (
<
┤┤( )
float
┤┤) .
>
┤┤. /
(
┤┤/ 0
$num
┤┤0 1
,
┤┤1 2
$num
┤┤3 4
,
┤┤4 5
-
┤┤6 7
$num
┤┤7 8
)
┤┤8 9
;
┤┤9 :
	Offsets2D
┬┬ 
[
┬┬ 
$num
┬┬ 
]
┬┬ 
=
┬┬ 
new
┬┬ 
Vector3D
┬┬  (
<
┬┬( )
float
┬┬) .
>
┬┬. /
(
┬┬/ 0
$num
┬┬0 1
,
┬┬1 2
$num
┬┬3 4
,
┬┬4 5
-
┬┬6 7
$num
┬┬7 8
)
┬┬8 9
;
┬┬9 :
	Offsets2D
┴┴ 
[
┴┴ 
$num
┴┴ 
]
┴┴ 
=
┴┴ 
new
┴┴ 
Vector3D
┴┴  (
<
┴┴( )
float
┴┴) .
>
┴┴. /
(
┴┴/ 0
-
┴┴0 1
$num
┴┴1 2
,
┴┴2 3
-
┴┴4 5
$num
┴┴5 6
,
┴┴6 7
-
┴┴8 9
$num
┴┴9 :
)
┴┴: ;
;
┴┴; <
	Offsets2D
┼┼ 
[
┼┼ 
$num
┼┼ 
]
┼┼ 
=
┼┼ 
new
┼┼ 
Vector3D
┼┼  (
<
┼┼( )
float
┼┼) .
>
┼┼. /
(
┼┼/ 0
$num
┼┼0 1
,
┼┼1 2
-
┼┼3 4
$num
┼┼4 5
,
┼┼5 6
-
┼┼7 8
$num
┼┼8 9
)
┼┼9 :
;
┼┼: ;
	Offsets2D
▀▀ 
[
▀▀ 
$num
▀▀ 
]
▀▀ 
=
▀▀ 
new
▀▀ 
Vector3D
▀▀  (
<
▀▀( )
float
▀▀) .
>
▀▀. /
(
▀▀/ 0
$num
▀▀0 1
,
▀▀1 2
-
▀▀3 4
$num
▀▀4 5
,
▀▀5 6
-
▀▀7 8
$num
▀▀8 9
)
▀▀9 :
;
▀▀: ;
}
▄▄ 	
public
▌▌ 
void
▌▌ 
CalcConstForces
▌▌ #
(
▌▌# $
)
▌▌$ %
{
▐▐ 	
foreach
░░ 
(
░░ 
Force
░░ 
f
░░ 
in
░░ 
forces
░░  &
)
░░& '
{
▒▒ 

ConstForce
▓▓ 
.
▓▓ 
X
▓▓ 
=
▓▓ 

ConstForce
▓▓ )
.
▓▓) *
X
▓▓* +
+
▓▓, -
f
▓▓. /
.
▓▓/ 0
_force
▓▓0 6
.
▓▓6 7
X
▓▓7 8
;
▓▓8 9

ConstForce
⌠⌠ 
.
⌠⌠ 
Y
⌠⌠ 
=
⌠⌠ 

ConstForce
⌠⌠ )
.
⌠⌠) *
Y
⌠⌠* +
+
⌠⌠, -
f
⌠⌠. /
.
⌠⌠/ 0
_force
⌠⌠0 6
.
⌠⌠6 7
Y
⌠⌠7 8
;
⌠⌠8 9

ConstForce
■■ 
.
■■ 
Z
■■ 
=
■■ 

ConstForce
■■ )
.
■■) *
Z
■■* +
+
■■, -
f
■■. /
.
■■/ 0
_force
■■0 6
.
■■6 7
Z
■■7 8
;
■■8 9
}
∙∙ 
}
√√ 	
public
≤≤ 
void
≤≤ 
AddConstForce
≤≤ !
(
≤≤! "
Force
≤≤" '
f
≤≤( )
)
≤≤) *
{
≥≥ 	
forces
   
.
   
Add
   
(
   
f
   
)
   
;
   
CalcConstForces
⌡⌡ 
(
⌡⌡ 
)
⌡⌡ 
;
⌡⌡ 
}
°° 	
public
·· 
void
·· 
AddConstForce
·· !
(
··! "
List
··" &
<
··& '
Force
··' ,
>
··, -
fs
··. 0
)
··0 1
{
÷÷ 	
forces
══ 
.
══ 
AddRange
══ 
(
══ 
fs
══ 
)
══ 
;
══  
CalcConstForces
║║ 
(
║║ 
)
║║ 
;
║║ 
}
╒╒ 	
public
╓╓ 
void
╓╓ 
Update
╓╓ 
(
╓╓ 
float
╓╓  
	TimeScale
╓╓! *
)
╓╓* +
{
╔╔ 	
SimStep
╕╕ 
(
╕╕ 
	TimeScale
╕╕ 
)
╕╕ 
;
╕╕ 
}
╖╖ 	
public
╘╘ 
void
╘╘ 
SimStep
╘╘ 
(
╘╘ 
float
╘╘ !
	TimeScale
╘╘" +
)
╘╘+ ,
{
╙╙ 	
Parallel
╛╛ 
.
╛╛ 
For
╛╛ 
(
╛╛ 
$num
╛╛ 
,
╛╛ 
parts
╛╛ !
.
╛╛! "
Count
╛╛" '
,
╛╛' (
i
╛╛) *
=>
╛╛+ -
{
╜╜ 
parts
╝╝ 
[
╝╝ 
i
╝╝ 
]
╝╝ 
.
╝╝ 
velocity
╝╝ !
+=
╝╝" $

ConstForce
╝╝% /
*
╝╝0 1
	TimeScale
╝╝2 ;
*
╝╝< =
GravStrength
╝╝> J
;
╝╝J K
parts
╞╞ 
[
╞╞ 
i
╞╞ 
]
╞╞ 
.
╞╞ 
	PredPoint
╞╞ "
=
╞╞# $
parts
╞╞% *
[
╞╞* +
i
╞╞+ ,
]
╞╞, -
.
╞╞- .
point
╞╞. 3
+
╞╞4 5
parts
╞╞6 ;
[
╞╞; <
i
╞╞< =
]
╞╞= >
.
╞╞> ?
velocity
╞╞? G
;
╞╞G H
}
╟╟ 
)
╟╟ 
;
╟╟ !
UpdateSpatialLookup
ЁЁ 
(
ЁЁ  
parts
ЁЁ  %
,
ЁЁ% &
smoothingRadius
ЁЁ' 6
)
ЁЁ6 7
;
ЁЁ7 8
UpdateDensities
╣╣ 
(
╣╣ 
)
╣╣ 
;
╣╣ 
Parallel
╧╧ 
.
╧╧ 
For
╧╧ 
(
╧╧ 
$num
╧╧ 
,
╧╧ 
parts
╧╧ !
.
╧╧! "
Count
╧╧" '
,
╧╧' (
i
╧╧) *
=>
╧╧+ -
{
╨╨ 
Vector3D
╩╩ 
<
╩╩ 
float
╩╩ 
>
╩╩ 
pressureForce
╩╩  -
=
╩╩. /
CalcPresureForce
╩╩0 @
(
╩╩@ A
i
╩╩A B
)
╩╩B C
;
╩╩C D
Vector3D
╪╪ 
<
╪╪ 
float
╪╪ 
>
╪╪ 
pressureAccel
╪╪  -
=
╪╪. /
pressureForce
╪╪0 =
/
╪╪> ?
	densities
╪╪@ I
[
╪╪I J
i
╪╪J K
]
╪╪K L
;
╪╪L M
parts
╫╫ 
[
╫╫ 
i
╫╫ 
]
╫╫ 
.
╫╫ 
velocity
╫╫ !
+=
╫╫" $
pressureAccel
╫╫% 2
*
╫╫3 4
	TimeScale
╫╫5 >
;
╫╫> ?
}
╬╬ 
)
╬╬ 
;
╬╬ 
Parallel
аа 
.
аа 
For
аа 
(
аа 
$num
аа 
,
аа 
parts
аа !
.
аа! "
Count
аа" '
,
аа' (
i
аа) *
=>
аа+ -
{
бб 
Vector3D
цц 
<
цц 
float
цц 
>
цц 
	ViscForce
цц  )
=
цц* +%
CalculateViscosityForce
цц, C
(
ццC D
i
ццD E
)
ццE F
;
ццF G
parts
дд 
[
дд 
i
дд 
]
дд 
.
дд 
velocity
дд !
+=
дд" $
	ViscForce
дд% .
*
дд/ 0
viscosityStr
дд1 =
;
дд= >
}
ее 
)
ее 
;
ее 
UpdatePositions
фф 
(
фф 
parts
фф !
)
фф! "
;
фф" #
}
гг 	
void
ии 
UpdatePositions
ии 
(
ии 
List
ии !
<
ии! "

Particle3D
ии" ,
>
ии, -
parts
ии. 3
)
ии3 4
{
йй 	
Parallel
лл 
.
лл 
For
лл 
(
лл 
$num
лл 
,
лл 
parts
лл !
.
лл! "
Count
лл" '
,
лл' (
i
лл) *
=>
лл+ -
{
мм 
if
нн 
(
нн 
parts
нн 
[
нн 
i
нн 
]
нн 
.
нн 
point
нн "
.
нн" #
X
нн# $
+
нн% &
parts
нн' ,
[
нн, -
i
нн- .
]
нн. /
.
нн/ 0
radius
нн0 6
+
нн7 8
parts
нн9 >
[
нн> ?
i
нн? @
]
нн@ A
.
ннA B
velocity
ннB J
.
ннJ K
X
ннK L
>
ннM N
simSize
ннO V
.
ннV W
Y
ннW X
)
ннX Y
parts
оо 
[
оо 
i
оо 
]
оо 
.
оо 
velocity
оо %
.
оо% &
X
оо& '
=
оо( )
Math
оо* .
.
оо. /
Abs
оо/ 2
(
оо2 3
parts
оо3 8
[
оо8 9
i
оо9 :
]
оо: ;
.
оо; <
velocity
оо< D
.
ооD E
X
ооE F
)
ооF G
*
ооH I
-
ооJ K
$num
ооK O
;
ооO P
if
яя 
(
яя 
parts
яя 
[
яя 
i
яя 
]
яя 
.
яя 
point
яя "
.
яя" #
X
яя# $
+
яя% &
parts
яя' ,
[
яя, -
i
яя- .
]
яя. /
.
яя/ 0
radius
яя0 6
+
яя7 8
parts
яя9 >
[
яя> ?
i
яя? @
]
яя@ A
.
яяA B
velocity
яяB J
.
яяJ K
X
яяK L
<
яяM N
$num
яяO P
)
яяP Q
parts
рр 
[
рр 
i
рр 
]
рр 
.
рр 
velocity
рр %
.
рр% &
X
рр& '
=
рр( )
Math
рр* .
.
рр. /
Abs
рр/ 2
(
рр2 3
parts
рр3 8
[
рр8 9
i
рр9 :
]
рр: ;
.
рр; <
velocity
рр< D
.
ррD E
X
ррE F
)
ррF G
*
ррH I
$num
ррJ N
;
ррN O
if
тт 
(
тт 
parts
тт 
[
тт 
i
тт 
]
тт 
.
тт 
point
тт "
.
тт" #
Y
тт# $
+
тт% &
parts
тт' ,
[
тт, -
i
тт- .
]
тт. /
.
тт/ 0
radius
тт0 6
+
тт7 8
parts
тт9 >
[
тт> ?
i
тт? @
]
тт@ A
.
ттA B
velocity
ттB J
.
ттJ K
Y
ттK L
>
ттM N
simSize
ттO V
.
ттV W
X
ттW X
)
ттX Y
parts
уу 
[
уу 
i
уу 
]
уу 
.
уу 
velocity
уу %
.
уу% &
Y
уу& '
=
уу( )
Math
уу* .
.
уу. /
Abs
уу/ 2
(
уу2 3
parts
уу3 8
[
уу8 9
i
уу9 :
]
уу: ;
.
уу; <
velocity
уу< D
.
ууD E
Y
ууE F
)
ууF G
*
ууH I
-
ууJ K
$num
ууK O
;
ууO P
if
вв 
(
вв 
parts
вв 
[
вв 
i
вв 
]
вв 
.
вв 
point
вв "
.
вв" #
Y
вв# $
+
вв% &
parts
вв' ,
[
вв, -
i
вв- .
]
вв. /
.
вв/ 0
radius
вв0 6
+
вв7 8
parts
вв9 >
[
вв> ?
i
вв? @
]
вв@ A
.
ввA B
velocity
ввB J
.
ввJ K
Y
ввK L
<
ввM N
$num
ввO P
)
ввP Q
parts
ьь 
[
ьь 
i
ьь 
]
ьь 
.
ьь 
velocity
ьь %
.
ьь% &
Y
ьь& '
=
ьь( )
Math
ьь* .
.
ьь. /
Abs
ьь/ 2
(
ьь2 3
parts
ьь3 8
[
ьь8 9
i
ьь9 :
]
ьь: ;
.
ьь; <
velocity
ьь< D
.
ььD E
Y
ььE F
)
ььF G
*
ььH I
$num
ььJ N
;
ььN O
if
зз 
(
зз 
parts
зз 
[
зз 
i
зз 
]
зз 
.
зз 
point
зз "
.
зз" #
Z
зз# $
+
зз% &
parts
зз' ,
[
зз, -
i
зз- .
]
зз. /
.
зз/ 0
radius
зз0 6
+
зз7 8
parts
зз9 >
[
зз> ?
i
зз? @
]
зз@ A
.
ззA B
velocity
ззB J
.
ззJ K
Z
ззK L
>
ззM N
simSize
ззO V
.
ззV W
Z
ззW X
)
ззX Y
parts
шш 
[
шш 
i
шш 
]
шш 
.
шш 
velocity
шш %
.
шш% &
Z
шш& '
=
шш( )
Math
шш* .
.
шш. /
Abs
шш/ 2
(
шш2 3
parts
шш3 8
[
шш8 9
i
шш9 :
]
шш: ;
.
шш; <
velocity
шш< D
.
шшD E
Z
шшE F
)
шшF G
*
шшH I
-
шшJ K
$num
шшK O
;
шшO P
if
щщ 
(
щщ 
parts
щщ 
[
щщ 
i
щщ 
]
щщ 
.
щщ 
point
щщ "
.
щщ" #
Z
щщ# $
+
щщ% &
parts
щщ' ,
[
щщ, -
i
щщ- .
]
щщ. /
.
щщ/ 0
radius
щщ0 6
+
щщ7 8
parts
щщ9 >
[
щщ> ?
i
щщ? @
]
щщ@ A
.
щщA B
velocity
щщB J
.
щщJ K
Z
щщK L
<
щщM N
$num
щщO P
)
щщP Q
parts
чч 
[
чч 
i
чч 
]
чч 
.
чч 
velocity
чч %
.
чч% &
Z
чч& '
=
чч( )
Math
чч* .
.
чч. /
Abs
чч/ 2
(
чч2 3
parts
чч3 8
[
чч8 9
i
чч9 :
]
чч: ;
.
чч; <
velocity
чч< D
.
ччD E
Z
ччE F
)
ччF G
*
ччH I
$num
ччJ N
;
ччN O
parts
ЮЮ 
[
ЮЮ 
i
ЮЮ 
]
ЮЮ 
.
ЮЮ 
point
ЮЮ 
+=
ЮЮ !
parts
ЮЮ" '
[
ЮЮ' (
i
ЮЮ( )
]
ЮЮ) *
.
ЮЮ* +
velocity
ЮЮ+ 3
;
ЮЮ3 4
}
АА 
)
АА 
;
АА 
}
ББ 	
void
ЕЕ 
UpdateDensities
ЕЕ 
(
ЕЕ 
)
ЕЕ 
{
ФФ 	
Parallel
ГГ 
.
ГГ 
For
ГГ 
(
ГГ 
$num
ГГ 
,
ГГ 
parts
ГГ !
.
ГГ! "
Count
ГГ" '
,
ГГ' (
i
ГГ) *
=>
ГГ+ -
{
ХХ 
	densities
ИИ 
[
ИИ 
i
ИИ 
]
ИИ 
=
ИИ 
CalculateDensity
ИИ /
(
ИИ/ 0
parts
ИИ0 5
[
ИИ5 6
i
ИИ6 7
]
ИИ7 8
.
ИИ8 9
	PredPoint
ИИ9 B
)
ИИB C
;
ИИC D
}
ЙЙ 
)
ЙЙ 
;
ЙЙ 
}
КК 	
private
ММ 
float
ММ 
CalculateDensity
ММ &
(
ММ& '
Vector3D
ММ' /
<
ММ/ 0
float
ММ0 5
>
ММ5 6
samplePoint
ММ7 B
)
ММB C
{
НН 	
float
ОО 
density
ОО 
=
ОО 
$num
ОО 
;
ОО 
const
ПП 
float
ПП 
mass
ПП 
=
ПП 
$num
ПП  
;
ПП  !
(
РР 
int
РР 
CenterX
РР 
,
РР 
int
РР 
CenterY
РР %
,
РР% &
int
РР' *
CenterZ
РР+ 2
)
РР2 3
=
РР4 5!
PositionToCellCoord
РР6 I
(
РРI J
samplePoint
РРJ U
,
РРU V
smoothingRadius
РРW f
)
РРf g
;
РРg h
float
СС 
	sqrRadius
СС 
=
СС 
smoothingRadius
СС -
*
СС. /
smoothingRadius
СС0 ?
;
СС? @
foreach
УУ 
(
УУ 
Vector3D
УУ 
<
УУ 
float
УУ #
>
УУ# $
off
УУ% (
in
УУ) +
	Offsets2D
УУ, 5
)
УУ5 6
{
ЖЖ 
uint
ВВ 
key
ВВ 
=
ВВ 
GetKeyFromHash
ВВ )
(
ВВ) *
HashCell
ВВ* 2
(
ВВ2 3
(
ВВ3 4
int
ВВ4 7
)
ВВ7 8
(
ВВ8 9
CenterX
ВВ9 @
+
ВВA B
off
ВВC F
.
ВВF G
X
ВВG H
)
ВВH I
,
ВВI J
(
ВВK L
int
ВВL O
)
ВВO P
(
ВВP Q
CenterY
ВВQ X
+
ВВY Z
off
ВВ[ ^
.
ВВ^ _
Y
ВВ_ `
)
ВВ` a
,
ВВa b
(
ВВc d
int
ВВd g
)
ВВg h
(
ВВh i
CenterZ
ВВi p
+
ВВq r
off
ВВs v
.
ВВv w
Z
ВВw x
)
ВВx y
)
ВВy z
)
ВВz {
;
ВВ{ |
int
ЬЬ 
cellStartIndex
ЬЬ "
=
ЬЬ# $
StartIndices
ЬЬ% 1
[
ЬЬ1 2
key
ЬЬ2 5
]
ЬЬ5 6
;
ЬЬ6 7
for
ЗЗ 
(
ЗЗ 
int
ЗЗ 
i
ЗЗ 
=
ЗЗ 
cellStartIndex
ЗЗ +
;
ЗЗ+ ,
i
ЗЗ- .
<
ЗЗ/ 0
SpatialLookup
ЗЗ1 >
.
ЗЗ> ?
Length
ЗЗ? E
;
ЗЗE F
i
ЗЗG H
++
ЗЗH J
)
ЗЗJ K
{
ШШ 
if
ЭЭ 
(
ЭЭ 
SpatialLookup
ЭЭ %
[
ЭЭ% &
i
ЭЭ& '
]
ЭЭ' (
.
ЭЭ( )
CKey
ЭЭ) -
!=
ЭЭ. 0
key
ЭЭ1 4
)
ЭЭ4 5
break
ЭЭ6 ;
;
ЭЭ; <
int
ЧЧ 
particleIndex
ЧЧ %
=
ЧЧ& '
SpatialLookup
ЧЧ( 5
[
ЧЧ5 6
i
ЧЧ6 7
]
ЧЧ7 8
.
ЧЧ8 9
index
ЧЧ9 >
;
ЧЧ> ?
float
ЪЪ 
sqrDist
ЪЪ !
=
ЪЪ" #
(
ЪЪ$ %
parts
ЪЪ% *
[
ЪЪ* +
particleIndex
ЪЪ+ 8
]
ЪЪ8 9
.
ЪЪ9 :
	PredPoint
ЪЪ: C
-
ЪЪD E
samplePoint
ЪЪF Q
)
ЪЪQ R
.
ЪЪR S
LengthSquared
ЪЪS `
;
ЪЪ` a
if
── 
(
── 
sqrDist
── 
<=
──  "
	sqrRadius
──# ,
)
──, -
{
││ 
float
┌┌ 
dist
┌┌ "
=
┌┌# $
Vector3D
┌┌% -
.
┌┌- .
Distance
┌┌. 6
(
┌┌6 7
samplePoint
┌┌7 B
,
┌┌B C
parts
┌┌D I
[
┌┌I J
particleIndex
┌┌J W
]
┌┌W X
.
┌┌X Y
	PredPoint
┌┌Y b
)
┌┌b c
;
┌┌c d
float
└└ 
	influence
└└ '
=
└└( )
SmoothingKernel
└└* 9
(
└└9 :
dist
└└: >
)
└└> ?
;
└└? @
density
┘┘ 
+=
┘┘  "
	influence
┘┘# ,
*
┘┘- .
mass
┘┘/ 3
;
┘┘3 4
}
├├ 
}
┤┤ 
}
┬┬ 
return
┴┴ 
density
┴┴ 
;
┴┴ 
}
┼┼ 	
float
▄▄ 
SmoothingKernel
▄▄ 
(
▄▄ 
float
▄▄ #
dist
▄▄$ (
)
▄▄( )
{
██ 	
if
▌▌ 
(
▌▌ 
dist
▌▌ 
>=
▌▌ 
smoothingRadius
▌▌ '
)
▌▌' (
return
▌▌) /
$num
▌▌0 1
;
▌▌1 2
float
░░ 
volume
░░ 
=
░░ 
(
░░ 
float
░░ !
)
░░! "
(
░░" #
Math
░░# '
.
░░' (
PI
░░( *
*
░░+ ,
Math
░░- 1
.
░░1 2
Pow
░░2 5
(
░░5 6
smoothingRadius
░░6 E
,
░░E F
$num
░░G H
)
░░H I
/
░░J K
$num
░░L M
)
░░M N
;
░░N O
return
▒▒ 
(
▒▒ 
smoothingRadius
▒▒ #
-
▒▒$ %
dist
▒▒& *
)
▒▒* +
*
▒▒, -
(
▒▒. /
smoothingRadius
▒▒/ >
-
▒▒? @
dist
▒▒A E
)
▒▒E F
/
▒▒G H
volume
▒▒I O
;
▒▒O P
}
▓▓ 	
Vector3D
√√ 
<
√√ 
float
√√ 
>
√√ 
CalcPresureForce
√√ (
(
√√( )
int
√√) ,
index
√√- 2
)
√√2 3
{
≈≈ 	
Vector3D
≤≤ 
<
≤≤ 
float
≤≤ 
>
≤≤ 
PressureForce
≤≤ )
=
≤≤* +
new
≤≤, /
Vector3D
≤≤0 8
<
≤≤8 9
float
≤≤9 >
>
≤≤> ?
(
≤≤? @
$num
≤≤@ A
,
≤≤A B
$num
≤≤C D
,
≤≤D E
$num
≤≤F G
)
≤≤G H
;
≤≤H I
(
   
int
   
CenterX
   
,
   
int
   
CenterY
   %
,
  % &
int
  ' *
CenterZ
  + 2
)
  2 3
=
  4 5!
PositionToCellCoord
  6 I
(
  I J
parts
  J O
[
  O P
index
  P U
]
  U V
.
  V W
	PredPoint
  W `
,
  ` a
smoothingRadius
  b q
)
  q r
;
  r s
float
⌡⌡ 
	sqrRadius
⌡⌡ 
=
⌡⌡ 
smoothingRadius
⌡⌡ -
*
⌡⌡. /
smoothingRadius
⌡⌡0 ?
;
⌡⌡? @
foreach
²² 
(
²² 
Vector3D
²² 
<
²² 
float
²² #
>
²²# $
off
²²% (
in
²²) +
	Offsets2D
²², 5
)
²²5 6
{
·· 
uint
÷÷ 
key
÷÷ 
=
÷÷ 
GetKeyFromHash
÷÷ )
(
÷÷) *
HashCell
÷÷* 2
(
÷÷2 3
(
÷÷3 4
int
÷÷4 7
)
÷÷7 8
(
÷÷8 9
CenterX
÷÷9 @
+
÷÷A B
off
÷÷C F
.
÷÷F G
X
÷÷G H
)
÷÷H I
,
÷÷I J
(
÷÷K L
int
÷÷L O
)
÷÷O P
(
÷÷P Q
CenterY
÷÷Q X
+
÷÷Y Z
off
÷÷[ ^
.
÷÷^ _
Y
÷÷_ `
)
÷÷` a
,
÷÷a b
(
÷÷c d
int
÷÷d g
)
÷÷g h
(
÷÷h i
CenterZ
÷÷i p
+
÷÷q r
off
÷÷s v
.
÷÷v w
Z
÷÷w x
)
÷÷x y
)
÷÷y z
)
÷÷z {
;
÷÷{ |
int
══ 
cellStartIndex
══ "
=
══# $
StartIndices
══% 1
[
══1 2
key
══2 5
]
══5 6
;
══6 7
for
╒╒ 
(
╒╒ 
int
╒╒ 
i
╒╒ 
=
╒╒ 
cellStartIndex
╒╒ +
;
╒╒+ ,
i
╒╒- .
<
╒╒/ 0
SpatialLookup
╒╒1 >
.
╒╒> ?
Length
╒╒? E
;
╒╒E F
i
╒╒G H
++
╒╒H J
)
╒╒J K
{
ёё 
if
╓╓ 
(
╓╓ 
SpatialLookup
╓╓ %
[
╓╓% &
i
╓╓& '
]
╓╓' (
.
╓╓( )
CKey
╓╓) -
!=
╓╓. 0
key
╓╓1 4
)
╓╓4 5
break
╓╓6 ;
;
╓╓; <
int
╕╕ 
particleIndex
╕╕ %
=
╕╕& '
SpatialLookup
╕╕( 5
[
╕╕5 6
i
╕╕6 7
]
╕╕7 8
.
╕╕8 9
index
╕╕9 >
;
╕╕> ?
float
╖╖ 
sqrDist
╖╖ !
=
╖╖" #
(
╖╖$ %
parts
╖╖% *
[
╖╖* +
particleIndex
╖╖+ 8
]
╖╖8 9
.
╖╖9 :
point
╖╖: ?
-
╖╖@ A
parts
╖╖B G
[
╖╖G H
index
╖╖H M
]
╖╖M N
.
╖╖N O
point
╖╖O T
)
╖╖T U
.
╖╖U V
LengthSquared
╖╖V c
;
╖╖c d
if
╗╗ 
(
╗╗ 
sqrDist
╗╗ 
<=
╗╗  "
	sqrRadius
╗╗# ,
)
╗╗, -
{
╘╘ 
if
╙╙ 
(
╙╙ 
index
╙╙ !
==
╙╙" $
particleIndex
╙╙% 2
)
╙╙2 3
continue
╙╙4 <
;
╙╙< =
Vector3D
╚╚  
<
╚╚  !
float
╚╚! &
>
╚╚& '
offset
╚╚( .
=
╚╚/ 0
parts
╚╚1 6
[
╚╚6 7
particleIndex
╚╚7 D
]
╚╚D E
.
╚╚E F
	PredPoint
╚╚F O
-
╚╚P Q
parts
╚╚R W
[
╚╚W X
index
╚╚X ]
]
╚╚] ^
.
╚╚^ _
	PredPoint
╚╚_ h
;
╚╚h i
float
╛╛ 
dist
╛╛ "
=
╛╛# $
offset
╛╛% +
.
╛╛+ ,
Length
╛╛, 2
;
╛╛2 3
Vector3D
╜╜  
<
╜╜  !
float
╜╜! &
>
╜╜& '
dir
╜╜( +
=
╜╜, -
dist
╜╜. 2
==
╜╜3 5
$num
╜╜6 <
?
╜╜= >
GetRandomDir
╜╜? K
(
╜╜K L
)
╜╜L M
:
╜╜N O
offset
╜╜P V
/
╜╜W X
dist
╜╜Y ]
;
╜╜] ^
float
╞╞ 
slope
╞╞ #
=
╞╞$ %'
SmoothingKernelDerivative
╞╞& ?
(
╞╞? @
dist
╞╞@ D
)
╞╞D E
;
╞╞E F
float
╟╟ 
density
╟╟ %
=
╟╟& '
	densities
╟╟( 1
[
╟╟1 2
particleIndex
╟╟2 ?
]
╟╟? @
;
╟╟@ A
float
╠╠ 
sharedpressure
╠╠ ,
=
╠╠- . 
CalcSharedPressure
╠╠/ A
(
╠╠A B
density
╠╠B I
,
╠╠I J
	densities
╠╠K T
[
╠╠T U
index
╠╠U Z
]
╠╠Z [
)
╠╠[ \
;
╠╠\ ]
PressureForce
╡╡ %
+=
╡╡& (
sharedpressure
╡╡) 7
*
╡╡8 9
dir
╡╡: =
*
╡╡> ?
slope
╡╡@ E
*
╡╡F G
$num
╡╡H I
/
╡╡J K
density
╡╡L S
;
╡╡S T
}
ЁЁ 
}
╢╢ 
}
╣╣ 
return
╤╤ 
PressureForce
╤╤  
;
╤╤  !
}
╥╥ 	
float
╦╦ '
SmoothingKernelDerivative
╦╦ '
(
╦╦' (
float
╦╦( -
dist
╦╦. 2
)
╦╦2 3
{
╧╧ 	
if
╨╨ 
(
╨╨ 
dist
╨╨ 
>=
╨╨ 
smoothingRadius
╨╨ '
)
╨╨' (
return
╨╨) /
$num
╨╨0 1
;
╨╨1 2
float
╪╪ 
scale
╪╪ 
=
╪╪ 
(
╪╪ 
float
╪╪  
)
╪╪  !
(
╪╪! "
$num
╪╪" $
/
╪╪% &
(
╪╪' (
Math
╪╪( ,
.
╪╪, -
Pow
╪╪- 0
(
╪╪0 1
smoothingRadius
╪╪1 @
,
╪╪@ A
$num
╪╪B C
)
╪╪C D
*
╪╪E F
Math
╪╪G K
.
╪╪K L
PI
╪╪L N
)
╪╪N O
)
╪╪O P
;
╪╪P Q
return
╫╫ 
(
╫╫ 
dist
╫╫ 
-
╫╫ 
smoothingRadius
╫╫ *
)
╫╫* +
*
╫╫, -
scale
╫╫. 3
;
╫╫3 4
}
╬╬ 	
private
©© 
float
©©  
CalcSharedPressure
©© (
(
©©( )
float
©©) .
DensA
©©/ 4
,
©©4 5
float
©©6 ;
DensB
©©< A
)
©©A B
{
юю 	
float
аа 
	pressureA
аа 
=
аа &
ConvertDensityToPressure
аа 6
(
аа6 7
DensA
аа7 <
)
аа< =
;
аа= >
float
бб 
	pressureB
бб 
=
бб &
ConvertDensityToPressure
бб 6
(
бб6 7
DensB
бб7 <
)
бб< =
;
бб= >
return
цц 
(
цц 
	pressureA
цц 
+
цц 
	pressureB
цц  )
)
цц) *
/
цц+ ,
$num
цц- .
;
цц. /
}
дд 	
private
ее 
Vector3D
ее 
<
ее 
float
ее 
>
ее 
GetRandomDir
ее  ,
(
ее, -
)
ее- .
{
фф 	
Random
гг 
r
гг 
=
гг 
new
гг 
Random
гг !
(
гг! "
)
гг" #
;
гг# $
return
хх 
new
хх 
Vector3D
хх 
<
хх  
float
хх  %
>
хх% &
(
хх& '
r
хх' (
.
хх( )
Next
хх) -
(
хх- .
-
хх. /
$num
хх/ 0
,
хх0 1
$num
хх2 3
)
хх3 4
,
хх4 5
r
хх6 7
.
хх7 8
Next
хх8 <
(
хх< =
-
хх= >
$num
хх> ?
,
хх? @
$num
ххA B
)
ххB C
,
ххC D
r
ххE F
.
ххF G
Next
ххG K
(
ххK L
-
ххL M
$num
ххM N
,
ххN O
$num
ххP Q
)
ххQ R
)
ххR S
;
ххS T
}
ии 	
float
йй &
ConvertDensityToPressure
йй &
(
йй& '
float
йй' ,
density
йй- 4
)
йй4 5
{
кк 	
float
лл 
densityError
лл 
=
лл  
density
лл! (
-
лл) *
targetDensity
лл+ 8
;
лл8 9
float
мм 
pressure
мм 
=
мм 
densityError
мм )
*
мм* + 
pressureMultiplier
мм, >
;
мм> ?
return
нн 
pressure
нн 
;
нн 
}
оо 	
public
сс 
Vector3D
сс 
<
сс 
float
сс 
>
сс %
CalculateViscosityForce
сс 6
(
сс6 7
int
сс7 :
index
сс; @
)
сс@ A
{
тт 	
Vector3D
уу 
<
уу 
float
уу 
>
уу 
ViscosityForce
уу *
=
уу+ ,
Vector3D
уу- 5
<
уу5 6
float
уу6 ;
>
уу; <
.
уу< =
Zero
уу= A
;
ууA B
(
вв 
int
вв 
CenterX
вв 
,
вв 
int
вв 
CenterY
вв %
,
вв% &
int
вв' *
CenterZ
вв+ 2
)
вв2 3
=
вв4 5!
PositionToCellCoord
вв6 I
(
ввI J
parts
ввJ O
[
ввO P
index
ввP U
]
ввU V
.
ввV W
point
ввW \
,
вв\ ]
smoothingRadius
вв^ m
)
ввm n
;
ввn o
float
ьь 
	sqrRadius
ьь 
=
ьь 
smoothingRadius
ьь -
*
ьь. /
smoothingRadius
ьь0 ?
;
ьь? @
foreach
зз 
(
зз 
Vector3D
зз 
<
зз 
float
зз #
>
зз# $
off
зз% (
in
зз) +
	Offsets2D
зз, 5
)
зз5 6
{
шш 
uint
ээ 
key
ээ 
=
ээ 
GetKeyFromHash
ээ )
(
ээ) *
HashCell
ээ* 2
(
ээ2 3
(
ээ3 4
int
ээ4 7
)
ээ7 8
(
ээ8 9
CenterX
ээ9 @
+
ээA B
off
ээC F
.
ээF G
X
ээG H
)
ээH I
,
ээI J
(
ээK L
int
ээL O
)
ээO P
(
ээP Q
CenterY
ээQ X
+
ээY Z
off
ээ[ ^
.
ээ^ _
Y
ээ_ `
)
ээ` a
,
ээa b
(
ээc d
int
ээd g
)
ээg h
(
ээh i
CenterZ
ээi p
+
ээq r
off
ээs v
.
ээv w
Z
ээw x
)
ээx y
)
ээy z
)
ээz {
;
ээ{ |
int
щщ 
cellStartIndex
щщ "
=
щщ# $
StartIndices
щщ% 1
[
щщ1 2
key
щщ2 5
]
щщ5 6
;
щщ6 7
for
ъъ 
(
ъъ 
int
ъъ 
i
ъъ 
=
ъъ 
cellStartIndex
ъъ +
;
ъъ+ ,
i
ъъ- .
<
ъъ/ 0
SpatialLookup
ъъ1 >
.
ъъ> ?
Length
ъъ? E
;
ъъE F
i
ъъG H
++
ъъH J
)
ъъJ K
{
ЮЮ 
if
АА 
(
АА 
SpatialLookup
АА %
[
АА% &
i
АА& '
]
АА' (
.
АА( )
CKey
АА) -
!=
АА. 0
key
АА1 4
)
АА4 5
break
АА6 ;
;
АА; <
int
ЦЦ 
particleIndex
ЦЦ %
=
ЦЦ& '
SpatialLookup
ЦЦ( 5
[
ЦЦ5 6
i
ЦЦ6 7
]
ЦЦ7 8
.
ЦЦ8 9
index
ЦЦ9 >
;
ЦЦ> ?
float
ДД 
sqrDist
ДД !
=
ДД" #
(
ДД$ %
parts
ДД% *
[
ДД* +
particleIndex
ДД+ 8
]
ДД8 9
.
ДД9 :
point
ДД: ?
-
ДД@ A
parts
ДДB G
[
ДДG H
index
ДДH M
]
ДДM N
.
ДДN O
point
ДДO T
)
ДДT U
.
ДДU V
LengthSquared
ДДV c
;
ДДc d
if
ЕЕ 
(
ЕЕ 
sqrDist
ЕЕ 
<=
ЕЕ  "
	sqrRadius
ЕЕ# ,
)
ЕЕ, -
{
ФФ 
if
ГГ 
(
ГГ 
index
ГГ !
==
ГГ" $
particleIndex
ГГ% 2
)
ГГ2 3
continue
ГГ4 <
;
ГГ< =
float
ИИ 
dist
ИИ "
=
ИИ# $
Vector3D
ИИ% -
.
ИИ- .
Distance
ИИ. 6
(
ИИ6 7
parts
ИИ7 <
[
ИИ< =
index
ИИ= B
]
ИИB C
.
ИИC D
point
ИИD I
,
ИИI J
parts
ИИK P
[
ИИP Q
particleIndex
ИИQ ^
]
ИИ^ _
.
ИИ_ `
point
ИИ` e
)
ИИe f
;
ИИf g
float
ЙЙ 
	influence
ЙЙ '
=
ЙЙ( )&
ViscositySmoothingKernel
ЙЙ* B
(
ЙЙB C
dist
ЙЙC G
)
ЙЙG H
;
ЙЙH I
ViscosityForce
КК &
+=
КК' )
(
КК* +
parts
КК+ 0
[
КК0 1
particleIndex
КК1 >
]
КК> ?
.
КК? @
velocity
КК@ H
-
ККI J
parts
ККK P
[
ККP Q
index
ККQ V
]
ККV W
.
ККW X
velocity
ККX `
)
КК` a
*
ККb c
	influence
ККd m
;
ККm n
}
ЛЛ 
}
ММ 
}
НН 
return
ОО 
ViscosityForce
ОО !
;
ОО! "
}
ПП 	
private
ЯЯ 
float
ЯЯ &
ViscositySmoothingKernel
ЯЯ .
(
ЯЯ. /
float
ЯЯ/ 4
dist
ЯЯ5 9
)
ЯЯ9 :
{
РР 	
if
СС 
(
СС 
dist
СС 
>=
СС 
smoothingRadius
СС '
)
СС' (
return
СС) /
$num
СС0 1
;
СС1 2
float
УУ 
volume
УУ 
=
УУ 
(
УУ 
float
УУ !
)
УУ! "
(
УУ" #
Math
УУ# '
.
УУ' (
PI
УУ( *
*
УУ+ ,
Math
УУ- 1
.
УУ1 2
Pow
УУ2 5
(
УУ5 6
smoothingRadius
УУ6 E
,
УУE F
$num
УУG H
)
УУH I
/
УУJ K
$num
УУL M
)
УУM N
;
УУN O
float
ЖЖ 
val
ЖЖ 
=
ЖЖ 
Math
ЖЖ 
.
ЖЖ 
Max
ЖЖ  
(
ЖЖ  !
$num
ЖЖ! "
,
ЖЖ" #
smoothingRadius
ЖЖ$ 3
*
ЖЖ4 5
smoothingRadius
ЖЖ6 E
-
ЖЖF G
dist
ЖЖH L
*
ЖЖM N
dist
ЖЖO S
)
ЖЖS T
;
ЖЖT U
return
ВВ 
val
ВВ 
*
ВВ 
val
ВВ 
*
ВВ 
val
ВВ "
/
ВВ# $
volume
ВВ% +
;
ВВ+ ,
}
ЬЬ 	
public
ЭЭ 
void
ЭЭ !
UpdateSpatialLookup
ЭЭ '
(
ЭЭ' (
List
ЭЭ( ,
<
ЭЭ, -

Particle3D
ЭЭ- 7
>
ЭЭ7 8
parts
ЭЭ9 >
,
ЭЭ> ?
float
ЭЭ@ E
radius
ЭЭF L
)
ЭЭL M
{
ЩЩ 	
Parallel
ЧЧ 
.
ЧЧ 
For
ЧЧ 
(
ЧЧ 
$num
ЧЧ 
,
ЧЧ 
parts
ЧЧ !
.
ЧЧ! "
Count
ЧЧ" '
,
ЧЧ' (
i
ЧЧ) *
=>
ЧЧ+ -
{
ЪЪ 
(
── 
int
── 
cellX
── 
,
── 
int
── 
cellY
──  %
,
──% &
int
──' *
cellZ
──+ 0
)
──0 1
=
──2 3!
PositionToCellCoord
──4 G
(
──G H
parts
──H M
[
──M N
i
──N O
]
──O P
,
──P Q
radius
──R X
)
──X Y
;
──Y Z
uint
││ 
CKey
││ 
=
││ 
GetKeyFromHash
││ *
(
││* +
HashCell
││+ 3
(
││3 4
cellX
││4 9
,
││9 :
cellY
││; @
,
││@ A
cellZ
││B G
)
││G H
)
││H I
;
││I J
SpatialLookup
┌┌ 
[
┌┌ 
i
┌┌ 
]
┌┌  
=
┌┌! "
new
┌┌# &
Entry
┌┌' ,
(
┌┌, -
i
┌┌- .
,
┌┌. /
CKey
┌┌0 4
)
┌┌4 5
;
┌┌5 6
StartIndices
┐┐ 
[
┐┐ 
i
┐┐ 
]
┐┐ 
=
┐┐  !
int
┐┐" %
.
┐┐% &
MaxValue
┐┐& .
;
┐┐. /
}
└└ 
)
└└ 
;
└└ 
Array
├├ 
.
├├ 
Sort
├├ 
(
├├ 
SpatialLookup
├├ $
)
├├$ %
;
├├% &
Parallel
┬┬ 
.
┬┬ 
For
┬┬ 
(
┬┬ 
$num
┬┬ 
,
┬┬ 
parts
┬┬ !
.
┬┬! "
Count
┬┬" '
,
┬┬' (
i
┬┬) *
=>
┬┬+ -
{
┴┴ 
uint
┼┼ 
key
┼┼ 
=
┼┼ 
SpatialLookup
┼┼ (
[
┼┼( )
i
┼┼) *
]
┼┼* +
.
┼┼+ ,
CKey
┼┼, 0
;
┼┼0 1
uint
▀▀ 
KeyPrev
▀▀ 
=
▀▀ 
i
▀▀  
==
▀▀! #
$num
▀▀$ %
?
▀▀& '
int
▀▀( +
.
▀▀+ ,
MaxValue
▀▀, 4
:
▀▀5 6
SpatialLookup
▀▀7 D
[
▀▀D E
i
▀▀E F
-
▀▀G H
$num
▀▀I J
]
▀▀J K
.
▀▀K L
CKey
▀▀L P
;
▀▀P Q
if
▄▄ 
(
▄▄ 
key
▄▄ 
!=
▄▄ 
KeyPrev
▄▄ "
)
▄▄" #
{
██ 
StartIndices
▌▌  
[
▌▌  !
key
▌▌! $
]
▌▌$ %
=
▌▌& '
i
▌▌( )
;
▌▌) *
}
▐▐ 
}
░░ 
)
░░ 
;
░░ 
}
▒▒ 	
private
▓▓ 
uint
▓▓ 
HashCell
▓▓ 
(
▓▓ 
int
▓▓ !
cellX
▓▓" '
,
▓▓' (
int
▓▓) ,
cellY
▓▓- 2
,
▓▓2 3
int
▓▓4 7
cellZ
▓▓8 =
)
▓▓= >
{
⌠⌠ 	
uint
■■ 
a
■■ 
=
■■ 
(
■■ 
uint
■■ 
)
■■ 
(
■■ 
cellX
■■ !
*
■■" #
$num
■■$ )
)
■■) *
;
■■* +
uint
∙∙ 
b
∙∙ 
=
∙∙ 
(
∙∙ 
uint
∙∙ 
)
∙∙ 
(
∙∙ 
cellY
∙∙ !
*
∙∙" #
$num
∙∙$ +
)
∙∙+ ,
;
∙∙, -
return
√√ 
a
√√ 
+
√√ 
b
√√ 
;
√√ 
}
≈≈ 	
private
≤≤ 
uint
≤≤ 
GetKeyFromHash
≤≤ #
(
≤≤# $
uint
≤≤$ (
HC
≤≤) +
)
≤≤+ ,
{
≥≥ 	
return
   
HC
   
%
   
(
   
uint
   
)
   
SpatialLookup
   +
.
  + ,
Length
  , 2
;
  2 3
}
⌡⌡ 	
private
°° 
(
°° 
int
°° 
cellX
°° 
,
°° 
int
°° 
cellY
°°  %
,
°°% &
int
°°' *
cellZ
°°+ 0
)
°°0 1!
PositionToCellCoord
°°2 E
(
°°E F

Particle3D
°°F P
particle
°°Q Y
,
°°Y Z
float
°°[ `
radius
°°a g
)
°°g h
{
²² 	
int
·· 
cellX
·· 
=
·· 
(
·· 
int
·· 
)
·· 
(
·· 
particle
·· &
.
··& '
	PredPoint
··' 0
.
··0 1
X
··1 2
/
··3 4
radius
··5 ;
)
··; <
;
··< =
int
÷÷ 
cellY
÷÷ 
=
÷÷ 
(
÷÷ 
int
÷÷ 
)
÷÷ 
(
÷÷ 
particle
÷÷ &
.
÷÷& '
	PredPoint
÷÷' 0
.
÷÷0 1
Y
÷÷1 2
/
÷÷3 4
radius
÷÷5 ;
)
÷÷; <
;
÷÷< =
int
══ 
cellZ
══ 
=
══ 
(
══ 
int
══ 
)
══ 
(
══ 
particle
══ &
.
══& '
	PredPoint
══' 0
.
══0 1
Z
══1 2
/
══3 4
radius
══5 ;
)
══; <
;
══< =
return
║║ 
(
║║ 
cellX
║║ 
,
║║ 
cellY
║║  
,
║║  !
cellZ
║║" '
)
║║' (
;
║║( )
}
╒╒ 	
private
ёё 
(
ёё 
int
ёё 
cellX
ёё 
,
ёё 
int
ёё 
cellY
ёё  %
,
ёё% &
int
ёё' *
cellZ
ёё+ 0
)
ёё0 1!
PositionToCellCoord
ёё2 E
(
ёёE F
Vector3D
ёёF N
<
ёёN O
float
ёёO T
>
ёёT U
Point
ёёV [
,
ёё[ \
float
ёё] b
radius
ёёc i
)
ёёi j
{
╓╓ 	
int
╔╔ 
cellX
╔╔ 
=
╔╔ 
(
╔╔ 
int
╔╔ 
)
╔╔ 
(
╔╔ 
Point
╔╔ #
.
╔╔# $
X
╔╔$ %
/
╔╔& '
radius
╔╔( .
)
╔╔. /
;
╔╔/ 0
int
╕╕ 
cellY
╕╕ 
=
╕╕ 
(
╕╕ 
int
╕╕ 
)
╕╕ 
(
╕╕ 
Point
╕╕ #
.
╕╕# $
Y
╕╕$ %
/
╕╕& '
radius
╕╕( .
)
╕╕. /
;
╕╕/ 0
int
╖╖ 
cellZ
╖╖ 
=
╖╖ 
(
╖╖ 
int
╖╖ 
)
╖╖ 
(
╖╖ 
Point
╖╖ #
.
╖╖# $
Z
╖╖$ %
/
╖╖& '
radius
╖╖( .
)
╖╖. /
;
╖╖/ 0
return
╗╗ 
(
╗╗ 
cellX
╗╗ 
,
╗╗ 
cellY
╗╗  
,
╗╗  !
cellZ
╗╗" '
)
╗╗' (
;
╗╗( )
}
╘╘ 	
}
╚╚ 
}╛╛ нП
aH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Simulators\Simulator_DEPRECATED.cs
	namespace

 	
ArctisAurora


 
.

 

Simulators

 !
{ 
public 

class 
Entry 
: 
IComparable $
,$ %
IComparable& 1
<1 2
Entry2 7
>7 8
{ 
public 
int 
index 
; 
public 
uint 
CKey 
; 
public 
Entry 
( 
int 
i 
, 
uint  
ck! #
)# $
{ 	
index 
= 
i 
; 
CKey 
= 
ck 
; 
} 	
public 
int 
	CompareTo 
( 
Entry "
other# (
)( )
{ 	
return 
CKey 
. 
	CompareTo !
(! "
other" '
.' (
CKey( ,
), -
;- .
} 	
public 
int 
	CompareTo 
( 
object #
?# $
obj% (
)( )
{ 	
return 
CKey 
. 
	CompareTo !
(! "
obj" %
)% &
;& '
} 	
} 
public!! 

class!!  
Simulator_DEPRECATED!! %
{"" 
Frame$$ 
SC$$ 
;$$ 
Vector2%% 
simSize%% 
;%% 
List'' 
<'' 
Force'' 
>'' 
forces'' 
='' 
new''  
List''! %
<''% &
Force''& +
>''+ ,
('', -
)''- .
;''. /
Vector2(( 

ConstForce(( 
=(( 
new((  
Vector2((! (
(((( )
)(() *
;((* +
List)) 
<)) 

Particle2D)) 
>)) 
parts)) 
;)) 
float** 
[** 
]** 
	densities** 
;** 
public,, 
float,, 
targetDensity,, "
=,,# $
$num,,% -
;,,- .
public-- 
float-- 
smoothingRadius-- $
=--% &
$num--' *
;--* +
public.. 
float.. 
pressureMultiplier.. '
=..( )
$num..* /
;../ 0
public// 
float// 
viscosityStr// !
=//" #
$num//$ '
;//' (
public00 
float00 
GravStrength00 !
=00" #
$num00$ &
;00& '
Entry22 
[22 
]22 
SpatialLookup22 
;22 
int33 
[33 
]33 
StartIndices33 
;33 
public44 
Vector244 
[44 
]44 
	Offsets2D44 "
=44# $
new44% (
Vector244) 0
[440 1
$num441 2
]442 3
;443 4
public66  
Simulator_DEPRECATED66 #
(66# $
)66$ %
{77 	
Gravity88 
g88 
=88 
new88 
Gravity88 #
(88# $
new88$ '
PointF88( .
(88. /
$num88/ 0
,880 1
$num882 6
)886 7
)887 8
;888 9
forces99 
.99 
Add99 
(99 
g99 
)99 
;99 
SpatialLookup;; 
=;; 
new;; 
Entry;;  %
[;;% &
parts;;& +
.;;+ ,
Count;;, 1
];;1 2
;;;2 3
StartIndices<< 
=<< 
new<< 
int<< "
[<<" #
parts<<# (
.<<( )
Count<<) .
]<<. /
;<</ 0
	densities== 
=== 
new== 
float== !
[==! "
parts==" '
.==' (
Count==( -
]==- .
;==. /
CreateOffsets?? 
(?? 
)?? 
;?? 
UpdateSpatialLookup@@ 
(@@  
parts@@  %
,@@% &
smoothingRadius@@' 6
)@@6 7
;@@7 8
CalcConstForcesAA 
(AA 
)AA 
;AA 
CreateOffsetsBB 
(BB 
)BB 
;BB 
UpdateUICC 
(CC 
)CC 
;CC 
}DD 	
publicFF  
Simulator_DEPRECATEDFF #
(FF# $
ListFF$ (
<FF( )

Particle2DFF) 3
>FF3 4
partsFF5 :
,FF: ;
FrameFF< A
SCFFB D
)FFD E
{GG 	
GravityHH 
gHH 
=HH 
newHH 
GravityHH #
(HH# $
newHH$ '
PointFHH( .
(HH. /
$numHH/ 0
,HH0 1
$numHH2 6
)HH6 7
)HH7 8
;HH8 9
forcesII 
.II 
AddII 
(II 
gII 
)II 
;II 
thisJJ 
.JJ 
partsJJ 
=JJ 
partsJJ 
;JJ 
thisKK 
.KK 
SCKK 
=KK 
SCKK 
;KK 
SpatialLookupMM 
=MM 
newMM 
EntryMM  %
[MM% &
partsMM& +
.MM+ ,
CountMM, 1
]MM1 2
;MM2 3
StartIndicesNN 
=NN 
newNN 
intNN "
[NN" #
partsNN# (
.NN( )
CountNN) .
]NN. /
;NN/ 0
	densitiesOO 
=OO 
newOO 
floatOO !
[OO! "
partsOO" '
.OO' (
CountOO( -
]OO- .
;OO. /
CreateOffsetsQQ 
(QQ 
)QQ 
;QQ 
UpdateSpatialLookupRR 
(RR  
partsRR  %
,RR% &
smoothingRadiusRR' 6
)RR6 7
;RR7 8
CalcConstForcesSS 
(SS 
)SS 
;SS 
UpdateDensitiesTT 
(TT 
)TT 
;TT 
UpdateUIUU 
(UU 
)UU 
;UU 
}VV 	
publicXX  
Simulator_DEPRECATEDXX #
(XX# $
FrameXX$ )
frameXX* /
,XX/ 0
ListXX1 5
<XX5 6

Particle2DXX6 @
>XX@ A
partsXXB G
,XXG H
Vector2XXI P
simSizeXXQ X
)XXX Y
{YY 	
SCZZ 
=ZZ 
frameZZ 
;ZZ 
Gravity[[ 
g[[ 
=[[ 
new[[ 
Gravity[[ #
([[# $
new[[$ '
PointF[[( .
([[. /
$num[[/ 0
,[[0 1
$num[[2 6
)[[6 7
)[[7 8
;[[8 9
forces\\ 
.\\ 
Add\\ 
(\\ 
g\\ 
)\\ 
;\\ 
this]] 
.]] 
parts]] 
=]] 
parts]] 
;]] 
SpatialLookup__ 
=__ 
new__ 
Entry__  %
[__% &
parts__& +
.__+ ,
Count__, 1
]__1 2
;__2 3
StartIndices`` 
=`` 
new`` 
int`` "
[``" #
parts``# (
.``( )
Count``) .
]``. /
;``/ 0
	densitiesaa 
=aa 
newaa 
floataa !
[aa! "
partsaa" '
.aa' (
Countaa( -
]aa- .
;aa. /
thisbb 
.bb 
simSizebb 
=bb 
simSizebb "
;bb" #
CreateOffsetsdd 
(dd 
)dd 
;dd 
UpdateSpatialLookupee 
(ee  
partsee  %
,ee% &
smoothingRadiusee' 6
)ee6 7
;ee7 8
CalcConstForcesff 
(ff 
)ff 
;ff 
UpdateDensitiesgg 
(gg 
)gg 
;gg 
UpdateUIhh 
(hh 
)hh 
;hh 
}ii 	
privatekk 
voidkk 
UpdateUIkk 
(kk 
)kk 
{ll 	
SCmm 
.mm 
TB_SmoothingRadiusmm !
.mm! "
Textmm" &
=mm' (
smoothingRadiusmm) 8
.mm8 9
ToStringmm9 A
(mmA B
)mmB C
;mmC D
SCnn 
.nn 
TB_TargetDensitynn 
.nn  
Textnn  $
=nn% &
targetDensitynn' 4
.nn4 5
ToStringnn5 =
(nn= >
)nn> ?
;nn? @
SCoo 
.oo  
TB_ViscosityStrengthoo #
.oo# $
Textoo$ (
=oo) *
viscosityStroo+ 7
.oo7 8
ToStringoo8 @
(oo@ A
)ooA B
;ooB C
SCpp 
.pp 
TB_PressureMultpp 
.pp 
Textpp #
=pp$ %
pressureMultiplierpp& 8
.pp8 9
ToStringpp9 A
(ppA B
)ppB C
;ppC D
SCqq 
.qq 

TB_GravStrqq 
.qq 
Textqq 
=qq  
GravStrengthqq! -
.qq- .
ToStringqq. 6
(qq6 7
)qq7 8
;qq8 9
}rr 	
publicss 
voidss 
CreateOffsetsss !
(ss! "
)ss" #
{tt 	
	Offsets2Duu 
[uu 
$numuu 
]uu 
=uu 
newuu 
Vector2uu &
(uu& '
-uu' (
$numuu( )
,uu) *
$numuu+ ,
)uu, -
;uu- .
	Offsets2Dvv 
[vv 
$numvv 
]vv 
=vv 
newvv 
Vector2vv &
(vv& '
$numvv' (
,vv( )
$numvv* +
)vv+ ,
;vv, -
	Offsets2Dww 
[ww 
$numww 
]ww 
=ww 
newww 
Vector2ww &
(ww& '
$numww' (
,ww( )
$numww* +
)ww+ ,
;ww, -
	Offsets2Dxx 
[xx 
$numxx 
]xx 
=xx 
newxx 
Vector2xx &
(xx& '
-xx' (
$numxx( )
,xx) *
$numxx+ ,
)xx, -
;xx- .
	Offsets2Dyy 
[yy 
$numyy 
]yy 
=yy 
newyy 
Vector2yy &
(yy& '
$numyy' (
,yy( )
$numyy* +
)yy+ ,
;yy, -
	Offsets2Dzz 
[zz 
$numzz 
]zz 
=zz 
newzz 
Vector2zz &
(zz& '
$numzz' (
,zz( )
$numzz* +
)zz+ ,
;zz, -
	Offsets2D{{ 
[{{ 
$num{{ 
]{{ 
={{ 
new{{ 
Vector2{{ &
({{& '
-{{' (
$num{{( )
,{{) *
-{{+ ,
$num{{, -
){{- .
;{{. /
	Offsets2D|| 
[|| 
$num|| 
]|| 
=|| 
new|| 
Vector2|| &
(||& '
$num||' (
,||( )
-||* +
$num||+ ,
)||, -
;||- .
	Offsets2D}} 
[}} 
$num}} 
]}} 
=}} 
new}} 
Vector2}} &
(}}& '
$num}}' (
,}}( )
-}}* +
$num}}+ ,
)}}, -
;}}- .
}~~ 	
public
── 
void
── 
CalcConstForces
── #
(
──# $
)
──$ %
{
││ 	
foreach
┌┌ 
(
┌┌ 
Force
┌┌ 
f
┌┌ 
in
┌┌ 
forces
┌┌  &
)
┌┌& '
{
┐┐ 

ConstForce
└└ 
.
└└ 
X
└└ 
=
└└ 

ConstForce
└└ )
.
└└) *
X
└└* +
+
└└, -
f
└└. /
.
└└/ 0
force
└└0 5
.
└└5 6
X
└└6 7
;
└└7 8

ConstForce
┘┘ 
.
┘┘ 
Y
┘┘ 
=
┘┘ 

ConstForce
┘┘ )
.
┘┘) *
Y
┘┘* +
+
┘┘, -
f
┘┘. /
.
┘┘/ 0
force
┘┘0 5
.
┘┘5 6
Y
┘┘6 7
;
┘┘7 8
}
├├ 
}
┤┤ 	
public
┴┴ 
void
┴┴ 
AddConstForce
┴┴ !
(
┴┴! "
Force
┴┴" '
f
┴┴( )
)
┴┴) *
{
┼┼ 	
forces
▀▀ 
.
▀▀ 
Add
▀▀ 
(
▀▀ 
f
▀▀ 
)
▀▀ 
;
▀▀ 
CalcConstForces
▄▄ 
(
▄▄ 
)
▄▄ 
;
▄▄ 
}
██ 	
public
▌▌ 
void
▌▌ 
AddConstForce
▌▌ !
(
▌▌! "
List
▌▌" &
<
▌▌& '
Force
▌▌' ,
>
▌▌, -
fs
▌▌. 0
)
▌▌0 1
{
▐▐ 	
forces
░░ 
.
░░ 
AddRange
░░ 
(
░░ 
fs
░░ 
)
░░ 
;
░░  
CalcConstForces
▒▒ 
(
▒▒ 
)
▒▒ 
;
▒▒ 
}
▓▓ 	
public
■■ 
void
■■ 
Update
■■ 
(
■■ 
TimeSpan
■■ #

engineTime
■■$ .
,
■■. /
float
■■0 5
	TimeScale
■■6 ?
)
■■? @
{
∙∙ 	
SimStep
√√ 
(
√√ 
	TimeScale
√√ 
)
√√ 
;
√√ 
}
≈≈ 	
public
≥≥ 
void
≥≥ 
SimStep
≥≥ 
(
≥≥ 
float
≥≥ !
	TimeScale
≥≥" +
)
≥≥+ ,
{
   	
Parallel
°° 
.
°° 
For
°° 
(
°° 
$num
°° 
,
°° 
parts
°° !
.
°°! "
Count
°°" '
,
°°' (
i
°°) *
=>
°°+ -
{
²² 
parts
·· 
[
·· 
i
·· 
]
·· 
.
·· 
velocity
·· !
+=
··" $

ConstForce
··% /
*
··0 1
	TimeScale
··2 ;
*
··< =
GravStrength
··> J
;
··J K
parts
÷÷ 
[
÷÷ 
i
÷÷ 
]
÷÷ 
.
÷÷ 
	PredPoint
÷÷ "
=
÷÷# $
parts
÷÷% *
[
÷÷* +
i
÷÷+ ,
]
÷÷, -
.
÷÷- .
point
÷÷. 3
+
÷÷4 5
parts
÷÷6 ;
[
÷÷; <
i
÷÷< =
]
÷÷= >
.
÷÷> ?
velocity
÷÷? G
;
÷÷G H
}
══ 
)
══ 
;
══ !
UpdateSpatialLookup
ёё 
(
ёё  
parts
ёё  %
,
ёё% &
smoothingRadius
ёё' 6
)
ёё6 7
;
ёё7 8
UpdateDensities
╔╔ 
(
╔╔ 
)
╔╔ 
;
╔╔ 
Parallel
╘╘ 
.
╘╘ 
For
╘╘ 
(
╘╘ 
$num
╘╘ 
,
╘╘ 
parts
╘╘ !
.
╘╘! "
Count
╘╘" '
,
╘╘' (
i
╘╘) *
=>
╘╘+ -
{
╙╙ 
Vector2
╚╚ 
pressureForce
╚╚ %
=
╚╚& '
CalcPresureForce
╚╚( 8
(
╚╚8 9
i
╚╚9 :
)
╚╚: ;
;
╚╚; <
Vector2
╛╛ 
pressureAccel
╛╛ %
=
╛╛& '
pressureForce
╛╛( 5
/
╛╛6 7
	densities
╛╛8 A
[
╛╛A B
i
╛╛B C
]
╛╛C D
;
╛╛D E
parts
╜╜ 
[
╜╜ 
i
╜╜ 
]
╜╜ 
.
╜╜ 
velocity
╜╜ !
+=
╜╜" $
pressureAccel
╜╜% 2
*
╜╜3 4
	TimeScale
╜╜5 >
;
╜╜> ?
}
╝╝ 
)
╝╝ 
;
╝╝ 
Parallel
╠╠ 
.
╠╠ 
For
╠╠ 
(
╠╠ 
$num
╠╠ 
,
╠╠ 
parts
╠╠ !
.
╠╠! "
Count
╠╠" '
,
╠╠' (
i
╠╠) *
=>
╠╠+ -
{
╡╡ 
Vector2
ЁЁ 
	ViscForce
ЁЁ !
=
ЁЁ" #%
CalculateViscosityForce
ЁЁ$ ;
(
ЁЁ; <
i
ЁЁ< =
)
ЁЁ= >
;
ЁЁ> ?
parts
╢╢ 
[
╢╢ 
i
╢╢ 
]
╢╢ 
.
╢╢ 
velocity
╢╢ !
+=
╢╢" $
	ViscForce
╢╢% .
*
╢╢/ 0
viscosityStr
╢╢1 =
;
╢╢= >
}
╣╣ 
)
╣╣ 
;
╣╣ 
UpdatePositions
╤╤ 
(
╤╤ 
parts
╤╤ !
)
╤╤! "
;
╤╤" #
}
╥╥ 	
void
╧╧ 
UpdatePositions
╧╧ 
(
╧╧ 
List
╧╧ !
<
╧╧! "

Particle2D
╧╧" ,
>
╧╧, -
parts
╧╧. 3
)
╧╧3 4
{
╨╨ 	
Parallel
╩╩ 
.
╩╩ 
For
╩╩ 
(
╩╩ 
$num
╩╩ 
,
╩╩ 
parts
╩╩ !
.
╩╩! "
Count
╩╩" '
,
╩╩' (
i
╩╩) *
=>
╩╩+ -
{
╪╪ 
if
╫╫ 
(
╫╫ 
parts
╫╫ 
[
╫╫ 
i
╫╫ 
]
╫╫ 
.
╫╫ 
point
╫╫ "
.
╫╫" #
X
╫╫# $
+
╫╫% &
parts
╫╫' ,
[
╫╫, -
i
╫╫- .
]
╫╫. /
.
╫╫/ 0
radius
╫╫0 6
+
╫╫7 8
parts
╫╫9 >
[
╫╫> ?
i
╫╫? @
]
╫╫@ A
.
╫╫A B
velocity
╫╫B J
.
╫╫J K
X
╫╫K L
>
╫╫M N
simSize
╫╫O V
.
╫╫V W
X
╫╫W X
)
╫╫X Y
parts
╬╬ 
[
╬╬ 
i
╬╬ 
]
╬╬ 
.
╬╬ 
velocity
╬╬ %
.
╬╬% &
X
╬╬& '
=
╬╬( )
Math
╬╬* .
.
╬╬. /
Abs
╬╬/ 2
(
╬╬2 3
parts
╬╬3 8
[
╬╬8 9
i
╬╬9 :
]
╬╬: ;
.
╬╬; <
velocity
╬╬< D
.
╬╬D E
X
╬╬E F
)
╬╬F G
*
╬╬H I
-
╬╬J K
$num
╬╬K O
;
╬╬O P
if
юю 
(
юю 
parts
юю 
[
юю 
i
юю 
]
юю 
.
юю 
point
юю "
.
юю" #
X
юю# $
+
юю% &
parts
юю' ,
[
юю, -
i
юю- .
]
юю. /
.
юю/ 0
radius
юю0 6
+
юю7 8
parts
юю9 >
[
юю> ?
i
юю? @
]
юю@ A
.
ююA B
velocity
ююB J
.
ююJ K
X
ююK L
<
ююM N
$num
ююO P
)
ююP Q
parts
аа 
[
аа 
i
аа 
]
аа 
.
аа 
velocity
аа %
.
аа% &
X
аа& '
=
аа( )
Math
аа* .
.
аа. /
Abs
аа/ 2
(
аа2 3
parts
аа3 8
[
аа8 9
i
аа9 :
]
аа: ;
.
аа; <
velocity
аа< D
.
ааD E
X
ааE F
)
ааF G
*
ааH I
$num
ааJ N
;
ааN O
if
цц 
(
цц 
parts
цц 
[
цц 
i
цц 
]
цц 
.
цц 
point
цц "
.
цц" #
Y
цц# $
+
цц% &
parts
цц' ,
[
цц, -
i
цц- .
]
цц. /
.
цц/ 0
radius
цц0 6
+
цц7 8
parts
цц9 >
[
цц> ?
i
цц? @
]
цц@ A
.
ццA B
velocity
ццB J
.
ццJ K
Y
ццK L
>
ццM N
simSize
ццO V
.
ццV W
Y
ццW X
)
ццX Y
parts
дд 
[
дд 
i
дд 
]
дд 
.
дд 
velocity
дд %
.
дд% &
Y
дд& '
=
дд( )
Math
дд* .
.
дд. /
Abs
дд/ 2
(
дд2 3
parts
дд3 8
[
дд8 9
i
дд9 :
]
дд: ;
.
дд; <
velocity
дд< D
.
ддD E
Y
ддE F
)
ддF G
*
ддH I
-
ддJ K
$num
ддK O
;
ддO P
if
фф 
(
фф 
parts
фф 
[
фф 
i
фф 
]
фф 
.
фф 
point
фф "
.
фф" #
Y
фф# $
+
фф% &
parts
фф' ,
[
фф, -
i
фф- .
]
фф. /
.
фф/ 0
radius
фф0 6
+
фф7 8
parts
фф9 >
[
фф> ?
i
фф? @
]
фф@ A
.
ффA B
velocity
ффB J
.
ффJ K
Y
ффK L
<
ффM N
$num
ффO P
)
ффP Q
parts
гг 
[
гг 
i
гг 
]
гг 
.
гг 
velocity
гг %
.
гг% &
Y
гг& '
=
гг( )
Math
гг* .
.
гг. /
Abs
гг/ 2
(
гг2 3
parts
гг3 8
[
гг8 9
i
гг9 :
]
гг: ;
.
гг; <
velocity
гг< D
.
ггD E
Y
ггE F
)
ггF G
*
ггH I
$num
ггJ N
;
ггN O
parts
ии 
[
ии 
i
ии 
]
ии 
.
ии 
point
ии 
+=
ии !
parts
ии" '
[
ии' (
i
ии( )
]
ии) *
.
ии* +
velocity
ии+ 3
;
ии3 4
}
йй 
)
йй 
;
йй 
}
кк 	
void
нн 
UpdateDensities
нн 
(
нн 
)
нн 
{
оо 	
Parallel
пп 
.
пп 
For
пп 
(
пп 
$num
пп 
,
пп 
parts
пп !
.
пп! "
Count
пп" '
,
пп' (
i
пп) *
=>
пп+ -
{
яя 
	densities
рр 
[
рр 
i
рр 
]
рр 
=
рр 
CalculateDensity
рр /
(
рр/ 0
parts
рр0 5
[
рр5 6
i
рр6 7
]
рр7 8
.
рр8 9
	PredPoint
рр9 B
)
ррB C
;
ррC D
}
сс 
)
сс 
;
сс 
}
тт 	
private
уу 
float
уу 
CalculateDensity
уу &
(
уу& '
Vector2
уу' .
samplePoint
уу/ :
)
уу: ;
{
жж 	
float
вв 
density
вв 
=
вв 
$num
вв 
;
вв 
const
ьь 
float
ьь 
mass
ьь 
=
ьь 
$num
ьь  
;
ьь  !
(
зз 
int
зз 
CenterX
зз 
,
зз 
int
зз 
CenterY
зз %
)
зз% &
=
зз' (!
PositionToCellCoord
зз) <
(
зз< =
samplePoint
зз= H
,
ззH I
smoothingRadius
ззJ Y
)
ззY Z
;
ззZ [
float
шш 
	sqrRadius
шш 
=
шш 
smoothingRadius
шш -
*
шш. /
smoothingRadius
шш0 ?
;
шш? @
foreach
щщ 
(
щщ 
Vector2
щщ 
off
щщ  
in
щщ! #
	Offsets2D
щщ$ -
)
щщ- .
{
чч 
uint
ъъ 
key
ъъ 
=
ъъ 
GetKeyFromHash
ъъ )
(
ъъ) *
HashCell
ъъ* 2
(
ъъ2 3
(
ъъ3 4
int
ъъ4 7
)
ъъ7 8
(
ъъ8 9
CenterX
ъъ9 @
+
ъъA B
off
ъъC F
.
ъъF G
X
ъъG H
)
ъъH I
,
ъъI J
(
ъъK L
int
ъъL O
)
ъъO P
(
ъъP Q
CenterY
ъъQ X
+
ъъY Z
off
ъъ[ ^
.
ъъ^ _
Y
ъъ_ `
)
ъъ` a
)
ъъa b
)
ъъb c
;
ъъc d
int
ЮЮ 
cellStartIndex
ЮЮ "
=
ЮЮ# $
StartIndices
ЮЮ% 1
[
ЮЮ1 2
key
ЮЮ2 5
]
ЮЮ5 6
;
ЮЮ6 7
for
ББ 
(
ББ 
int
ББ 
i
ББ 
=
ББ 
cellStartIndex
ББ +
;
ББ+ ,
i
ББ- .
<
ББ/ 0
SpatialLookup
ББ1 >
.
ББ> ?
Length
ББ? E
;
ББE F
i
ББG H
++
ББH J
)
ББJ K
{
ЦЦ 
if
ДД 
(
ДД 
SpatialLookup
ДД %
[
ДД% &
i
ДД& '
]
ДД' (
.
ДД( )
CKey
ДД) -
!=
ДД. 0
key
ДД1 4
)
ДД4 5
break
ДД6 ;
;
ДД; <
int
ФФ 
particleIndex
ФФ %
=
ФФ& '
SpatialLookup
ФФ( 5
[
ФФ5 6
i
ФФ6 7
]
ФФ7 8
.
ФФ8 9
index
ФФ9 >
;
ФФ> ?
float
ГГ 
sqrDist
ГГ !
=
ГГ" #
(
ГГ$ %
parts
ГГ% *
[
ГГ* +
particleIndex
ГГ+ 8
]
ГГ8 9
.
ГГ9 :
	PredPoint
ГГ: C
-
ГГD E
samplePoint
ГГF Q
)
ГГQ R
.
ГГR S
LengthSquared
ГГS `
(
ГГ` a
)
ГГa b
;
ГГb c
if
ХХ 
(
ХХ 
sqrDist
ХХ 
<=
ХХ  "
	sqrRadius
ХХ# ,
)
ХХ, -
{
ИИ 
float
ЙЙ 
dist
ЙЙ "
=
ЙЙ# $
Vector2
ЙЙ% ,
.
ЙЙ, -
Distance
ЙЙ- 5
(
ЙЙ5 6
samplePoint
ЙЙ6 A
,
ЙЙA B
parts
ЙЙC H
[
ЙЙH I
particleIndex
ЙЙI V
]
ЙЙV W
.
ЙЙW X
	PredPoint
ЙЙX a
)
ЙЙa b
;
ЙЙb c
float
ЛЛ 
	influence
ЛЛ '
=
ЛЛ( )
SmoothingKernel
ЛЛ* 9
(
ЛЛ9 :
dist
ЛЛ: >
)
ЛЛ> ?
;
ЛЛ? @
density
ММ 
+=
ММ  "
	influence
ММ# ,
*
ММ- .
mass
ММ/ 3
;
ММ3 4
}
НН 
}
ОО 
}
ПП 
return
ЯЯ 
density
ЯЯ 
;
ЯЯ 
}
РР 	
float
СС 
SmoothingKernel
СС 
(
СС 
float
СС #
dist
СС$ (
)
СС( )
{
ТТ 	
if
УУ 
(
УУ 
dist
УУ 
>=
УУ 
smoothingRadius
УУ '
)
УУ' (
return
УУ) /
$num
УУ0 1
;
УУ1 2
float
ВВ 
volume
ВВ 
=
ВВ 
(
ВВ 
float
ВВ !
)
ВВ! "
(
ВВ" #
Math
ВВ# '
.
ВВ' (
PI
ВВ( *
*
ВВ+ ,
Math
ВВ- 1
.
ВВ1 2
Pow
ВВ2 5
(
ВВ5 6
smoothingRadius
ВВ6 E
,
ВВE F
$num
ВВG H
)
ВВH I
/
ВВJ K
$num
ВВL M
)
ВВM N
;
ВВN O
return
ЬЬ 
(
ЬЬ 
smoothingRadius
ЬЬ #
-
ЬЬ$ %
dist
ЬЬ& *
)
ЬЬ* +
*
ЬЬ, -
(
ЬЬ. /
smoothingRadius
ЬЬ/ >
-
ЬЬ? @
dist
ЬЬA E
)
ЬЬE F
/
ЬЬG H
volume
ЬЬI O
;
ЬЬO P
}
ЫЫ 	
Vector2
ЩЩ 
CalcPresureForce
ЩЩ  
(
ЩЩ  !
int
ЩЩ! $
index
ЩЩ% *
)
ЩЩ* +
{
ЧЧ 	
Vector2
ЪЪ 
PressureForce
ЪЪ !
=
ЪЪ" #
new
ЪЪ$ '
Vector2
ЪЪ( /
(
ЪЪ/ 0
$num
ЪЪ0 1
,
ЪЪ1 2
$num
ЪЪ3 4
)
ЪЪ4 5
;
ЪЪ5 6
(
││ 
int
││ 
CenterX
││ 
,
││ 
int
││ 
CenterY
││ %
)
││% &
=
││' (!
PositionToCellCoord
││) <
(
││< =
parts
││= B
[
││B C
index
││C H
]
││H I
.
││I J
	PredPoint
││J S
,
││S T
smoothingRadius
││U d
)
││d e
;
││e f
float
┌┌ 
	sqrRadius
┌┌ 
=
┌┌ 
smoothingRadius
┌┌ -
*
┌┌. /
smoothingRadius
┌┌0 ?
;
┌┌? @
foreach
└└ 
(
└└ 
Vector2
└└ 
off
└└  
in
└└! #
	Offsets2D
└└$ -
)
└└- .
{
┘┘ 
uint
├├ 
key
├├ 
=
├├ 
GetKeyFromHash
├├ )
(
├├) *
HashCell
├├* 2
(
├├2 3
(
├├3 4
int
├├4 7
)
├├7 8
(
├├8 9
CenterX
├├9 @
+
├├A B
off
├├C F
.
├├F G
X
├├G H
)
├├H I
,
├├I J
(
├├K L
int
├├L O
)
├├O P
(
├├P Q
CenterY
├├Q X
+
├├Y Z
off
├├[ ^
.
├├^ _
Y
├├_ `
)
├├` a
)
├├a b
)
├├b c
;
├├c d
int
┤┤ 
cellStartIndex
┤┤ "
=
┤┤# $
StartIndices
┤┤% 1
[
┤┤1 2
key
┤┤2 5
]
┤┤5 6
;
┤┤6 7
for
┴┴ 
(
┴┴ 
int
┴┴ 
i
┴┴ 
=
┴┴ 
cellStartIndex
┴┴ +
;
┴┴+ ,
i
┴┴- .
<
┴┴/ 0
SpatialLookup
┴┴1 >
.
┴┴> ?
Length
┴┴? E
;
┴┴E F
i
┴┴G H
++
┴┴H J
)
┴┴J K
{
┼┼ 
if
▀▀ 
(
▀▀ 
SpatialLookup
▀▀ %
[
▀▀% &
i
▀▀& '
]
▀▀' (
.
▀▀( )
CKey
▀▀) -
!=
▀▀. 0
key
▀▀1 4
)
▀▀4 5
break
▀▀6 ;
;
▀▀; <
int
██ 
particleIndex
██ %
=
██& '
SpatialLookup
██( 5
[
██5 6
i
██6 7
]
██7 8
.
██8 9
index
██9 >
;
██> ?
float
▌▌ 
sqrDist
▌▌ !
=
▌▌" #
(
▌▌$ %
parts
▌▌% *
[
▌▌* +
particleIndex
▌▌+ 8
]
▌▌8 9
.
▌▌9 :
point
▌▌: ?
-
▌▌@ A
parts
▌▌B G
[
▌▌G H
index
▌▌H M
]
▌▌M N
.
▌▌N O
point
▌▌O T
)
▌▌T U
.
▌▌U V
LengthSquared
▌▌V c
(
▌▌c d
)
▌▌d e
;
▌▌e f
if
▐▐ 
(
▐▐ 
sqrDist
▐▐ 
<=
▐▐  "
	sqrRadius
▐▐# ,
)
▐▐, -
{
░░ 
if
▒▒ 
(
▒▒ 
index
▒▒ !
==
▒▒" $
particleIndex
▒▒% 2
)
▒▒2 3
continue
▒▒4 <
;
▒▒< =
Vector2
▓▓ 
offset
▓▓  &
=
▓▓' (
parts
▓▓) .
[
▓▓. /
particleIndex
▓▓/ <
]
▓▓< =
.
▓▓= >
	PredPoint
▓▓> G
-
▓▓H I
parts
▓▓J O
[
▓▓O P
index
▓▓P U
]
▓▓U V
.
▓▓V W
	PredPoint
▓▓W `
;
▓▓` a
float
⌠⌠ 
dist
⌠⌠ "
=
⌠⌠# $
offset
⌠⌠% +
.
⌠⌠+ ,
Length
⌠⌠, 2
(
⌠⌠2 3
)
⌠⌠3 4
;
⌠⌠4 5
Vector2
■■ 
dir
■■  #
=
■■$ %
dist
■■& *
==
■■+ -
$num
■■. /
?
■■0 1
GetRandomDir
■■2 >
(
■■> ?
)
■■? @
:
■■A B
offset
■■C I
/
■■J K
dist
■■L P
;
■■P Q
float
√√ 
slope
√√ #
=
√√$ %'
SmoothingKernelDerivative
√√& ?
(
√√? @
dist
√√@ D
)
√√D E
;
√√E F
float
≈≈ 
density
≈≈ %
=
≈≈& '
	densities
≈≈( 1
[
≈≈1 2
particleIndex
≈≈2 ?
]
≈≈? @
;
≈≈@ A
float
≤≤ 
sharedpressure
≤≤ ,
=
≤≤- . 
CalcSharedPressure
≤≤/ A
(
≤≤A B
density
≤≤B I
,
≤≤I J
	densities
≤≤K T
[
≤≤T U
index
≤≤U Z
]
≤≤Z [
)
≤≤[ \
;
≤≤\ ]
PressureForce
≥≥ %
+=
≥≥& (
sharedpressure
≥≥) 7
*
≥≥8 9
dir
≥≥: =
*
≥≥> ?
slope
≥≥@ E
*
≥≥F G
$num
≥≥H I
/
≥≥J K
density
≥≥L S
;
≥≥S T
}
   
}
⌡⌡ 
}
°° 
return
²² 
PressureForce
²²  
;
²²  !
}
·· 	
float
÷÷ '
SmoothingKernelDerivative
÷÷ '
(
÷÷' (
float
÷÷( -
dist
÷÷. 2
)
÷÷2 3
{
══ 	
if
║║ 
(
║║ 
dist
║║ 
>=
║║ 
smoothingRadius
║║ '
)
║║' (
return
║║) /
$num
║║0 1
;
║║1 2
float
ёё 
scale
ёё 
=
ёё 
(
ёё 
float
ёё  
)
ёё  !
(
ёё! "
$num
ёё" $
/
ёё% &
(
ёё' (
Math
ёё( ,
.
ёё, -
Pow
ёё- 0
(
ёё0 1
smoothingRadius
ёё1 @
,
ёё@ A
$num
ёёB C
)
ёёC D
*
ёёE F
Math
ёёG K
.
ёёK L
PI
ёёL N
)
ёёN O
)
ёёO P
;
ёёP Q
return
╓╓ 
(
╓╓ 
dist
╓╓ 
-
╓╓ 
smoothingRadius
╓╓ *
)
╓╓* +
*
╓╓, -
scale
╓╓. 3
;
╓╓3 4
}
╔╔ 	
private
╕╕ 
float
╕╕  
CalcSharedPressure
╕╕ (
(
╕╕( )
float
╕╕) .
DensA
╕╕/ 4
,
╕╕4 5
float
╕╕6 ;
DensB
╕╕< A
)
╕╕A B
{
╖╖ 	
float
╗╗ 
	pressureA
╗╗ 
=
╗╗ &
ConvertDensityToPressure
╗╗ 6
(
╗╗6 7
DensA
╗╗7 <
)
╗╗< =
;
╗╗= >
float
╘╘ 
	pressureB
╘╘ 
=
╘╘ &
ConvertDensityToPressure
╘╘ 6
(
╘╘6 7
DensB
╘╘7 <
)
╘╘< =
;
╘╘= >
return
╙╙ 
(
╙╙ 
	pressureA
╙╙ 
+
╙╙ 
	pressureB
╙╙  )
)
╙╙) *
/
╙╙+ ,
$num
╙╙- .
;
╙╙. /
}
╚╚ 	
private
╛╛ 
Vector2
╛╛ 
GetRandomDir
╛╛ $
(
╛╛$ %
)
╛╛% &
{
╜╜ 	
Random
╝╝ 
r
╝╝ 
=
╝╝ 
new
╝╝ 
Random
╝╝ !
(
╝╝! "
)
╝╝" #
;
╝╝# $
return
╞╞ 
new
╞╞ 
Vector2
╞╞ 
(
╞╞ 
r
╞╞  
.
╞╞  !
Next
╞╞! %
(
╞╞% &
$num
╞╞& '
,
╞╞' (
$num
╞╞) *
)
╞╞* +
,
╞╞+ ,
r
╞╞- .
.
╞╞. /
Next
╞╞/ 3
(
╞╞3 4
$num
╞╞4 5
,
╞╞5 6
$num
╞╞7 8
)
╞╞8 9
)
╞╞9 :
;
╞╞: ;
}
╟╟ 	
float
╠╠ &
ConvertDensityToPressure
╠╠ &
(
╠╠& '
float
╠╠' ,
density
╠╠- 4
)
╠╠4 5
{
╡╡ 	
float
ЁЁ 
densityError
ЁЁ 
=
ЁЁ  
density
ЁЁ! (
-
ЁЁ) *
targetDensity
ЁЁ+ 8
;
ЁЁ8 9
float
╢╢ 
pressure
╢╢ 
=
╢╢ 
densityError
╢╢ )
*
╢╢* + 
pressureMultiplier
╢╢, >
;
╢╢> ?
return
╣╣ 
pressure
╣╣ 
;
╣╣ 
}
╤╤ 	
public
╨╨ 
Vector2
╨╨ %
CalculateViscosityForce
╨╨ .
(
╨╨. /
int
╨╨/ 2
index
╨╨3 8
)
╨╨8 9
{
╩╩ 	
Vector2
╪╪ 
ViscosityForce
╪╪ "
=
╪╪# $
Vector2
╪╪% ,
.
╪╪, -
Zero
╪╪- 1
;
╪╪1 2
(
╬╬ 
int
╬╬ 
CenterX
╬╬ 
,
╬╬ 
int
╬╬ 
CenterY
╬╬ %
)
╬╬% &
=
╬╬' (!
PositionToCellCoord
╬╬) <
(
╬╬< =
parts
╬╬= B
[
╬╬B C
index
╬╬C H
]
╬╬H I
.
╬╬I J
point
╬╬J O
,
╬╬O P
smoothingRadius
╬╬Q `
)
╬╬` a
;
╬╬a b
float
©© 
	sqrRadius
©© 
=
©© 
smoothingRadius
©© -
*
©©. /
smoothingRadius
©©0 ?
;
©©? @
foreach
аа 
(
аа 
Vector2
аа 
off
аа  
in
аа! #
	Offsets2D
аа$ -
)
аа- .
{
бб 
uint
цц 
key
цц 
=
цц 
GetKeyFromHash
цц )
(
цц) *
HashCell
цц* 2
(
цц2 3
(
цц3 4
int
цц4 7
)
цц7 8
(
цц8 9
CenterX
цц9 @
+
ццA B
off
ццC F
.
ццF G
X
ццG H
)
ццH I
,
ццI J
(
ццK L
int
ццL O
)
ццO P
(
ццP Q
CenterY
ццQ X
+
ццY Z
off
цц[ ^
.
цц^ _
Y
цц_ `
)
цц` a
)
ццa b
)
ццb c
;
ццc d
int
дд 
cellStartIndex
дд "
=
дд# $
StartIndices
дд% 1
[
дд1 2
key
дд2 5
]
дд5 6
;
дд6 7
for
фф 
(
фф 
int
фф 
i
фф 
=
фф 
cellStartIndex
фф +
;
фф+ ,
i
фф- .
<
фф/ 0
SpatialLookup
фф1 >
.
фф> ?
Length
фф? E
;
ффE F
i
ффG H
++
ффH J
)
ффJ K
{
гг 
if
хх 
(
хх 
SpatialLookup
хх %
[
хх% &
i
хх& '
]
хх' (
.
хх( )
CKey
хх) -
!=
хх. 0
key
хх1 4
)
хх4 5
break
хх6 ;
;
хх; <
int
йй 
particleIndex
йй %
=
йй& '
SpatialLookup
йй( 5
[
йй5 6
i
йй6 7
]
йй7 8
.
йй8 9
index
йй9 >
;
йй> ?
float
кк 
sqrDist
кк !
=
кк" #
(
кк$ %
parts
кк% *
[
кк* +
particleIndex
кк+ 8
]
кк8 9
.
кк9 :
point
кк: ?
-
кк@ A
parts
ккB G
[
ккG H
index
ккH M
]
ккM N
.
ккN O
point
ккO T
)
ккT U
.
ккU V
LengthSquared
ккV c
(
ккc d
)
ккd e
;
ккe f
if
лл 
(
лл 
sqrDist
лл 
<=
лл  "
	sqrRadius
лл# ,
)
лл, -
{
мм 
if
нн 
(
нн 
index
нн !
==
нн" $
particleIndex
нн% 2
)
нн2 3
continue
нн4 <
;
нн< =
float
пп 
dist
пп "
=
пп# $
Vector2
пп% ,
.
пп, -
Distance
пп- 5
(
пп5 6
parts
пп6 ;
[
пп; <
index
пп< A
]
ппA B
.
ппB C
point
ппC H
,
ппH I
parts
ппJ O
[
ппO P
particleIndex
ппP ]
]
пп] ^
.
пп^ _
point
пп_ d
)
ппd e
;
ппe f
float
яя 
	influence
яя '
=
яя( )&
ViscositySmoothingKernel
яя* B
(
яяB C
dist
яяC G
)
яяG H
;
яяH I
ViscosityForce
рр &
+=
рр' )
(
рр* +
parts
рр+ 0
[
рр0 1
particleIndex
рр1 >
]
рр> ?
.
рр? @
velocity
рр@ H
-
ррI J
parts
ррK P
[
ррP Q
index
ррQ V
]
ррV W
.
ррW X
velocity
ррX `
)
рр` a
*
ррb c
	influence
ррd m
;
ррm n
}
сс 
}
тт 
}
уу 
return
жж 
ViscosityForce
жж !
;
жж! "
}
вв 	
private
ьь 
float
ьь &
ViscositySmoothingKernel
ьь .
(
ьь. /
float
ьь/ 4
dist
ьь5 9
)
ьь9 :
{
ыы 	
if
зз 
(
зз 
dist
зз 
>=
зз 
smoothingRadius
зз '
)
зз' (
return
зз) /
$num
зз0 1
;
зз1 2
float
ээ 
volume
ээ 
=
ээ 
(
ээ 
float
ээ !
)
ээ! "
(
ээ" #
Math
ээ# '
.
ээ' (
PI
ээ( *
*
ээ+ ,
Math
ээ- 1
.
ээ1 2
Pow
ээ2 5
(
ээ5 6
smoothingRadius
ээ6 E
,
ээE F
$num
ээG H
)
ээH I
/
ээJ K
$num
ээL M
)
ээM N
;
ээN O
float
щщ 
val
щщ 
=
щщ 
Math
щщ 
.
щщ 
Max
щщ  
(
щщ  !
$num
щщ! "
,
щщ" #
smoothingRadius
щщ$ 3
*
щщ4 5
smoothingRadius
щщ6 E
-
щщF G
dist
щщH L
*
щщM N
dist
щщO S
)
щщS T
;
щщT U
return
чч 
val
чч 
*
чч 
val
чч 
*
чч 
val
чч "
/
чч# $
volume
чч% +
;
чч+ ,
}
ъъ 	
public
ЦЦ 
void
ЦЦ !
UpdateSpatialLookup
ЦЦ '
(
ЦЦ' (
List
ЦЦ( ,
<
ЦЦ, -

Particle2D
ЦЦ- 7
>
ЦЦ7 8
parts
ЦЦ9 >
,
ЦЦ> ?
float
ЦЦ@ E
radius
ЦЦF L
)
ЦЦL M
{
ДД 	
Parallel
ЕЕ 
.
ЕЕ 
For
ЕЕ 
(
ЕЕ 
$num
ЕЕ 
,
ЕЕ 
parts
ЕЕ !
.
ЕЕ! "
Count
ЕЕ" '
,
ЕЕ' (
i
ЕЕ) *
=>
ЕЕ+ -
{
ФФ 
(
ГГ 
int
ГГ 
cellX
ГГ 
,
ГГ 
int
ГГ 
cellY
ГГ  %
)
ГГ% &
=
ГГ' (!
PositionToCellCoord
ГГ) <
(
ГГ< =
parts
ГГ= B
[
ГГB C
i
ГГC D
]
ГГD E
,
ГГE F
radius
ГГG M
)
ГГM N
;
ГГN O
uint
ХХ 
CKey
ХХ 
=
ХХ 
GetKeyFromHash
ХХ *
(
ХХ* +
HashCell
ХХ+ 3
(
ХХ3 4
cellX
ХХ4 9
,
ХХ9 :
cellY
ХХ; @
)
ХХ@ A
)
ХХA B
;
ХХB C
SpatialLookup
ИИ 
[
ИИ 
i
ИИ 
]
ИИ  
=
ИИ! "
new
ИИ# &
Entry
ИИ' ,
(
ИИ, -
i
ИИ- .
,
ИИ. /
CKey
ИИ0 4
)
ИИ4 5
;
ИИ5 6
StartIndices
ЙЙ 
[
ЙЙ 
i
ЙЙ 
]
ЙЙ 
=
ЙЙ  !
int
ЙЙ" %
.
ЙЙ% &
MaxValue
ЙЙ& .
;
ЙЙ. /
}
КК 
)
КК 
;
КК 
Array
ММ 
.
ММ 
Sort
ММ 
(
ММ 
SpatialLookup
ММ $
)
ММ$ %
;
ММ% &
Parallel
ОО 
.
ОО 
For
ОО 
(
ОО 
$num
ОО 
,
ОО 
parts
ОО !
.
ОО! "
Count
ОО" '
,
ОО' (
i
ОО) *
=>
ОО+ -
{
ПП 
uint
ЯЯ 
key
ЯЯ 
=
ЯЯ 
SpatialLookup
ЯЯ (
[
ЯЯ( )
i
ЯЯ) *
]
ЯЯ* +
.
ЯЯ+ ,
CKey
ЯЯ, 0
;
ЯЯ0 1
uint
РР 
KeyPrev
РР 
=
РР 
i
РР  
==
РР! #
$num
РР$ %
?
РР& '
int
РР( +
.
РР+ ,
MaxValue
РР, 4
:
РР5 6
SpatialLookup
РР7 D
[
РРD E
i
РРE F
-
РРG H
$num
РРI J
]
РРJ K
.
РРK L
CKey
РРL P
;
РРP Q
if
СС 
(
СС 
key
СС 
!=
СС 
KeyPrev
СС "
)
СС" #
{
ТТ 
StartIndices
УУ  
[
УУ  !
key
УУ! $
]
УУ$ %
=
УУ& '
i
УУ( )
;
УУ) *
}
ЖЖ 
}
ВВ 
)
ВВ 
;
ВВ 
}
ЬЬ 	
private
ЫЫ 
uint
ЫЫ 
HashCell
ЫЫ 
(
ЫЫ 
int
ЫЫ !
cellX
ЫЫ" '
,
ЫЫ' (
int
ЫЫ) ,
cellY
ЫЫ- 2
)
ЫЫ2 3
{
ЗЗ 	
uint
ШШ 
a
ШШ 
=
ШШ 
(
ШШ 
uint
ШШ 
)
ШШ 
(
ШШ 
cellX
ШШ !
*
ШШ" #
$num
ШШ$ )
)
ШШ) *
;
ШШ* +
uint
ЭЭ 
b
ЭЭ 
=
ЭЭ 
(
ЭЭ 
uint
ЭЭ 
)
ЭЭ 
(
ЭЭ 
cellY
ЭЭ !
*
ЭЭ" #
$num
ЭЭ$ +
)
ЭЭ+ ,
;
ЭЭ, -
return
ЩЩ 
a
ЩЩ 
+
ЩЩ 
b
ЩЩ 
;
ЩЩ 
}
ЧЧ 	
private
ЪЪ 
uint
ЪЪ 
GetKeyFromHash
ЪЪ #
(
ЪЪ# $
uint
ЪЪ$ (
HC
ЪЪ) +
)
ЪЪ+ ,
{
── 	
return
││ 
HC
││ 
%
││ 
(
││ 
uint
││ 
)
││ 
SpatialLookup
││ +
.
││+ ,
Length
││, 2
;
││2 3
}
┌┌ 	
private
┐┐ 
(
┐┐ 
int
┐┐ 
cellX
┐┐ 
,
┐┐ 
int
┐┐ 
cellY
┐┐  %
)
┐┐% &!
PositionToCellCoord
┐┐' :
(
┐┐: ;

Particle2D
┐┐; E
particle
┐┐F N
,
┐┐N O
float
┐┐P U
radius
┐┐V \
)
┐┐\ ]
{
└└ 	
int
┘┘ 
cellX
┘┘ 
=
┘┘ 
(
┘┘ 
int
┘┘ 
)
┘┘ 
(
┘┘ 
particle
┘┘ &
.
┘┘& '
	PredPoint
┘┘' 0
.
┘┘0 1
X
┘┘1 2
/
┘┘3 4
radius
┘┘5 ;
)
┘┘; <
;
┘┘< =
int
├├ 
cellY
├├ 
=
├├ 
(
├├ 
int
├├ 
)
├├ 
(
├├ 
particle
├├ &
.
├├& '
	PredPoint
├├' 0
.
├├0 1
Y
├├1 2
/
├├3 4
radius
├├5 ;
)
├├; <
;
├├< =
return
┤┤ 
(
┤┤ 
cellX
┤┤ 
,
┤┤ 
cellY
┤┤  
)
┤┤  !
;
┤┤! "
}
┬┬ 	
private
┴┴ 
(
┴┴ 
int
┴┴ 
cellX
┴┴ 
,
┴┴ 
int
┴┴ 
cellY
┴┴  %
)
┴┴% &!
PositionToCellCoord
┴┴' :
(
┴┴: ;
Vector2
┴┴; B
Point
┴┴C H
,
┴┴H I
float
┴┴J O
radius
┴┴P V
)
┴┴V W
{
┼┼ 	
int
▀▀ 
cellX
▀▀ 
=
▀▀ 
(
▀▀ 
int
▀▀ 
)
▀▀ 
(
▀▀ 
Point
▀▀ #
.
▀▀# $
X
▀▀$ %
/
▀▀& '
radius
▀▀( .
)
▀▀. /
;
▀▀/ 0
int
▄▄ 
cellY
▄▄ 
=
▄▄ 
(
▄▄ 
int
▄▄ 
)
▄▄ 
(
▄▄ 
Point
▄▄ #
.
▄▄# $
Y
▄▄$ %
/
▄▄& '
radius
▄▄( .
)
▄▄. /
;
▄▄/ 0
return
██ 
(
██ 
cellX
██ 
,
██ 
cellY
██  
)
██  !
;
██! "
}
▌▌ 	
}
░░ 
}▒▒ ф1
eH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Simulators\ParticleTypes\Particle3D.cs
	namespace 	
ArctisAurora
 
. 
ParticleTypes $
{ 
public 

class 

Particle3D 
{ 
public 
Vector3D 
< 
float 
> 
point $
=% &
new' *
Vector3D+ 3
<3 4
float4 9
>9 :
(: ;
); <
;< =
public 
Vector3D 
< 
float 
> 
	PredPoint (
=) *
new+ .
Vector3D/ 7
<7 8
float8 =
>= >
(> ?
)? @
;@ A
public		 
Vector3D		 
<		 
float		 
>		 
velocity		 '
=		( )
new		* -
Vector3D		. 6
<		6 7
float		7 <
>		< =
(		= >
)		> ?
;		? @
public

 
float

 
radius

 
=

 
$num

 
;

  
public 
Brush 
color 
= 
new  
Pen! $
($ %
Color% *
.* +
FromArgb+ 3
(3 4
$num4 7
,7 8
$num9 <
,< =
$num> A
,A B
$numC F
)F G
)G H
.H I
BrushI N
;N O
public 

Particle3D 
( 
) 
{ 	
point 
. 
X 
= 
$num 
; 
point 
. 
Y  
=! "
$num# $
;$ %
point& +
.+ ,
Z, -
=. /
$num0 1
;1 2
velocity 
. 
X 
= 
$num 
; 
velocity $
.$ %
Y% &
=' (
$num) *
;* +
velocity, 4
.4 5
Z5 6
=6 7
$num8 9
;9 :
	PredPoint 
= 
point 
; 
} 	
public 

Particle3D 
( 
Vector3D "
<" #
float# (
>( )
point* /
)/ 0
{ 	
this 
. 
point 
= 
point 
; 
velocity 
. 
X 
= 
$num 
; 
velocity $
.$ %
Y% &
=' (
$num) *
;* +
velocity, 4
.4 5
Z5 6
=7 8
$num9 :
;: ;
	PredPoint 
= 
point 
; 
} 	
public 

Particle3D 
( 
float 
x  !
,! "
float# (
y) *
,* +
float, 1
z2 3
)3 4
{ 	
point 
. 
X 
= 
x 
; 
point 
. 
Y  
=! "
y# $
;$ %
point& +
.+ ,
Z, -
=. /
z0 1
;1 2
velocity   
.   
X   
=   
$num   
;   
velocity   $
.  $ %
Y  % &
=  ' (
$num  ) *
;  * +
velocity  , 4
.  4 5
Z  5 6
=  7 8
$num  9 :
;  : ;
	PredPoint"" 
="" 
point"" 
;"" 
}## 	
public%% 

Particle3D%% 
(%% 
float%% 
x%%  !
,%%! "
float%%# (
y%%) *
,%%* +
float%%, 1
z%%2 3
,%%3 4
float%%5 :
HorizontalVelX%%; I
,%%I J
float%%K P
HorizontalVelY%%Q _
,%%_ `
float%%a f
VerticalVel%%g r
)%%r s
{&& 	
point'' 
.'' 
X'' 
='' 
x'' 
;'' 
point'' 
.'' 
Y''  
=''! "
y''# $
;''$ %
point''& +
.''+ ,
Z'', -
=''. /
z''0 1
;''1 2
velocity(( 
.(( 
X(( 
=(( 
HorizontalVelX(( '
;((' (
velocity)) 
.)) 
Y)) 
=)) 
HorizontalVelY)) '
;))' (
velocity** 
.** 
Z** 
=** 
VerticalVel** $
;**$ %
	PredPoint,, 
=,, 
point,, 
;,, 
}-- 	
public// 

Particle3D// 
(// 
Vector3D// "
<//" #
float//# (
>//( )
p//* +
,//+ ,
float//- 2
HorizontalVelX//3 A
,//A B
float//C H
HorizontalVelY//I W
,//W X
float//Y ^
VerticalVel//_ j
)//j k
{00 	
point11 
=11 
p11 
;11 
velocity22 
.22 
X22 
=22 
HorizontalVelX22 '
;22' (
velocity33 
.33 
Y33 
=33 
HorizontalVelY33 '
;33' (
velocity44 
.44 
Z44 
=44 
VerticalVel44 $
;44$ %
	PredPoint66 
=66 
point66 
;66 
}77 	
public99 

Particle3D99 
(99 
Vector3D99 "
<99" #
float99# (
>99( )
p99* +
,99+ ,
Vector3D99- 5
<995 6
float996 ;
>99; <
v99= >
)99> ?
{:: 	
point;; 
=;; 
p;; 
;;; 
velocity<< 
=<< 
v<< 
;<< 
	PredPoint>> 
=>> 
point>> 
;>> 
}?? 	
}@@ 
}AA ┌&
eH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Simulators\ParticleTypes\Particle2D.cs
	namespace 	
ArctisAurora
 
. 

Simulators !
.! "
ParticleTypes" /
{		 
public

 

class

 

Particle2D

 
{ 
public 
Vector2 
point 
= 
new "
Vector2# *
(* +
)+ ,
;, -
public 
Vector2 
	PredPoint  
=! "
new# &
Vector2' .
(. /
)/ 0
;0 1
public 
Vector2 
velocity 
=  !
new" %
Vector2& -
(- .
). /
;/ 0
public 
float 
radius 
= 
$num 
;  
public 
Brush 
color 
= 
new  
Pen! $
($ %
Color% *
.* +
FromArgb+ 3
(3 4
$num4 7
,7 8
$num9 <
,< =
$num> A
,A B
$numC F
)F G
)G H
.H I
BrushI N
;N O
public 

Particle2D 
( 
) 
{ 	
point 
. 
X 
= 
$num 
; 
point 
. 
Y  
=! "
$num# $
;$ %
velocity 
. 
X 
= 
$num 
; 
velocity $
.$ %
Y% &
=' (
$num) *
;* +
	PredPoint 
= 
point 
; 
} 	
public 

Particle2D 
( 
Vector2 !
point" '
)' (
{ 	
this 
. 
point 
= 
point 
; 
velocity 
. 
X 
= 
$num 
; 
velocity $
.$ %
Y% &
=' (
$num) *
;* +
	PredPoint 
= 
point 
; 
}   	
public"" 

Particle2D"" 
("" 
float"" 
x""  !
,""! "
float""# (
y"") *
)""* +
{## 	
point$$ 
.$$ 
X$$ 
=$$ 
x$$ 
;$$ 
point%% 
.%% 
Y%% 
=%% 
y%% 
;%% 
velocity&& 
.&& 
X&& 
=&& 
$num&& 
;&& 
velocity&& $
.&&$ %
Y&&% &
=&&' (
$num&&) *
;&&* +
	PredPoint(( 
=(( 
point(( 
;(( 
})) 	
public++ 

Particle2D++ 
(++ 
float++ 
x++  !
,++! "
float++# (
y++) *
,++* +
float++, 1
HorizontalVelX++2 @
,++@ A
float++B G
HorizontalVelY++H V
)++V W
{,, 	
point-- 
.-- 
X-- 
=-- 
x-- 
;-- 
point.. 
... 
Y.. 
=.. 
y.. 
;.. 
velocity// 
.// 
X// 
=// 
HorizontalVelX// '
;//' (
velocity00 
.00 
Y00 
=00 
HorizontalVelY00 '
;00' (
	PredPoint22 
=22 
point22 
;22 
}33 	
public55 

Particle2D55 
(55 
Vector255 !
p55" #
,55# $
float55% *
HorizontalVelX55+ 9
,559 :
float55; @
HorizontalVelY55A O
)55O P
{66 	
point77 
=77 
p77 
;77 
velocity88 
.88 
X88 
=88 
HorizontalVelX88 '
;88' (
velocity99 
.99 
Y99 
=99 
HorizontalVelY99 '
;99' (
	PredPoint;; 
=;; 
point;; 
;;; 
}<< 	
public>> 

Particle2D>> 
(>> 
Vector2>> !
p>>" #
,>># $
Vector2>>% ,
v>>- .
)>>. /
{?? 	
point@@ 
=@@ 
p@@ 
;@@ 
velocityAA 
=AA 
vAA 
;AA 
	PredPointCC 
=CC 
pointCC 
;CC 
}DD 	
}EE 
}FF о
IH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Program.cs
	namespace 	
ArctisAurora
 
{ 
internal 
static 
class 
Program !
{ 
[

 	
	STAThread

	 
]

 
static 
void 
Main 
( 
) 
{ 	$
ApplicationConfiguration $
.$ %

Initialize% /
(/ 0
)0 1
;1 2
Application 
. 
Run 
( 
new 
Frame  %
(% &
)& '
)' (
;( )
} 	
} 
} ╗4
VH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\GameObject\Transform.cs
	namespace 	
ArctisAurora
 
. 

GameObject !
{ 
public 

class 
	Transform 
{ 
public 
Vector3D 
< 
float 
> 
position '
=( )
new* -
Vector3D. 6
<6 7
float7 <
>< =
(= >
$num> ?
,? @
$numA B
,B C
$numD E
)E F
;F G
public		 
Vector3D		 
<		 
float		 
>		 
rotation		 '
=		( )
new		* -
Vector3D		. 6
<		6 7
float		7 <
>		< =
(		= >
$num		> ?
,		? @
$num		A B
,		B C
$num		D E
)		E F
;		F G
public

 
Vector3D

 
<

 
float

 
>

 
scale

 $
=

% &
new

' *
Vector3D

+ 3
<

3 4
float

4 9
>

9 :
(

: ;
$num

; <
,

< =
$num

> ?
,

? @
$num

A B
)

B C
;

C D
internal 
Entity 
parent 
; 
internal 
bool 
_changed 
=  
false! &
;& '
internal 
	Transform 
( 
Entity !
e" #
)# $
{ 	
parent 
= 
e 
; 
} 	
public 
void %
SetRotationFromQuaternion -
(- .

Quaternion. 8
<8 9
float9 >
>> ?
q@ A
)A B
{ 	
VulkanRenderer 
. 
_rendererInstance ,
., -
AddEntityToUpdate- >
(> ?
parent? E
)E F
;F G
} 	
public 

Quaternion 
< 
float 
>  
GetQuaternion! .
(. /
)/ 0
{ 	
float 
eulerRadiansX 
=  !
DegreesToRadians" 2
(2 3
rotation3 ;
.; <
X< =
)= >
;> ?
float 
eulerRadiansY 
=  !
DegreesToRadians" 2
(2 3
rotation3 ;
.; <
Y< =
)= >
;> ?
float 
eulerRadiansZ 
=  !
DegreesToRadians" 2
(2 3
rotation3 ;
.; <
Z< =
)= >
;> ?

Quaternion 
< 
float 
> 
q 
=  !

Quaternion" ,
<, -
float- 2
>2 3
.3 4"
CreateFromYawPitchRoll4 J
(J K
eulerRadiansXK X
,X Y
eulerRadiansYZ g
,g h
eulerRadiansZi v
)v w
;w x
return   
q   
;   
}!! 	
public"" 
Vector3D"" 
<"" 
float"" 
>"" 
GetEntityRotation"" 0
(""0 1
)""1 2
{## 	
return$$ 
rotation$$ 
;$$ 
}%% 	
public'' 
Vector3D'' 
<'' 
float'' 
>'' +
CalculateRotationFromQuaternion'' >
(''> ?
)''? @
{(( 	
return)) 
rotation)) 
;)) 
}** 	
public,, 
void,, 
SetWorldPosition,, $
(,,$ %
Vector3D,,% -
<,,- .
float,,. 3
>,,3 4
newPos,,5 ;
),,; <
{-- 	
position.. 
=.. 
newPos.. 
;.. 
_changed// 
=// 
true// 
;// 
VulkanRenderer00 
.00 
_rendererInstance00 ,
.00, -
AddEntityToUpdate00- >
(00> ?
parent00? E
)00E F
;00F G
}11 	
public33 
void33 
SetLocalPosition33 $
(33$ %
Vector3D33% -
<33- .
float33. 3
>333 4
newPos335 ;
)33; <
{44 	
_changed55 
=55 
true55 
;55 
VulkanRenderer66 
.66 
_rendererInstance66 ,
.66, -
AddEntityToUpdate66- >
(66> ?
parent66? E
)66E F
;66F G
}77 	
public99 
Vector3D99 
<99 
float99 
>99 
GetEntityPosition99 0
(990 1
)991 2
{:: 	
return;; 
position;; 
;;; 
}<< 	
public>> 
Vector3D>> 
<>> 
float>> 
>>> 
GetScale>> '
(>>' (
)>>( )
{?? 	
return@@ 
scale@@ 
;@@ 
}AA 	
publicCC 
voidCC 
SetLocalScaleCC !
(CC! "
Vector3DCC" *
<CC* +
floatCC+ 0
>CC0 1
sCC2 3
)CC3 4
{DD 	
scaleEE 
=EE 
sEE 
;EE 
_changedFF 
=FF 
trueFF 
;FF 
VulkanRendererGG 
.GG 
_rendererInstanceGG ,
.GG, -
AddEntityToUpdateGG- >
(GG> ?
parentGG? E
)GGE F
;GGF G
}HH 	
publicJJ 
voidJJ 
SetWorldScaleJJ !
(JJ! "
Vector3DJJ" *
<JJ* +
floatJJ+ 0
>JJ0 1
sJJ2 3
)JJ3 4
{KK 	
scaleLL 
=LL 
sLL 
;LL 
_changedMM 
=MM 
trueMM 
;MM 
VulkanRendererNN 
.NN 
_rendererInstanceNN ,
.NN, -
AddEntityToUpdateNN- >
(NN> ?
parentNN? E
)NNE F
;NNF G
}OO 	
privateQQ 
floatQQ 
DegreesToRadiansQQ &
(QQ& '
floatQQ' ,
degreesQQ- 4
)QQ4 5
{RR 	
returnSS 
degreesSS 
*SS 
(SS 
MathFSS #
.SS# $
PISS$ &
/SS' (
$numSS) /
)SS/ 0
;SS0 1
}TT 	
}UU 
}VV ╢	
^H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\GameObject\LightSourceEntity.cs
	namespace 	
ArctisAurora
 
. 

GameObject !
{ 
internal 
class 
LightSourceEntity $
:% &
Entity' -
{ 
public 
LightSourceEntity  
(  !
)! "
{ 	
this		 
.		 
CreateComponent		  
<		  ! 
LightsourceComponent		! 5
>		5 6
(		6 7
)		7 8
;		8 9
this

 
.

 
name

 
=

 
$str

 -
;

- .
} 	
public 
override 
void 
OnStart $
($ %
)% &
{ 	
base 
. 
OnStart 
( 
) 
; 
} 	
public 
override 
void 
OnTick #
(# $
)$ %
{ 	
base 
. 
OnTick 
( 
) 
; 
} 	
} 
} бU
SH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\GameObject\Entity.cs
	namespace 	
ArctisAurora
 
. 

GameObject !
{ 
public 

class 
Entity 
{		 
bool 
enabled 
= 
true 
; 
public 
	Transform 
	transform "
;" #
internal 
string 
name 
= 
$str '
;' (
internal 
List 
< 
EntityComponent %
>% &
_components' 2
=3 4
new5 8
List9 =
<= >
EntityComponent> M
>M N
(N O
)O P
;P Q
internal 
List 
< 
Entity 
> 
	_children '
=( )
new* -
List. 2
<2 3
Entity3 9
>9 :
(: ;
); <
;< =
public 
Entity 
( 
) 
{ 	
	transform 
= 
new 
	Transform %
(% &
this& *
)* +
;+ ,
} 	
public 
Entity 
( 
string 
name !
)! "
{ 	
this 
. 
name 
= 
name 
; 
	transform 
= 
new 
	Transform %
(% &
this& *
)* +
;+ ,
} 	
public 
virtual 
void 
OnStart #
(# $
)$ %
{ 	
foreach 
( 
EntityComponent $
c% &
in' )
_components* 5
)5 6
{   
c!! 
.!! 
OnStart!! 
(!! 
)!! 
;!! 
}"" 
}## 	
public%% 
virtual%% 
void%% 
OnEnable%% $
(%%$ %
)%%% &
{&& 	
foreach'' 
('' 
EntityComponent'' $
c''% &
in''' )
_components''* 5
)''5 6
{(( 
c)) 
.)) 
OnEnable)) 
()) 
))) 
;)) 
}** 
}++ 	
public-- 
virtual-- 
void-- 
	OnDisable-- %
(--% &
)--& '
{.. 	
foreach// 
(// 
EntityComponent// $
c//% &
in//' )
_components//* 5
)//5 6
{00 
c11 
.11 
	OnDisable11 
(11 
)11 
;11 
}22 
}33 	
public55 
virtual55 
void55 
OnTick55 "
(55" #
)55# $
{66 	
foreach77 
(77 
EntityComponent77 #
c77$ %
in77& (
_components77) 4
)774 5
{88 
c99 
.99 
OnTick99 
(99 
)99 
;99 
}:: 
};; 	
public== 
virtual== 
void== 
	OnDestroy== %
(==% &
)==& '
{>> 	
foreach?? 
(?? 
EntityComponent?? #
c??$ %
in??& (
_components??) 4
)??4 5
{@@ 
cAA 
.AA 
	OnDestroyAA 
(AA 
)AA 
;AA 
_componentsBB 
.BB 
RemoveBB "
(BB" #
cBB# $
)BB$ %
;BB% &
}CC 
}DD 	
internalFF 
voidFF 
	IsEnabledFF 
(FF  
boolFF  $
stateFF% *
)FF* +
{GG 	
ifHH 
(HH 
enabledHH 
!=HH 
stateHH 
)HH  
{II 
enabledJJ 
=JJ 
stateJJ 
;JJ  
ifKK 
(KK 
enabledKK 
)KK 
OnEnableLL 
(LL 
)LL 
;LL 
elseMM 
	OnDisableMM 
(MM 
)MM  
;MM  !
}NN 
}OO 	
internalQQ 
EntCompQQ 
CreateComponentQQ (
<QQ( )
EntCompQQ) 0
>QQ0 1
(QQ1 2
)QQ2 3
whereQQ4 9
EntCompQQ: A
:QQB C
EntityComponentQQD S
,QQS T
newQQU X
(QQX Y
)QQY Z
{RR 	
EntCompSS 
	componentSS 
=SS 
typeofSS  &
(SS& '
EntCompSS' .
)SS. /
.SS/ 0
NameSS0 4
==SS5 7
typeofSS8 >
(SS> ?
MeshComponentSS? L
)SSL M
.SSM N
NameSSN R
?SSS T
(TT 
VulkanRendererTT 
.TT  
_rendererTypeTT  -
==TT. 0
RendererTypesTT1 >
.TT> ?

PathtracerTT? I
?UU 
(UU 
EntCompUU 
)UU 
(UU  
objectUU  &
)UU& '
newUU' *
MCRaytracingUU+ 7
(UU7 8
)UU8 9
:VV 
(VV 
VulkanRendererVV %
.VV% &
_rendererTypeVV& 3
==VV4 6
RendererTypesVV7 D
.VVD E
RadianceCascadesVVE U
?WW 
(WW 
EntCompWW "
)WW" #
(WW# $
objectWW$ *
)WW* +
newWW+ .
MCRasterWW/ 7
(WW7 8
)WW8 9
:XX 
(XX 
EntCompXX "
)XX" #
(XX# $
objectXX$ *
)XX* +
newXX+ .
MCRasterXX/ 7
(XX7 8
)XX8 9
)XX9 :
)XX: ;
:YY 
newYY 
EntCompYY 
(YY 
)YY 
;YY 
if`` 
(`` 
!`` 
_components`` 
.`` 
Contains`` %
(``% &
	component``& /
)``/ 0
)``0 1
{aa 
_componentsbb 
.bb 
Addbb 
(bb  
	componentbb  )
)bb) *
;bb* +
	componentcc 
.cc 
parentcc  
=cc! "
thiscc# '
;cc' (
	componentdd 
.dd 
OnStartdd !
(dd! "
)dd" #
;dd# $
returnee 
	componentee  
;ee  !
}ff 
elsegg 
returngg 
nullgg 
;gg 
}hh 	
internaljj 
EntCompjj 
GetComponentjj %
<jj% &
EntCompjj& -
>jj- .
(jj. /
)jj/ 0
wherejj1 6
EntCompjj7 >
:jj? @
EntityComponentjjA P
{kk 	
foreachll 
(ll 
EntityComponentll #
compll$ (
inll) +
_componentsll, 7
)ll7 8
{mm 
ifnn 
(nn 
compnn 
isnn 
EntCompnn #
)nn# $
returnoo 
(oo 
EntCompoo #
)oo# $
compoo$ (
;oo( )
}pp 
returnqq 
nullqq 
;qq 
}rr 	
internaltt 
Enttt 
CreateChildEntitytt &
<tt& '
Enttt' *
>tt* +
(tt+ ,
)tt, -
wherett. 3
Enttt4 7
:tt8 9
Entitytt: @
,tt@ A
newttB E
(ttE F
)ttF G
{uu 	
Entvv 
entityvv 
=vv 
newvv 
Entvv  
(vv  !
)vv! "
;vv" #
	_childrenww 
.ww 
Addww 
(ww 
entityww  
)ww  !
;ww! "
returnxx 
entityxx 
;xx 
}yy 	
internal{{ 
Entity{{  
GetChildEntityByName{{ ,
({{, -
string{{- 3

querryName{{4 >
){{> ?
{|| 	
foreach}} 
(}} 
Entity}} 
ent}} 
in}} !
	_children}}" +
)}}+ ,
{~~ 
if 
( 
ent 
. 
name 
== 

querryName )
)) *
{
── 
return
││ 
ent
││ 
;
││ 
}
┌┌ 
}
┐┐ 
return
└└ 
null
└└ 
;
└└ 
}
┘┘ 	
internal
┤┤ 
List
┤┤ 
<
┤┤ 
Entity
┤┤ 
>
┤┤ *
GetAllChildrenEntitiesByName
┤┤ :
(
┤┤: ;
string
┤┤; A

querryName
┤┤B L
)
┤┤L M
{
┬┬ 	
List
┴┴ 
<
┴┴ 
Entity
┴┴ 
>
┴┴ 
_childrenByName
┴┴ (
=
┴┴) *
new
┴┴+ .
List
┴┴/ 3
<
┴┴3 4
Entity
┴┴4 :
>
┴┴: ;
(
┴┴; <
)
┴┴< =
;
┴┴= >
foreach
┼┼ 
(
┼┼ 
Entity
┼┼ 
ent
┼┼ 
in
┼┼ !
	_children
┼┼" +
)
┼┼+ ,
{
▀▀ 
if
▄▄ 
(
▄▄ 
ent
▄▄ 
.
▄▄ 
name
▄▄ 
==
▄▄ 

querryName
▄▄ )
)
▄▄) *
{
██ 
_childrenByName
▌▌ #
.
▌▌# $
Add
▌▌$ '
(
▌▌' (
ent
▌▌( +
)
▌▌+ ,
;
▌▌, -
}
▐▐ 
}
░░ 
return
▒▒ 
_childrenByName
▒▒ "
;
▒▒" #
}
▓▓ 	
internal
■■ 
List
■■ 
<
■■ 
Entity
■■ 
>
■■ $
GetAllChildrenEntities
■■ 4
(
■■4 5
)
■■5 6
{
∙∙ 	
return
√√ 
	_children
√√ 
;
√√ 
}
≈≈ 	
internal
≤≤ 
EntComp
≤≤ 
RemoveComponent
≤≤ (
<
≤≤( )
EntComp
≤≤) 0
>
≤≤0 1
(
≤≤1 2
)
≤≤2 3
where
≤≤4 9
EntComp
≤≤: A
:
≤≤B C
EntityComponent
≤≤D S
{
≥≥ 	
foreach
   
(
   
EntityComponent
   $
ec
  % '
in
  ( *
_components
  + 6
)
  6 7
{
⌡⌡ 
if
°° 
(
°° 
ec
°° 
is
°° 
EntComp
°°  
)
°°  !
{
²² 
_components
·· 
.
··  
Remove
··  &
(
··& '
ec
··' )
)
··) *
;
··* +
break
÷÷ 
;
÷÷ 
}
══ 
}
║║ 
return
╒╒ 
null
╒╒ 
;
╒╒ 
}
ёё 	
}
╓╓ 
}╔╔ г:
GH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Frame.cs
	namespace 	
ArctisAurora
 
{ 
public 

partial 
class 
Frame 
:  
Form! %
{ 
internal 
Engine 
engine 
=  
null! %
;% &
bool 
is3D 
= 
true 
; 
int		 
parts		 
=		 
$num		 
;		 
public 
Frame 
( 
) 
{ 	(
InitializeComponentBehaviour (
(( )
)) *
;* +
} 	
private 
void 
TestButton_Click %
(% &
object& ,
sender- 3
,3 4
	EventArgs5 >
e? @
)@ A
{ 	
} 	
private 
void (
TB_SmoothingRadius_Validated 1
(1 2
object2 8
sender9 ?
,? @
	EventArgsA J
eK L
)L M
{ 	
} 	
private 
void &
TB_TargetDensity_Validated /
(/ 0
object0 6
sender7 =
,= >
	EventArgs? H
eI J
)J K
{ 	
} 	
private 
void %
TB_PressureMult_Validated .
(. /
object/ 5
sender6 <
,< =
	EventArgs> G
eH I
)I J
{ 	
} 	
private!! 
void!! *
TB_ViscosityStrength_Validated!! 3
(!!3 4
object!!4 :
sender!!; A
,!!A B
	EventArgs!!C L
e!!M N
)!!N O
{"" 	
}## 	
private%% 
void%%  
TB_GravStr_Validated%% )
(%%) *
object%%* 0
sender%%1 7
,%%7 8
	EventArgs%%9 B
e%%C D
)%%D E
{&& 	
}(( 	
private** 
void** 

Frame_Load** 
(**  
object**  &
sender**' -
,**- .
	EventArgs**/ 8
e**9 :
)**: ;
{++ 	
engine.. 
=.. 
new.. 
Engine.. 
(..  
)..  !
;..! "
engine// 
.// 
Init// 
(// 
this// 
)// 
;// 
}00 	
public11 
void11 
GLControl_Resize11 $
(11$ %
object11% +
?11+ ,
sender11- 3
,113 4
	EventArgs115 >
e11? @
)11@ A
{22 	
}55 	
private77 
void77 
GLControl_Paint77 $
(77$ %
object77% +
?77+ ,
sender77- 3
,773 4
PaintEventArgs775 C
e77D E
)77E F
{88 	
}== 	
private?? 
void?? 
button2_Click?? "
(??" #
object??# )
sender??* 0
,??0 1
	EventArgs??2 ;
e??< =
)??= >
{@@ 	
}BB 	
privateDD 
voidDD 
Frame_FormClosingDD &
(DD& '
objectDD' -
senderDD. 4
,DD4 5 
FormClosingEventArgsDD6 J
eDDK L
)DDL M
{EE 	
}GG 	
privateII 
voidII 
GLControl_MouseDownII (
(II( )
objectII) /
senderII0 6
,II6 7
MouseEventArgsII8 F
eIIG H
)IIH I
{JJ 	
}MM 	
privateOO 
voidOO 
GLControl_MouseUpOO &
(OO& '
objectOO' -
senderOO. 4
,OO4 5
MouseEventArgsOO6 D
eOOE F
)OOF G
{PP 	
}SS 	
privateUU 
voidUU 
GLControl_MouseMoveUU (
(UU( )
objectUU) /
senderUU0 6
,UU6 7
MouseEventArgsUU8 F
eUUG H
)UUH I
{VV 	
}YY 	
private[[ 
void[[ 
GLControl_KeyDown[[ &
([[& '
object[[' -
sender[[. 4
,[[4 5
KeyEventArgs[[6 B
e[[C D
)[[D E
{\\ 	
}^^ 	
private`` 
void``  
GLControl_MouseClick`` )
(``) *
object``* 0
sender``1 7
,``7 8
MouseEventArgs``9 G
e``H I
)``I J
{aa 	
Consolecc 
.cc 
	WriteLinecc 
(cc 
$strcc %
)cc% &
;cc& '
}dd 	
privateff 
voidff 
Frame_KeyDownff "
(ff" #
objectff# )
senderff* 0
,ff0 1
KeyEventArgsff2 >
eff? @
)ff@ A
{gg 	
}ii 	
privatekk 
voidkk 
GLControl_KeyPresskk '
(kk' (
objectkk( .
senderkk/ 5
,kk5 6
KeyPressEventArgskk7 H
ekkI J
)kkJ K
{ll 	
}nn 	
privatepp 
voidpp $
checkBox1_CheckedChangedpp -
(pp- .
objectpp. 4
senderpp5 ;
,pp; <
	EventArgspp= F
eppG H
)ppH I
{qq 	
is3Drr 
=rr 
	checkBox1rr 
.rr 
Checkedrr $
;rr$ %
}ss 	
privateuu 
voiduu 
button1_Clickuu "
(uu" #
objectuu# )
senderuu* 0
,uu0 1
	EventArgsuu2 ;
euu< =
)uu= >
{vv 	
ifww 
(ww 
engineww 
==ww 
nullww 
)ww 
{xx 
}yy 
}zz 	
private|| 
void|| '
TB_ParticleAmount_Validated|| 0
(||0 1
object||1 7
sender||8 >
,||> ?
	EventArgs||@ I
e||J K
)||K L
{}} 	
parts~~ 
=~~ 
int~~ 
.~~ 
Parse~~ 
(~~ 
TB_ParticleAmount~~ /
.~~/ 0
Text~~0 4
)~~4 5
;~~5 6
} 	
private
││ 
void
││ *
TB_ParticleAmount_Validating
││ 1
(
││1 2
object
││2 8
sender
││9 ?
,
││? @
	EventArgs
││A J
e
││K L
)
││L M
{
┌┌ 	
parts
┐┐ 
=
┐┐ 
int
┐┐ 
.
┐┐ 
Parse
┐┐ 
(
┐┐ 
TB_ParticleAmount
┐┐ /
.
┐┐/ 0
Text
┐┐0 4
)
┐┐4 5
;
┐┐5 6
}
└└ 	
private
├├ 
void
├├ !
InitializeComponent
├├ (
(
├├( )
)
├├) *
{
┤┤ 	
SuspendLayout
┬┬ 
(
┬┬ 
)
┬┬ 
;
┬┬ 

ClientSize
▄▄ 
=
▄▄ 
new
▄▄ 
Size
▄▄ !
(
▄▄! "
$num
▄▄" %
,
▄▄% &
$num
▄▄' *
)
▄▄* +
;
▄▄+ ,
Name
██ 
=
██ 
$str
██ 
;
██ 
Load
▌▌ 
+=
▌▌ 

Frame_Load
▌▌ 
;
▌▌ 
ResumeLayout
▐▐ 
(
▐▐ 
false
▐▐ 
)
▐▐ 
;
▐▐  
}
░░ 	
}
▒▒ 
}▓▓ ╘
PH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Forces\Gravity.cs
	namespace 	
ArctisAurora
 
. 
Forces 
{ 
public 

class 
Gravity 
: 
Force  
{ 
public 
Gravity 
( 
PointF 
force #
)# $
:% &
base' +
(+ ,
force, 1
)1 2
{ 	
}		 	
public

 
Gravity

 
(

 
Vector3D

 
<

  
float

  %
>

% &
force

' ,
)

, -
:

. /
base

0 4
(

4 5
force

5 :
)

: ;
{ 	
} 	
} 
} ╕	
NH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\Forces\Force.cs
	namespace 	
ArctisAurora
 
. 
Forces 
{ 
public 

abstract 
class 
Force 
{ 
public 
PointF 
force 
{ 
get !
;! "
set# &
;& '
}( )
internal 
Vector3D 
< 
float 
>  
_force! '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public

 
Force

 
(

 
PointF

 
force

 !
)

! "
{ 	
this 
. 
force 
= 
force 
; 
} 	
public 
Force 
( 
Vector3D 
< 
float #
># $
force3% +
)+ ,
{ 	
this 
. 
_force 
= 
force3  
;  !
} 	
} 
} кз
dH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\VulkanRenderer.cs
	namespace

 	
ArctisAurora


 
.

 

EngineWork

 !
.

! "
Renderer

" *
{ 
enum 
RendererTypes	 
{ 

Rasterizer 
, 

Pathtracer 
, 
RadianceCascades 
} 
internal 
unsafe 
class 
VulkanRenderer (
{ 
internal 
static 
VulkanRenderer &
_rendererInstance' 8
=9 :
null; ?
;? @
internal 
static 
RendererTypes %
_rendererType& 3
;3 4
internal 
int 
_width 
= 
$num "
;" #
internal 
int 
_height 
= 
$num "
;" #
internal 
static 
Extent2D  
_extent! (
;( )
internal 
static 
int 
_swapimageCount +
=, -
$num. /
;/ 0
internal 
static 
AuroraCamera $
_camera% ,
;, -
bool 
_isValidationLayers  
=! "
true# '
;' (
private   
readonly   
string   
[    
]    !
_validationLayers  " 3
=  4 5
new  6 9
string  : @
[  @ A
]  A B
{!! 	
$str"" )
,"") *
}## 	
;##	 

private$$ 
ExtDebugUtils$$ 
?$$ 
_debugUtils$$ *
;$$* +
private%% "
DebugUtilsMessengerEXT%% &
_debugMessenger%%' 6
;%%6 7
internal'' 
static'' 
AGlfwWindow'' #
	_glWindow''$ -
=''. /
new''0 3
AGlfwWindow''4 ?
(''? @
)''@ A
;''A B
internal(( 
static(( 
Vk(( 
_vulkan(( "
=((# $
Vk((% '
.((' (
GetApi((( .
(((. /
)((/ 0
;((0 1
internal)) 
static)) 
Instance))  
	_instance))! *
;))* +
internal++ 
static++ 
PhysicalDevice++ &
_gpu++' +
;+++ ,
internal,, 
static,, 
Device,, 
_logicalDevice,, -
;,,- .
internal-- 
static-- !
QueueFamilyProperties-- -
[--- .
]--. /
_qfm--0 4
;--4 5
internal// 
static// 
GraphicsPipeline// (
	_pipeline//) 2
;//2 3
internal00 
static00 
	Swapchain00 !

_swapchain00" ,
;00, -
internal11 
static11 
DescriptorPool11 &
_descriptorPool11' 6
;116 7
internal22 
static22 
DescriptorSetLayout22 + 
_descriptorSetLayout22, @
;22@ A
internal33 
static33 
CommandPool33 #
_commandPool33$ 0
;330 1
internal44 
static44 
CommandBuffer44 %
[44% &
]44& '
_commandBuffer44( 6
;446 7
internal66 
static66 
int66  
MAX_FRAMES_IN_FLIGHT66 0
=661 2
$num663 4
;664 5
internal77 
static77 
int77 
_currentFrame77 )
=77* +
$num77, -
;77- .
internal88 
static88 
	Semaphore88 !
[88! "
]88" #%
_imageAvailableSemaphores88$ =
;88= >
internal99 
static99 
	Semaphore99 !
[99! "
]99" #%
_renderFinishedSemaphores99$ =
;99= >
internal:: 
static:: 
Fence:: 
[:: 
]:: 
_fencesInFlight::  /
;::/ 0
internal;; 
static;; 
Fence;; 
[;; 
];; 
_imagesInFlight;;  /
;;;/ 0
internal== 
static== 
Queue== 
_graphicsQueue== ,
;==, -
internal>> 
static>> 
Queue>> 
_presentQueue>> +
;>>+ ,
internal@@ 
static@@ 
List@@ 
<@@ 
Entity@@ #
>@@# $
_entitiesToRender@@% 6
=@@7 8
new@@9 <
List@@= A
<@@A B
Entity@@B H
>@@H I
(@@I J
)@@J K
;@@K L
internalAA 
staticAA 
ListAA 
<AA 
EntityAA #
>AA# $
_lightsToRenderAA% 4
=AA5 6
newAA7 :
ListAA; ?
<AA? @
EntityAA@ F
>AAF G
(AAG H
)AAH I
;AAI J
internalBB 
staticBB 
ListBB 
<BB 
EntityBB #
>BB# $
_updateEntitiesBB% 4
=BB5 6
newBB7 :
ListBB; ?
<BB? @
EntityBB@ F
>BBF G
(BBG H
)BBH I
;BBI J
internalDD 
voidDD 
InitRendererDD "
(DD" #
RendererTypesDD# 0
_typeDD1 6
)DD6 7
{EE 	
_rendererTypeFF 
=FF 
_typeFF !
;FF! "
_extentGG 
=GG 
newGG 
Extent2DGG "
(GG" #
)GG# $
{GG% &
HeightGG' -
=GG. /
(GG0 1
uintGG1 5
)GG5 6
_heightGG6 =
,GG= >
WidthGG? D
=GGE F
(GGG H
uintGGH L
)GGL M
_widthGGM S
}GGT U
;GGU V
	_glWindowJJ 
.JJ 
CreateWindowJJ "
(JJ" #
refJJ# &
_extentJJ' .
)JJ. /
;JJ/ 0 
CreateVulkanInstanceKK  
(KK  !
)KK! "
;KK" #
SetupDebugMessengerLL 
(LL  
)LL  !
;LL! "
	_glWindowMM 
.MM 
CreateSurfaceMM #
(MM# $
)MM$ %
;MM% & 
ChoosePhysicalDeviceNN  
(NN  !
)NN! "
;NN" #
switchOO 
(OO 
_rendererTypeOO !
)OO! "
{PP 
caseQQ 
RendererTypesQQ "
.QQ" #

RasterizerQQ# -
:QQ- .
{RR 

RasterizerSS "
_rasterizerSS# .
=SS/ 0
newSS1 4

RasterizerSS5 ?
(SS? @
)SS@ A
;SSA B
breakTT 
;TT 
}UU 
caseVV 
RendererTypesVV "
.VV" #

PathtracerVV# -
:VV- .
{WW 
PathtracingXX #
_tracerXX$ +
=XX, -
newXX. 1
PathtracingXX2 =
(XX= >
)XX> ?
;XX? @
breakYY 
;YY 
}ZZ 
default[[ 
:[[ 
break\\ 
;\\ 
}]] 
}^^ 	
internal`` 
void``  
CreateVulkanInstance`` *
(``* +
)``+ ,
{aa 	
ApplicationInfobb 
_appInfobb $
=bb% &
newbb' *
ApplicationInfobb+ :
{cc 
STypedd 
=dd 
StructureTypedd %
.dd% &
ApplicationInfodd& 5
,dd5 6
PApplicationNameee  
=ee! "
(ee# $
byteee$ (
*ee( )
)ee) *
SilkMarshalee* 5
.ee5 6
StringToPtree6 A
(eeA B
$streeB M
)eeM N
,eeN O
ApplicationVersionff "
=ff# $
AVulkanHelperff% 2
.ff2 3
Versionff3 :
(ff: ;
$numff; <
,ff< =
$numff> ?
,ff? @
$numffA B
)ffB C
,ffC D
PEngineNamegg 
=gg 
(gg 
bytegg #
*gg# $
)gg$ %
SilkMarshalgg% 0
.gg0 1
StringToPtrgg1 <
(gg< =
$strgg= K
)ggK L
,ggL M
EngineVersionhh 
=hh 
AVulkanHelperhh  -
.hh- .
Versionhh. 5
(hh5 6
$numhh6 7
,hh7 8
$numhh9 :
,hh: ;
$numhh< =
)hh= >
,hh> ?

ApiVersionii 
=ii 
Vkii 
.ii  
	Version13ii  )
}jj 
;jj 
uintll 
_glfwExtensionCountll $
;ll$ %
bytemm 
*mm 
*mm 
_glfwExtensionsmm "
=mm# $
	_glWindowmm% .
.mm. /
_glfwmm/ 4
.mm4 5)
GetRequiredInstanceExtensionsmm5 R
(mmR S
outmmS V
_glfwExtensionCountmmW j
)mmj k
;mmk l
varnn 
_extensionsnn 
=nn 
SilkMarshalnn )
.nn) *
PtrToStringArraynn* :
(nn: ;
(nn; <
nintnn< @
)nn@ A
_glfwExtensionsnnA P
,nnP Q
(nnR S
intnnS V
)nnV W
_glfwExtensionCountnnW j
)nnj k
;nnk l
ifoo 
(oo 
_isValidationLayersoo #
)oo# $
{pp 
_extensionsqq 
=qq 
_extensionsqq )
.qq) *
Appendqq* 0
(qq0 1
ExtDebugUtilsqq1 >
.qq> ?
ExtensionNameqq? L
)qqL M
.qqM N
ToArrayqqN U
(qqU V
)qqV W
;qqW X
}rr 
InstanceCreateInfott 

createInfott )
=tt* +
newtt, /
InstanceCreateInfott0 B
{uu 
STypevv 
=vv 
StructureTypevv %
.vv% &
InstanceCreateInfovv& 8
,vv8 9
PApplicationInfoww  
=ww! "
&ww# $
_appInfoww$ ,
,ww, -!
EnabledExtensionCountxx %
=xx& '
(xx( )
uintxx) -
)xx- .
_extensionsxx. 9
.xx9 :
Lengthxx: @
,xx@ A#
PpEnabledExtensionNamesyy '
=yy( )
(yy* +
byteyy+ /
*yy/ 0
*yy0 1
)yy1 2
SilkMarshalyy2 =
.yy= >
StringArrayToPtryy> N
(yyN O
_extensionsyyO Z
)yyZ [
}zz 
;zz 
if|| 
(|| 
_isValidationLayers|| #
)||# $
{}} 

createInfo~~ 
.~~ 
EnabledLayerCount~~ ,
=~~- .
(~~/ 0
uint~~0 4
)~~4 5
_validationLayers~~5 F
.~~F G
Length~~G M
;~~M N

createInfo 
. 
PpEnabledLayerNames .
=/ 0
(1 2
byte2 6
*6 7
*7 8
)8 9
SilkMarshal9 D
.D E
StringArrayToPtrE U
(U V
_validationLayersV g
)g h
;h i.
 DebugUtilsMessengerCreateInfoEXT
── 0
debugCreateInfo
──1 @
=
──A B
new
──C F
(
──F G
)
──G H
;
──H I.
 PopulateDebugMessengerCreateInfo
││ 0
(
││0 1
ref
││1 4
debugCreateInfo
││5 D
)
││D E
;
││E F

createInfo
┌┌ 
.
┌┌ 
PNext
┌┌  
=
┌┌! "
&
┌┌# $
debugCreateInfo
┌┌$ 3
;
┌┌3 4
}
┐┐ 
else
└└ 
{
┘┘ 

createInfo
├├ 
.
├├ 
EnabledLayerCount
├├ ,
=
├├- .
$num
├├/ 0
;
├├0 1

createInfo
┤┤ 
.
┤┤ 
PNext
┤┤  
=
┤┤! "
null
┤┤# '
;
┤┤' (
}
┬┬ 
fixed
▀▀ 
(
▀▀ 
Instance
▀▀ 
*
▀▀ 
instancePtr
▀▀ (
=
▀▀) *
&
▀▀+ ,
	_instance
▀▀, 5
)
▀▀5 6
{
▄▄ 
if
██ 
(
██ 
_vulkan
██ 
.
██ 
CreateInstance
██ *
(
██* +
&
██+ ,

createInfo
██, 6
,
██6 7
null
██8 <
,
██< =
instancePtr
██> I
)
██I J
!=
██K M
Result
██N T
.
██T U
Success
██U \
)
██\ ]
{
▌▌ 
Console
▐▐ 
.
▐▐ 
	WriteLine
▐▐ %
(
▐▐% &
$str
▐▐& I
)
▐▐I J
;
▐▐J K
}
░░ 
}
▒▒ 
SilkMarshal
■■ 
.
■■ 
Free
■■ 
(
■■ 
(
■■ 
nint
■■ "
)
■■" #
_appInfo
■■# +
.
■■+ ,
PApplicationName
■■, <
)
■■< =
;
■■= >
SilkMarshal
∙∙ 
.
∙∙ 
Free
∙∙ 
(
∙∙ 
(
∙∙ 
nint
∙∙ "
)
∙∙" #
_appInfo
∙∙# +
.
∙∙+ ,
PEngineName
∙∙, 7
)
∙∙7 8
;
∙∙8 9
SilkMarshal
√√ 
.
√√ 
Free
√√ 
(
√√ 
(
√√ 
nint
√√ "
)
√√" #

createInfo
√√# -
.
√√- .%
PpEnabledExtensionNames
√√. E
)
√√E F
;
√√F G
if
≈≈ 
(
≈≈ !
_isValidationLayers
≈≈ #
)
≈≈# $
{
≤≤ 
SilkMarshal
≥≥ 
.
≥≥ 
Free
≥≥  
(
≥≥  !
(
≥≥! "
nint
≥≥" &
)
≥≥& '

createInfo
≥≥' 1
.
≥≥1 2!
PpEnabledLayerNames
≥≥2 E
)
≥≥E F
;
≥≥F G
}
   
}
⌡⌡ 	
internal
²² 
void
²² !
SetupDebugMessenger
²² )
(
²²) *
)
²²* +
{
·· 	
if
÷÷ 
(
÷÷ 
!
÷÷ !
_isValidationLayers
÷÷ $
)
÷÷$ %
return
÷÷& ,
;
÷÷, -
if
║║ 
(
║║ 
_vulkan
║║ 
.
║║ %
TryGetInstanceExtension
║║ /
(
║║/ 0
	_instance
║║0 9
,
║║9 :
out
║║; >
_debugUtils
║║? J
)
║║J K
)
║║K L
return
║║M S
;
║║S T.
 DebugUtilsMessengerCreateInfoEXT
ёё ,

createInfo
ёё- 7
=
ёё8 9
new
ёё: =.
 DebugUtilsMessengerCreateInfoEXT
ёё> ^
(
ёё^ _
)
ёё_ `
;
ёё` a.
 PopulateDebugMessengerCreateInfo
╓╓ ,
(
╓╓, -
ref
╓╓- 0

createInfo
╓╓1 ;
)
╓╓; <
;
╓╓< =
if
╔╔ 
(
╔╔ 
_debugUtils
╔╔ 
!
╔╔ 
.
╔╔ '
CreateDebugUtilsMessenger
╔╔ 6
(
╔╔6 7
	_instance
╔╔7 @
,
╔╔@ A
in
╔╔B D

createInfo
╔╔E O
,
╔╔O P
null
╔╔Q U
,
╔╔U V
out
╔╔W Z
_debugMessenger
╔╔[ j
)
╔╔j k
!=
╔╔l n
Result
╔╔o u
.
╔╔u v
Success
╔╔v }
)
╔╔} ~
{
╕╕ 
throw
╖╖ 
new
╖╖ 
	Exception
╖╖ #
(
╖╖# $
$str
╖╖$ F
)
╖╖F G
;
╖╖G H
}
╗╗ 
}
╘╘ 	
internal
╚╚ 
void
╚╚ .
 PopulateDebugMessengerCreateInfo
╚╚ 6
(
╚╚6 7
ref
╚╚7 :.
 DebugUtilsMessengerCreateInfoEXT
╚╚; [

createInfo
╚╚\ f
)
╚╚f g
{
╛╛ 	

createInfo
╜╜ 
.
╜╜ 
SType
╜╜ 
=
╜╜ 
StructureType
╜╜ ,
.
╜╜, -.
 DebugUtilsMessengerCreateInfoExt
╜╜- M
;
╜╜M N

createInfo
╝╝ 
.
╝╝ 
MessageSeverity
╝╝ &
=
╝╝' (/
!DebugUtilsMessageSeverityFlagsEXT
╝╝) J
.
╝╝J K
VerboseBitExt
╝╝K X
|
╝╝Y Z/
!DebugUtilsMessageSeverityFlagsEXT
╞╞) J
.
╞╞J K
WarningBitExt
╞╞K X
|
╞╞Y Z/
!DebugUtilsMessageSeverityFlagsEXT
╟╟) J
.
╟╟J K
ErrorBitExt
╟╟K V
;
╟╟V W

createInfo
╠╠ 
.
╠╠ 
MessageType
╠╠ "
=
╠╠# $+
DebugUtilsMessageTypeFlagsEXT
╠╠% B
.
╠╠B C
GeneralBitExt
╠╠C P
|
╠╠Q R+
DebugUtilsMessageTypeFlagsEXT
╡╡% B
.
╡╡B C
PerformanceBitExt
╡╡C T
|
╡╡U V+
DebugUtilsMessageTypeFlagsEXT
ЁЁ% B
.
ЁЁB C
ValidationBitExt
ЁЁC S
;
ЁЁS T

createInfo
╢╢ 
.
╢╢ 
PfnUserCallback
╢╢ &
=
╢╢' (
(
╢╢) *4
&DebugUtilsMessengerCallbackFunctionEXT
╢╢* P
)
╢╢P Q
DebugCallback
╢╢Q ^
;
╢╢^ _
}
╣╣ 	
internal
╥╥ 
uint
╥╥ 
DebugCallback
╥╥ #
(
╥╥# $/
!DebugUtilsMessageSeverityFlagsEXT
╥╥$ E
messageSeverity
╥╥F U
,
╥╥U V+
DebugUtilsMessageTypeFlagsEXT
╥╥W t
messageTypes╥╥u │
,╥╥│ ┌2
"DebugUtilsMessengerCallbackDataEXT╥╥┐ ╔
*╥╥╔ ╕
pCallbackData╥╥╖ ╢
,╥╥╢ ╣
void╥╥╤ ╨
*╥╥╨ ╩
	pUserData╥╥╪ е
)╥╥е ф
{
╦╦ 	
Console
╧╧ 
.
╧╧ 
	WriteLine
╧╧ 
(
╧╧ 
$"
╧╧  
$str
╧╧  1
"
╧╧1 2
+
╧╧3 4
Marshal
╧╧5 <
.
╧╧< =
PtrToStringAnsi
╧╧= L
(
╧╧L M
(
╧╧M N
nint
╧╧N R
)
╧╧R S
pCallbackData
╧╧S `
->
╧╧` b
PMessage
╧╧b j
)
╧╧j k
)
╧╧k l
;
╧╧l m
return
╨╨ 
Vk
╨╨ 
.
╨╨ 
False
╨╨ 
;
╨╨ 
}
╩╩ 	
internal
╫╫ 
void
╫╫ "
ChoosePhysicalDevice
╫╫ *
(
╫╫* +
)
╫╫+ ,
{
╬╬ 	
uint
©© 
_deviceCount
©© 
=
©© 
$num
©©  !
;
©©! "
_vulkan
юю 
.
юю  
GetPhysicalDevices
юю &
(
юю& '
	_instance
юю' 0
)
юю0 1
;
юю1 2
_vulkan
аа 
.
аа &
EnumeratePhysicalDevices
аа ,
(
аа, -
	_instance
аа- 6
,
аа6 7
&
аа8 9
_deviceCount
аа9 E
,
ааE F
null
ааG K
)
ааK L
;
ааL M
if
бб 
(
бб 
_deviceCount
бб 
==
бб 
$num
бб  !
)
бб! "
{
цц 
throw
дд 
new
дд 
	Exception
дд #
(
дд# $
$str
дд$ M
)
ддM N
;
ддN O
}
ее 
PhysicalDevice
фф 
[
фф 
]
фф 
_devices
фф %
=
фф& '
new
фф( +
PhysicalDevice
фф, :
[
фф: ;
_deviceCount
фф; G
]
ффG H
;
ффH I
_devices
гг 
=
гг 
(
гг 
PhysicalDevice
гг &
[
гг& '
]
гг' (
)
гг( )
_vulkan
гг) 0
.
гг0 1 
GetPhysicalDevices
гг1 C
(
ггC D
	_instance
ггD M
)
ггM N
;
ггN O
_gpu
хх 
=
хх 
_devices
хх 
[
хх 
$num
хх 
]
хх 
;
хх 
}
ии 	
internal
кк 
void
кк !
CreateLogicalDevice
кк )
(
кк) *
string
кк* 0
[
кк0 1
]
кк1 2 
requiredExtensions
кк3 E
,
ккE F,
PhysicalDeviceVulkan12Features
лл *
?
лл* +
_vulkan12FT
лл, 7
,
лл7 8$
PhysicalDeviceFeatures
мм "
?
мм" #
_deviceFeatures
мм$ 3
)
мм3 4
{
нн 	
int
оо 
_graphicsIndex
оо 
=
оо  
AVulkanHelper
оо! .
.
оо. /"
FindQueueFamilyIndex
оо/ C
(
ооC D
ref
ооD G
_gpu
ооH L
,
ооL M
ref
ооN Q
_qfm
ооR V
,
ооV W

QueueFlags
ооX b
.
ооb c
GraphicsBit
ооc n
)
ооn o
;
ооo p
float
пп 

_qPriority
пп 
=
пп 
$num
пп #
;
пп# $#
DeviceQueueCreateInfo
яя !
_qCreateInfo
яя" .
=
яя/ 0
new
яя1 4#
DeviceQueueCreateInfo
яя5 J
{
рр 
SType
сс 
=
сс 
StructureType
сс %
.
сс% &#
DeviceQueueCreateInfo
сс& ;
,
сс; <
QueueFamilyIndex
тт  
=
тт! "
(
тт# $
uint
тт$ (
)
тт( )
_graphicsIndex
тт) 7
,
тт7 8

QueueCount
уу 
=
уу 
$num
уу 
,
уу 
PQueuePriorities
жж  
=
жж! "
&
жж# $

_qPriority
жж$ .
}
вв 
;
вв $
PhysicalDeviceFeatures
ьь "
_df
ьь# &
=
ьь' (
(
ьь) *$
PhysicalDeviceFeatures
ьь* @
)
ьь@ A
_deviceFeatures
ььA P
;
ььP Q,
PhysicalDeviceVulkan12Features
ыы *
_v12FT
ыы+ 1
=
ыы2 3
(
ыы4 5,
PhysicalDeviceVulkan12Features
ыы5 S
)
ыыS T
_vulkan12FT
ыыT _
;
ыы_ `%
PhysicalDeviceFeatures2
зз #
_devFeatures2
зз$ 1
=
зз2 3
new
зз4 7%
PhysicalDeviceFeatures2
зз8 O
(
ззO P
)
ззP Q
{
шш 
SType
ээ 
=
ээ 
StructureType
ээ %
.
ээ% &%
PhysicalDeviceFeatures2
ээ& =
,
ээ= >
Features
щщ 
=
щщ 
_df
щщ 
,
щщ 
PNext
чч 
=
чч 
&
чч 
_v12FT
чч 
}
ъъ 
;
ъъ 
string
АА 
[
АА 
]
АА 
_validationLayers
АА &
=
АА' (
{
АА) *
$str
АА+ H
}
ААI J
;
ААJ K
byte
ББ 
*
ББ 
[
ББ 
]
ББ $
_validationLayersNames
ББ *
=
ББ+ ,
new
ББ- 0
byte
ББ1 5
*
ББ5 6
[
ББ6 7
_validationLayers
ББ7 H
.
ББH I
Length
ББI O
]
ББO P
;
ББP Q
for
ЦЦ 
(
ЦЦ 
int
ЦЦ 
i
ЦЦ 
=
ЦЦ 
$num
ЦЦ 
;
ЦЦ 
i
ЦЦ 
<
ЦЦ 
_validationLayers
ЦЦ  1
.
ЦЦ1 2
Length
ЦЦ2 8
;
ЦЦ8 9
i
ЦЦ: ;
++
ЦЦ; =
)
ЦЦ= >
{
ДД $
_validationLayersNames
ЕЕ &
[
ЕЕ& '
i
ЕЕ' (
]
ЕЕ( )
=
ЕЕ* +
(
ЕЕ, -
byte
ЕЕ- 1
*
ЕЕ1 2
)
ЕЕ2 3
SilkMarshal
ЕЕ3 >
.
ЕЕ> ?
StringToPtr
ЕЕ? J
(
ЕЕJ K
_validationLayers
ЕЕK \
[
ЕЕ\ ]
i
ЕЕ] ^
]
ЕЕ^ _
)
ЕЕ_ `
;
ЕЕ` a
}
ФФ 
uint
ХХ 
extensionCount
ХХ 
=
ХХ  !
$num
ХХ" #
;
ХХ# $
_vulkan
ИИ 
.
ИИ 0
"EnumerateDeviceExtensionProperties
ИИ 6
(
ИИ6 7
_gpu
ИИ7 ;
,
ИИ; <
(
ИИ= >
byte
ИИ> B
*
ИИB C
)
ИИC D
null
ИИD H
,
ИИH I
&
ИИJ K
extensionCount
ИИK Y
,
ИИY Z
null
ИИ[ _
)
ИИ_ `
;
ИИ` a!
ExtensionProperties
ЙЙ 
[
ЙЙ  
]
ЙЙ  !!
availableExtensions
ЙЙ" 5
=
ЙЙ6 7
new
ЙЙ8 ;!
ExtensionProperties
ЙЙ< O
[
ЙЙO P
extensionCount
ЙЙP ^
]
ЙЙ^ _
;
ЙЙ_ `
fixed
КК 
(
КК !
ExtensionProperties
КК &
*
КК& '$
availableExtensionsPtr
КК( >
=
КК? @!
availableExtensions
ККA T
)
ККT U
{
ЛЛ 
_vulkan
ММ 
.
ММ 0
"EnumerateDeviceExtensionProperties
ММ :
(
ММ: ;
_gpu
ММ; ?
,
ММ? @
(
ММA B
byte
ММB F
*
ММF G
)
ММG H
null
ММH L
,
ММL M
&
ММN O
extensionCount
ММO ]
,
ММ] ^$
availableExtensionsPtr
ММ_ u
)
ММu v
;
ММv w
}
НН 
foreach
ЯЯ 
(
ЯЯ 
string
ЯЯ 
requiredExtension
ЯЯ -
in
ЯЯ. 0 
requiredExtensions
ЯЯ1 C
)
ЯЯC D
{
РР 
bool
СС 
found
СС 
=
СС !
availableExtensions
СС 0
.
СС0 1
Any
СС1 4
(
СС4 5
ext
СС5 8
=>
СС9 ;
Marshal
СС< C
.
ССC D
PtrToStringAnsi
ССD S
(
ССS T
(
ССT U
nint
ССU Y
)
ССY Z
ext
ССZ ]
.
СС] ^
ExtensionName
СС^ k
)
ССk l
.
ССl m
TrimEnd
ССm t
(
ССt u
$char
ССu y
)
ССy z
==
СС{ } 
requiredExtensionСС~ ▐
)СС▐ ░
;СС░ ▒
if
ТТ 
(
ТТ 
!
ТТ 
found
ТТ 
)
ТТ 
{
УУ 
throw
ЖЖ 
new
ЖЖ 
	Exception
ЖЖ '
(
ЖЖ' (
$"
ЖЖ( *
$str
ЖЖ* >
{
ЖЖ> ?
requiredExtension
ЖЖ? P
}
ЖЖP Q
$str
ЖЖQ {
"
ЖЖ{ |
)
ЖЖ| }
;
ЖЖ} ~
}
ВВ 
}
ЬЬ 
nint
ЗЗ 
[
ЗЗ 
]
ЗЗ 
enabledExtensions
ЗЗ $
=
ЗЗ% & 
requiredExtensions
ЗЗ' 9
.
ЗЗ9 :
Select
ЗЗ: @
(
ЗЗ@ A
ext
ЗЗA D
=>
ЗЗE G
Marshal
ЗЗH O
.
ЗЗO P!
StringToHGlobalAnsi
ЗЗP c
(
ЗЗc d
ext
ЗЗd g
)
ЗЗg h
)
ЗЗh i
.
ЗЗi j
ToArray
ЗЗj q
(
ЗЗq r
)
ЗЗr s
;
ЗЗs t
nint
ШШ !
ppEnabledExtensions
ШШ $
=
ШШ% &
Marshal
ШШ' .
.
ШШ. /
AllocHGlobal
ШШ/ ;
(
ШШ; <
nint
ШШ< @
.
ШШ@ A
Size
ШШA E
*
ШШF G
enabledExtensions
ШШH Y
.
ШШY Z
Length
ШШZ `
)
ШШ` a
;
ШШa b
Marshal
ЭЭ 
.
ЭЭ 
Copy
ЭЭ 
(
ЭЭ 
enabledExtensions
ЭЭ *
,
ЭЭ* +
$num
ЭЭ, -
,
ЭЭ- .!
ppEnabledExtensions
ЭЭ/ B
,
ЭЭB C
enabledExtensions
ЭЭD U
.
ЭЭU V
Length
ЭЭV \
)
ЭЭ\ ]
;
ЭЭ] ^
fixed
ЧЧ 
(
ЧЧ 
byte
ЧЧ 
*
ЧЧ 
*
ЧЧ "
_ppEnabledLayerNames
ЧЧ .
=
ЧЧ/ 0$
_validationLayersNames
ЧЧ1 G
)
ЧЧG H
{
ЪЪ 
DeviceCreateInfo
──  
_deviceInfo
──! ,
=
──- .
new
──/ 2
DeviceCreateInfo
──3 C
{
││ 
SType
┌┌ 
=
┌┌ 
StructureType
┌┌ )
.
┌┌) *
DeviceCreateInfo
┌┌* :
,
┌┌: ;"
QueueCreateInfoCount
┐┐ (
=
┐┐) *
$num
┐┐+ ,
,
┐┐, -
PQueueCreateInfos
└└ %
=
└└& '
&
└└( )
_qCreateInfo
└└) 5
,
└└5 6!
PpEnabledLayerNames
┘┘ '
=
┘┘( )"
_ppEnabledLayerNames
┘┘* >
,
┘┘> ?#
EnabledExtensionCount
┤┤ )
=
┤┤* +
(
┤┤, -
uint
┤┤- 1
)
┤┤1 2
enabledExtensions
┤┤2 C
.
┤┤C D
Length
┤┤D J
,
┤┤J K%
PpEnabledExtensionNames
┬┬ +
=
┬┬, -
(
┬┬. /
byte
┬┬/ 3
*
┬┬3 4
*
┬┬4 5
)
┬┬5 6!
ppEnabledExtensions
┬┬6 I
,
┬┬I J
PEnabledFeatures
┴┴ $
=
┴┴% &
null
┴┴' +
,
┴┴+ ,
PNext
┼┼ 
=
┼┼ 
&
┼┼ 
_devFeatures2
┼┼ *
}
▀▀ 
;
▀▀ 
Result
▄▄ 
r
▄▄ 
=
▄▄ 
_vulkan
▄▄ "
.
▄▄" #
CreateDevice
▄▄# /
(
▄▄/ 0
_gpu
▄▄0 4
,
▄▄4 5
_deviceInfo
▄▄6 A
,
▄▄A B
null
▄▄C G
,
▄▄G H
out
▄▄I L
_logicalDevice
▄▄M [
)
▄▄[ \
;
▄▄\ ]
if
▌▌ 
(
▌▌ 
r
▌▌ 
!=
▌▌ 
Result
▌▌ 
.
▌▌  
Success
▌▌  '
)
▌▌' (
{
▐▐ 
throw
░░ 
new
░░ 
	Exception
░░ '
(
░░' (
$str
░░( K
+
░░L M
r
░░N O
)
░░O P
;
░░P Q
}
▒▒ 
}
▓▓ 
foreach
■■ 
(
■■ 
var
■■ 
f
■■ 
in
■■ $
_validationLayersNames
■■ 4
)
■■4 5
{
∙∙ 
SilkMarshal
√√ 
.
√√ 
Free
√√  
(
√√  !
(
√√! "
nint
√√" &
)
√√& '
f
√√' (
)
√√( )
;
√√) *
}
≈≈ 
foreach
≤≤ 
(
≤≤ 
var
≤≤ 
ptr
≤≤ 
in
≤≤ 
enabledExtensions
≤≤  1
)
≤≤1 2
{
≥≥ 
Marshal
   
.
   
FreeHGlobal
   #
(
  # $
ptr
  $ '
)
  ' (
;
  ( )
}
⌡⌡ 
Marshal
°° 
.
°° 
FreeHGlobal
°° 
(
°°  !
ppEnabledExtensions
°°  3
)
°°3 4
;
°°4 5
}
²² 	
internal
÷÷ 
virtual
÷÷ 
void
÷÷ $
AddEntityToRenderQueue
÷÷ 4
(
÷÷4 5
Entity
÷÷5 ;
_m
÷÷< >
)
÷÷> ?
{
══ 	
for
║║ 
(
║║ 
int
║║ 
i
║║ 
=
║║ 
$num
║║ 
;
║║ 
i
║║ 
<
║║ 
_entitiesToRender
║║  1
.
║║1 2
Count
║║2 7
;
║║7 8
i
║║9 :
++
║║: <
)
║║< =
_entitiesToRender
╒╒ !
[
╒╒! "
i
╒╒" #
]
╒╒# $
.
╒╒$ %
GetComponent
╒╒% 1
<
╒╒1 2
MeshComponent
╒╒2 ?
>
╒╒? @
(
╒╒@ A
)
╒╒A B
.
╒╒B C 
FreeDescriptorSets
╒╒C U
(
╒╒U V
)
╒╒V W
;
╒╒W X
if
ёё 
(
ёё 
_descriptorPool
ёё 
.
ёё  
Handle
ёё  &
!=
ёё' )
$num
ёё* +
)
ёё+ ,
_vulkan
╓╓ 
.
╓╓ #
DestroyDescriptorPool
╓╓ -
(
╓╓- .
_logicalDevice
╓╓. <
,
╓╓< =
_descriptorPool
╓╓> M
,
╓╓M N
null
╓╓O S
)
╓╓S T
;
╓╓T U
_entitiesToRender
╔╔ 
.
╔╔ 
Add
╔╔ !
(
╔╔! "
_m
╔╔" $
)
╔╔$ %
;
╔╔% &
}
╕╕ 	
internal
╗╗ 
virtual
╗╗ 
void
╗╗ 
AddEntityToUpdate
╗╗ /
(
╗╗/ 0
Entity
╗╗0 6
_m
╗╗7 9
)
╗╗9 :
{
╘╘ 	
if
╙╙ 
(
╙╙ 
_m
╙╙ 
.
╙╙ 
GetComponent
╙╙ 
<
╙╙  
MeshComponent
╙╙  -
>
╙╙- .
(
╙╙. /
)
╙╙/ 0
!=
╙╙0 2
null
╙╙2 6
)
╙╙6 7
_updateEntities
╚╚ 
.
╚╚  
Add
╚╚  #
(
╚╚# $
_m
╚╚$ &
)
╚╚& '
;
╚╚' (
}
╛╛ 	
internal
╝╝ 
virtual
╝╝ 
void
╝╝ #
AddLightToRenderQueue
╝╝ 3
(
╝╝3 4
Entity
╝╝4 :
_m
╝╝; =
)
╝╝= >
{
╝╝? @
}
╝╝A B
internal
╟╟ 
void
╟╟ 
CreateCommandPool
╟╟ '
(
╟╟' (
)
╟╟( )
{
╠╠ 	
int
╡╡ 
_queueFamilyIndex
╡╡ !
=
╡╡" #
AVulkanHelper
╡╡$ 1
.
╡╡1 2"
FindQueueFamilyIndex
╡╡2 F
(
╡╡F G
ref
╡╡G J
_gpu
╡╡K O
,
╡╡O P
ref
╡╡Q T
_qfm
╡╡U Y
,
╡╡Y Z

QueueFlags
╡╡[ e
.
╡╡e f
GraphicsBit
╡╡f q
)
╡╡q r
;
╡╡r s#
CommandPoolCreateInfo
ЁЁ !
_createInfo
ЁЁ" -
=
ЁЁ. /
new
ЁЁ0 3#
CommandPoolCreateInfo
ЁЁ4 I
(
ЁЁI J
)
ЁЁJ K
{
╢╢ 
SType
╣╣ 
=
╣╣ 
StructureType
╣╣ %
.
╣╣% &#
CommandPoolCreateInfo
╣╣& ;
,
╣╣; <
QueueFamilyIndex
╤╤  
=
╤╤! "
(
╤╤# $
uint
╤╤$ (
)
╤╤( )
_queueFamilyIndex
╤╤) :
,
╤╤: ;
}
╥╥ 
;
╥╥ 
if
╦╦ 
(
╦╦ 
_vulkan
╦╦ 
.
╦╦ 
CreateCommandPool
╦╦ )
(
╦╦) *
_logicalDevice
╦╦* 8
,
╦╦8 9
_createInfo
╦╦: E
,
╦╦E F
null
╦╦G K
,
╦╦K L
out
╦╦M P
_commandPool
╦╦Q ]
)
╦╦] ^
!=
╦╦_ a
Result
╦╦b h
.
╦╦h i
Success
╦╦i p
)
╦╦p q
{
╧╧ 
throw
╨╨ 
new
╨╨ 
	Exception
╨╨ #
(
╨╨# $
$str
╨╨$ C
)
╨╨C D
;
╨╨D E
}
╩╩ 
}
╪╪ 	
internal
╬╬ 
virtual
╬╬ 
void
╬╬ "
CreateCommandBuffers
╬╬ 2
(
╬╬2 3
)
╬╬3 4
{
©© 	
_commandBuffer
юю 
=
юю 
new
юю  
CommandBuffer
юю! .
[
юю. /
_swapimageCount
юю/ >
]
юю> ?
;
юю? @'
CommandBufferAllocateInfo
бб %

_allocInfo
бб& 0
=
бб1 2
new
бб3 6'
CommandBufferAllocateInfo
бб7 P
(
ббP Q
)
ббQ R
{
цц 
SType
дд 
=
дд 
StructureType
дд %
.
дд% &'
CommandBufferAllocateInfo
дд& ?
,
дд? @
CommandPool
ее 
=
ее 
_commandPool
ее *
,
ее* +
Level
фф 
=
фф  
CommandBufferLevel
фф *
.
фф* +
Primary
фф+ 2
,
фф2 3 
CommandBufferCount
гг "
=
гг# $
(
гг% &
uint
гг& *
)
гг* +
_commandBuffer
гг+ 9
.
гг9 :
Length
гг: @
}
хх 
;
хх 
fixed
ии 
(
ии 
CommandBuffer
ии  
*
ии  !
_commandBufferPtr
ии" 3
=
ии4 5
_commandBuffer
ии6 D
)
ииD E
{
йй 
Result
кк 
r
кк 
=
кк 
_vulkan
кк "
.
кк" #$
AllocateCommandBuffers
кк# 9
(
кк9 :
_logicalDevice
кк: H
,
ккH I

_allocInfo
ккJ T
,
ккT U
_commandBufferPtr
ккV g
)
ккg h
;
ккh i
if
лл 
(
лл 
r
лл 
!=
лл 
Result
лл 
.
лл  
Success
лл  '
)
лл' (
{
мм 
throw
нн 
new
нн 
	Exception
нн '
(
нн' (
$str
нн( W
+
ннX Y
r
ннZ [
)
нн[ \
;
нн\ ]
}
оо 
}
пп 
}
яя 	
internal
сс 
virtual
сс 
void
сс $
RecreateCommandBuffers
сс 4
(
сс4 5
)
сс5 6
{
тт 	
fixed
уу 
(
уу 
CommandBuffer
уу  
*
уу  !
CBPtr
уу" '
=
уу( )
_commandBuffer
уу* 8
)
уу8 9
{
жж 
_vulkan
вв 
.
вв  
FreeCommandBuffers
вв *
(
вв* +
_logicalDevice
вв+ 9
,
вв9 :
_commandPool
вв; G
,
ввG H
(
ввI J
uint
ввJ N
)
ввN O
_commandBuffer
ввO ]
.
вв] ^
Length
вв^ d
,
ввd e
CBPtr
ввf k
)
ввk l
;
ввl m
}
ьь 
}
ыы 	
internal
шш 
virtual
шш 
void
шш "
CreateDescriptorPool
шш 2
(
шш2 3
)
шш3 4
{
шш5 6
}
шш7 8
internal
щщ 
void
щщ '
CreateDescriptorSetLayout
щщ /
(
щщ/ 0
int
щщ0 3
_bindingCount
щщ4 A
,
щщA B
List
щщC G
<
щщG H
DescriptorType
щщH V
>
щщV W
_descriptors
щщX d
,
щщd e
List
щщf j
<
щщj k
ShaderStageFlags
щщk {
>
щщ{ |
_stageFlagsщщ} ┬
,щщ┬ ┴
refщщ┼ █#
DescriptorSetLayoutщщ▌ ║
_dslщщ╒ ╕
)щщ╕ ╖
{
чч 	
List
ъъ 
<
ъъ (
DescriptorSetLayoutBinding
ъъ +
>
ъъ+ ,
_bindingList
ъъ- 9
=
ъъ: ;
new
ъъ< ?
List
ъъ@ D
<
ъъD E(
DescriptorSetLayoutBinding
ъъE _
>
ъъ_ `
(
ъъ` a
)
ъъa b
;
ъъb c
for
ЮЮ 
(
ЮЮ 
int
ЮЮ 
i
ЮЮ 
=
ЮЮ 
$num
ЮЮ 
;
ЮЮ 
i
ЮЮ 
<
ЮЮ 
_bindingCount
ЮЮ (
;
ЮЮ( )
i
ЮЮ* +
++
ЮЮ+ -
)
ЮЮ- .
{
АА (
DescriptorSetLayoutBinding
ББ *
_binding
ББ+ 3
=
ББ4 5
new
ББ6 9(
DescriptorSetLayoutBinding
ББ: T
(
ББT U
)
ББU V
{
ЦЦ 
Binding
ДД 
=
ДД 
(
ДД 
uint
ДД #
)
ДД# $
i
ДД$ %
,
ДД% &
DescriptorCount
ЕЕ #
=
ЕЕ$ %
$num
ЕЕ& '
,
ЕЕ' (
DescriptorType
ФФ "
=
ФФ# $
_descriptors
ФФ% 1
[
ФФ1 2
i
ФФ2 3
]
ФФ3 4
,
ФФ4 5 
PImmutableSamplers
ГГ &
=
ГГ' (
null
ГГ) -
,
ГГ- .

StageFlags
ХХ 
=
ХХ  
_stageFlags
ХХ! ,
[
ХХ, -
i
ХХ- .
]
ХХ. /
}
ИИ 
;
ИИ 
_bindingList
ЙЙ 
.
ЙЙ 
Add
ЙЙ  
(
ЙЙ  !
_binding
ЙЙ! )
)
ЙЙ) *
;
ЙЙ* +
}
КК 
var
ЛЛ 
_b
ЛЛ 
=
ЛЛ 
_bindingList
ЛЛ !
.
ЛЛ! "
ToArray
ЛЛ" )
(
ЛЛ) *
)
ЛЛ* +
;
ЛЛ+ ,
fixed
ММ 
(
ММ (
DescriptorSetLayoutBinding
ММ -
*
ММ- .
_bindingsPtr
ММ/ ;
=
ММ< =
_b
ММ> @
)
ММ@ A
fixed
НН 
(
НН !
DescriptorSetLayout
НН &
*
НН& '
_descSetLayoutPtr
НН( 9
=
НН: ;
&
НН< =
_dsl
НН= A
)
ННA B
{
ОО +
DescriptorSetLayoutCreateInfo
ПП -
_layoutCreateInfo
ПП. ?
=
ПП@ A
new
ППB E+
DescriptorSetLayoutCreateInfo
ППF c
(
ППc d
)
ППd e
{
ЯЯ 
SType
РР 
=
РР 
StructureType
РР )
.
РР) *+
DescriptorSetLayoutCreateInfo
РР* G
,
РРG H
BindingCount
СС  
=
СС! "
(
СС# $
uint
СС$ (
)
СС( )
_bindingList
СС) 5
.
СС5 6
Count
СС6 ;
,
СС; <
	PBindings
ТТ 
=
ТТ 
_bindingsPtr
ТТ  ,
,
ТТ, -
}
УУ 
;
УУ 
if
ЖЖ 
(
ЖЖ 
_vulkan
ЖЖ 
.
ЖЖ '
CreateDescriptorSetLayout
ЖЖ 5
(
ЖЖ5 6
_logicalDevice
ЖЖ6 D
,
ЖЖD E
_layoutCreateInfo
ЖЖF W
,
ЖЖW X
null
ЖЖY ]
,
ЖЖ] ^
_descSetLayoutPtr
ЖЖ_ p
)
ЖЖp q
!=
ЖЖr t
Result
ЖЖu {
.
ЖЖ{ |
SuccessЖЖ| ┐
)ЖЖ┐ └
{
ВВ 
throw
ЬЬ 
new
ЬЬ 
	Exception
ЬЬ '
(
ЬЬ' (
$str
ЬЬ( P
)
ЬЬP Q
;
ЬЬQ R
}
ЫЫ 
}
ЗЗ 
}
ШШ 	
internal
ЩЩ 
virtual
ЩЩ 
void
ЩЩ 
Draw
ЩЩ "
(
ЩЩ" #
)
ЩЩ# $
{
ЩЩ% &
}
ЩЩ' (
internal
ЪЪ 
void
ЪЪ 
CreateSyncObjects
ЪЪ '
(
ЪЪ' (
)
ЪЪ( )
{
── 	'
_imageAvailableSemaphores
││ %
=
││& '
new
││( +
	Semaphore
││, 5
[
││5 6"
MAX_FRAMES_IN_FLIGHT
││6 J
]
││J K
;
││K L'
_renderFinishedSemaphores
┌┌ %
=
┌┌& '
new
┌┌( +
	Semaphore
┌┌, 5
[
┌┌5 6"
MAX_FRAMES_IN_FLIGHT
┌┌6 J
]
┌┌J K
;
┌┌K L
_fencesInFlight
┐┐ 
=
┐┐ 
new
┐┐ !
Fence
┐┐" '
[
┐┐' ("
MAX_FRAMES_IN_FLIGHT
┐┐( <
]
┐┐< =
;
┐┐= >
_imagesInFlight
└└ 
=
└└ 
new
└└ !
Fence
└└" '
[
└└' (

_swapchain
└└( 2
.
└└2 3
_swapchainImages
└└3 C
.
└└C D
Length
└└D J
]
└└J K
;
└└K L!
SemaphoreCreateInfo
├├ "
_semaphoreCreateInfo
├├  4
=
├├5 6
new
├├7 :!
SemaphoreCreateInfo
├├; N
(
├├N O
)
├├O P
{
┤┤ 
SType
┬┬ 
=
┬┬ 
StructureType
┬┬ %
.
┬┬% &!
SemaphoreCreateInfo
┬┬& 9
}
┴┴ 
;
┴┴ 
FenceCreateInfo
▀▀ 
_fenceCreateInfo
▀▀ ,
=
▀▀- .
new
▀▀/ 2
FenceCreateInfo
▀▀3 B
(
▀▀B C
)
▀▀C D
{
▄▄ 
SType
██ 
=
██ 
StructureType
██ %
.
██% &
FenceCreateInfo
██& 5
,
██5 6
Flags
▌▌ 
=
▌▌ 
FenceCreateFlags
▌▌ (
.
▌▌( )
SignaledBit
▌▌) 4
}
▐▐ 
;
▐▐ 
for
▒▒ 
(
▒▒ 
int
▒▒ 
i
▒▒ 
=
▒▒ 
$num
▒▒ 
;
▒▒ 
i
▒▒ 
<
▒▒ "
MAX_FRAMES_IN_FLIGHT
▒▒  4
;
▒▒4 5
i
▒▒6 7
++
▒▒7 9
)
▒▒9 :
{
▓▓ 
if
⌠⌠ 
(
⌠⌠ 
_vulkan
⌠⌠ 
.
⌠⌠ 
CreateSemaphore
⌠⌠ +
(
⌠⌠+ ,
_logicalDevice
⌠⌠, :
,
⌠⌠: ;"
_semaphoreCreateInfo
⌠⌠< P
,
⌠⌠P Q
null
⌠⌠R V
,
⌠⌠V W
out
⌠⌠X ['
_imageAvailableSemaphores
⌠⌠\ u
[
⌠⌠u v
i
⌠⌠v w
]
⌠⌠w x
)
⌠⌠x y
!=
⌠⌠z |
Result⌠⌠} ┐
.⌠⌠┐ └
Success⌠⌠└ ▀
||⌠⌠▄ ▌
_vulkan
■■ 
.
■■ 
CreateSemaphore
■■ +
(
■■+ ,
_logicalDevice
■■, :
,
■■: ;"
_semaphoreCreateInfo
■■< P
,
■■P Q
null
■■R V
,
■■V W
out
■■X ['
_renderFinishedSemaphores
■■\ u
[
■■u v
i
■■v w
]
■■w x
)
■■x y
!=
■■z |
Result■■} ┐
.■■┐ └
Success■■└ ▀
||■■▄ ▌
_vulkan
∙∙ 
.
∙∙ 
CreateFence
∙∙ '
(
∙∙' (
_logicalDevice
∙∙( 6
,
∙∙6 7
_fenceCreateInfo
∙∙8 H
,
∙∙H I
null
∙∙J N
,
∙∙N O
out
∙∙P S
_fencesInFlight
∙∙T c
[
∙∙c d
i
∙∙d e
]
∙∙e f
)
∙∙f g
!=
∙∙h j
Result
∙∙k q
.
∙∙q r
Success
∙∙r y
)
∙∙y z
{
√√ 
throw
≈≈ 
new
≈≈ 
	Exception
≈≈ '
(
≈≈' (
$str
≈≈( ^
+
≈≈_ `
i
≈≈a b
)
≈≈b c
;
≈≈c d
}
≤≤ 
}
≥≥ 
}
   	
}
⌡⌡ 
}°° лу
_H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\Swapchain.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{		 
struct

 
#
SwapChainSupportDetails

 "
{ 
public "
SurfaceCapabilitiesKHR %
Capabilities& 2
;2 3
public 
SurfaceFormatKHR 
[  
]  !
Formats" )
;) *
public 
PresentModeKHR 
[ 
] 
PresentModes  ,
;, -
} 
internal 
unsafe 
class 
	Swapchain #
{ 
internal 
SwapchainKHR 
_swapchainKHR +
;+ ,
internal 
KhrSwapchain 
_driverSwapchain .
;. /
internal 
Image 
[ 
] 
_swapchainImages )
;) *
internal 
	ImageView 
[ 
] 
_imageViews (
;( )
internal 
Image 
_depthImage "
;" #
internal 
	ImageView 

_depthView %
;% &
internal 
DeviceMemory 
_depthMemory *
;* +
internal 
SurfaceFormatKHR !
_surfaceFormat" 0
;0 1
internal 

RenderPass 
_renderPass '
;' (
internal 

RenderPass  
_shadowmapRenderPass 0
;0 1
internal 

KhrSurface 
_driverSurface *
;* +
internal   

SurfaceKHR   
_surface   $
;  $ %
internal"" 
	Swapchain"" 
("" 
ref"" 

KhrSurface"" )
_ks""* -
,""- .
ref""/ 2

SurfaceKHR""3 =
_sk""> A
)""A B
{## 	
_driverSurface$$ 
=$$ 
_ks$$  
;$$  !
_surface%% 
=%% 
_sk%% 
;%% 
}&& 	
internal(( 
void(( 
CreateSwapchain(( %
(((% &
ref((& )
Extent2D((* 2
_extent((3 :
)((: ;
{)) 	#
SwapChainSupportDetails** #
_support**$ ,
=**- .
GetSupportDetails**/ @
(**@ A
ref**A D
_driverSurface**E S
,**S T
ref**U X
_surface**Y a
)**a b
;**b c
_surfaceFormat++ 
=++ %
GetSwapchainSurfaceFormat++ 6
(++6 7
_support++7 ?
.++? @
Formats++@ G
)++G H
;++H I
PresentModeKHR,, 
_presentMode,, '
=,,( )
GetPresentMode,,* 8
(,,8 9
_support,,9 A
.,,A B
PresentModes,,B N
),,N O
;,,O P
QueueFamilyIndices.. 
_indices.. '
=..( )
FindQueueFamilies..* ;
(..; <
ref..< ?
_driverSurface..@ N
,..N O
ref..P S
_surface..T \
)..\ ]
;..] ^
var// 
_queueFamilyIndices// #
=//$ %

stackalloc//& 0
[//0 1
]//1 2
{//3 4
_indices//5 =
.//= >
GraphicsFamily//> L
.//L M
Value//M R
,//R S
_indices//T \
.//\ ]
PresentFamily//] j
.//j k
Value//k p
}//q r
;//r s
uint11 
_imageCount11 
=11 
_support11 '
.11' (
Capabilities11( 4
.114 5
MinImageCount115 B
+11C D
$num11E F
;11F G"
SwapchainCreateInfoKHR22 " 
_swapchainCreateInfo22# 7
=228 9
new22: ="
SwapchainCreateInfoKHR22> T
(22T U
)22U V
{33 
SType44 
=44 
StructureType44 %
.44% &"
SwapchainCreateInfoKhr44& <
,44< =
Surface55 
=55 
_surface55 "
,55" #
MinImageCount77 
=77 
_imageCount77  +
,77+ ,
ImageFormat88 
=88 
_surfaceFormat88 ,
.88, -
Format88- 3
,883 4
ImageColorSpace99 
=99  !
_surfaceFormat99" 0
.990 1

ColorSpace991 ;
,99; <
ImageExtent:: 
=:: 
_extent:: %
,::% &
ImageArrayLayers;;  
=;;! "
$num;;# $
,;;$ %

ImageUsage<< 
=<< 
ImageUsageFlags<< ,
.<<, -
ColorAttachmentBit<<- ?
|<<@ A
ImageUsageFlags<<B Q
.<<Q R
TransferDstBit<<R `
,<<` a
ImageSharingMode==  
===! "
SharingMode==# .
.==. /
	Exclusive==/ 8
,==8 9
PresentMode>> 
=>> 
_presentMode>> *
,>>* +
Clipped?? 
=?? 
true?? 
,?? 
OldSwapchain@@ 
=@@ 
default@@ &
,@@& '
CompositeAlphaAA 
=AA  "
CompositeAlphaFlagsKHRAA! 7
.AA7 8
OpaqueBitKhrAA8 D
,AAD E
PreTransformBB 
=BB 
_supportBB '
.BB' (
CapabilitiesBB( 4
.BB4 5
CurrentTransformBB5 E
,BBE F!
QueueFamilyIndexCountCC %
=CC& '
$numCC( )
,CC) *
PQueueFamilyIndicesDD #
=DD$ %
_queueFamilyIndicesDD& 9
,DD9 :
}EE 
;EE 
ifGG 
(GG 
!GG 
VulkanRendererGG 
.GG  
_vulkanGG  '
.GG' (!
TryGetDeviceExtensionGG( =
(GG= >
VulkanRendererGG> L
.GGL M
	_instanceGGM V
,GGV W
VulkanRendererGGX f
.GGf g
_logicalDeviceGGg u
,GGu v
outGGw z
_driverSwapchain	GG{ ▀
)
GG▀ ▄
)
GG▄ █
{HH 
throwII 
newII 
	ExceptionII #
(II# $
$strII$ X
)IIX Y
;IIY Z
}JJ 
ResultLL 
rLL 
=LL 
_driverSwapchainLL '
!LL' (
.LL( )
CreateSwapchainLL) 8
(LL8 9
VulkanRendererLL9 G
.LLG H
_logicalDeviceLLH V
,LLV W 
_swapchainCreateInfoLLX l
,LLl m
nullLLn r
,LLr s
outLLt w
_swapchainKHR	LLx ┘
)
LL┘ ├
;
LL├ ┤
ifMM 
(MM 
rMM 
!=MM 
ResultMM 
.MM 
SuccessMM #
)MM# $
{NN 
throwOO 
newOO 
	ExceptionOO #
(OO# $
$strOO$ A
+OOB C
rOOD E
)OOE F
;OOF G
}PP 
uintQQ  
_swapchainImageCountQQ %
=QQ& '
$numQQ( )
;QQ) *
_driverSwapchainRR 
.RR 
GetSwapchainImagesRR /
(RR/ 0
VulkanRendererRR0 >
.RR> ?
_logicalDeviceRR? M
,RRM N
_swapchainKHRRRO \
,RR\ ]
&RR^ _ 
_swapchainImageCountRR_ s
,RRs t
nullRRu y
)RRy z
;RRz {
_swapchainImagesSS 
=SS 
newSS "
ImageSS# (
[SS( ) 
_swapchainImageCountSS) =
]SS= >
;SS> ?
fixedTT 
(TT 
ImageTT 
*TT 
	_imagePtrTT #
=TT$ %
_swapchainImagesTT& 6
)TT6 7
{UU 
_driverSwapchainVV  
.VV  !
GetSwapchainImagesVV! 3
(VV3 4
VulkanRendererVV4 B
.VVB C
_logicalDeviceVVC Q
,VVQ R
_swapchainKHRVVS `
,VV` a
&VVb c 
_swapchainImageCountVVc w
,VVw x
	_imagePtr	VVy ┌
)
VV┌ ┐
;
VV┐ └
}WW 
}XX 	
internalZZ 
voidZZ %
DoSwapchainMethodSequenceZZ /
(ZZ/ 0
refZZ0 3
Extent2DZZ4 <
_extentZZ= D
)ZZD E
{[[ 	
CreateSwapchain\\ 
(\\ 
ref\\ 
_extent\\  '
)\\' (
;\\( )
_imageViews]] 
=]] 
new]] 
	ImageView]] '
[]]' (
_swapchainImages]]( 8
.]]8 9
Length]]9 ?
]]]? @
;]]@ A
for^^ 
(^^ 
int^^ 
i^^ 
=^^ 
$num^^ 
;^^ 
i^^ 
<^^ 
_swapchainImages^^  0
.^^0 1
Length^^1 7
;^^7 8
i^^9 :
++^^: <
)^^< =
{__ 
CreateImageView`` 
(``  
ref``  #
_imageViews``$ /
[``/ 0
i``0 1
]``1 2
,``2 3
ref``4 7
_swapchainImages``8 H
[``H I
i``I J
]``J K
,``K L
ImageAspectFlags``M ]
.``] ^
ColorBit``^ f
,``f g
_surfaceFormat``h v
.``v w
Format``w }
)``} ~
;``~ 
}aa 
Formatbb 
_depthFormatbb 
=bb  !
GetDepthFormatbb" 0
(bb0 1
)bb1 2
;bb2 3 
AVulkanBufferHandlercc  
.cc  !
CreateImagecc! ,
(cc, -
VulkanRenderercc- ;
.cc; <
_extentcc< C
.ccC D
WidthccD I
,ccI J
VulkanRendererccK Y
.ccY Z
_extentccZ a
.cca b
Heightccb h
,cch i
_depthFormatccj v
,ccv w
ImageTiling	ccx ┐
.
cc┐ └
Optimal
cc└ ▀
,
cc▀ ▄
ImageUsageFlags
cc█ °
.
cc° ²'
DepthStencilAttachmentBit
cc² ╤
,
cc╤ ╥!
MemoryPropertyFlags
cc╦ к
.
ccк л
DeviceLocalBit
ccл з
,
ccз ш
ref
ccэ ъ
_depthImage
ccЮ К
,
ccК Л
ref
ccМ П
_depthMemory
ccЯ Щ
)
ccЩ Ч
;
ccЧ Ъ
CreateImageViewdd 
(dd 
refdd 

_depthViewdd  *
,dd* +
refdd, /
_depthImagedd0 ;
,dd; <
ImageAspectFlagsdd= M
.ddM N
DepthBitddN V
,ddV W
_depthFormatddX d
)ddd e
;dde f
CreateRenderPassee 
(ee 
)ee 
;ee 
ifff 
(ff 
VulkanRendererff 
.ff 
_rendererTypeff +
==ff, .
RendererTypesff/ <
.ff< =

Rasterizerff= G
)ffG H%
CreateShadowmapRenderPassgg )
(gg) *
)gg* +
;gg+ ,
}hh 	
internaljj 
voidjj 
CreateImageViewjj %
(jj% &
refjj& )
	ImageViewjj* 3
_ivjj4 7
,jj7 8
refjj9 <
Imagejj= B
_imjjC F
,jjF G
ImageAspectFlagsjjH X
_aspectjjY `
,jj` a
Formatjjb h
_fjji k
)jjk l
{kk 	
ImageViewCreateInfoll 
_createInfoll  +
=ll, -
newll. 1
ImageViewCreateInfoll2 E
{mm 
STypenn 
=nn 
StructureTypenn %
.nn% &
ImageViewCreateInfonn& 9
,nn9 :
Imageoo 
=oo 
_imoo 
,oo 
Formatpp 
=pp 
_fpp 
,pp 
ViewTypeqq 
=qq 
ImageViewTypeqq (
.qq( )
Type2Dqq) /
}rr 
;rr 
_createInfott 
.tt 
SubresourceRangett (
.tt( )

AspectMasktt) 3
=tt4 5
_aspecttt6 =
;tt= >
_createInfouu 
.uu 
SubresourceRangeuu (
.uu( )
BaseMipLeveluu) 5
=uu6 7
$numuu8 9
;uu9 :
_createInfovv 
.vv 
SubresourceRangevv (
.vv( )

LevelCountvv) 3
=vv4 5
$numvv6 7
;vv7 8
_createInfoww 
.ww 
SubresourceRangeww (
.ww( )
BaseArrayLayerww) 7
=ww8 9
$numww: ;
;ww; <
_createInfoxx 
.xx 
SubresourceRangexx (
.xx( )

LayerCountxx) 3
=xx4 5
$numxx6 7
;xx7 8
ifzz 
(zz 

Rasterizerzz 
.zz 
_vulkanzz "
!zz" #
.zz# $
CreateImageViewzz$ 3
(zz3 4

Rasterizerzz4 >
.zz> ?
_logicalDevicezz? M
,zzM N
_createInfozzO Z
,zzZ [
nullzz\ `
,zz` a
outzzb e
_ivzzf i
)zzi j
!=zzk m
Resultzzn t
.zzt u
Successzzu |
)zz| }
{{{ 
throw|| 
new|| 
	Exception|| #
(||# $
$str||$ C
)||C D
;||D E
}}} 
}~~ 	
internal
── 
void
── 
CreateRenderPass
── &
(
──& '
)
──' (
{
││ 	#
AttachmentDescription
┌┌ !
_colorAttachment
┌┌" 2
=
┌┌3 4
new
┌┌5 8#
AttachmentDescription
┌┌9 N
(
┌┌N O
)
┌┌O P
{
┐┐ 
Format
└└ 
=
└└ 
_surfaceFormat
└└ '
.
└└' (
Format
└└( .
,
└└. /
Samples
┘┘ 
=
┘┘ 
SampleCountFlags
┘┘ *
.
┘┘* +
	Count1Bit
┘┘+ 4
,
┘┘4 5
LoadOp
├├ 
=
├├ 
AttachmentLoadOp
├├ )
.
├├) *
Clear
├├* /
,
├├/ 0
StoreOp
┤┤ 
=
┤┤ 
AttachmentStoreOp
┤┤ +
.
┤┤+ ,
Store
┤┤, 1
,
┤┤1 2
StencilLoadOp
┬┬ 
=
┬┬ 
AttachmentLoadOp
┬┬  0
.
┬┬0 1
DontCare
┬┬1 9
,
┬┬9 :
InitialLayout
┴┴ 
=
┴┴ 
ImageLayout
┴┴  +
.
┴┴+ ,
	Undefined
┴┴, 5
,
┴┴5 6
FinalLayout
┼┼ 
=
┼┼ 
ImageLayout
┼┼ )
.
┼┼) *
PresentSrcKhr
┼┼* 7
,
┼┼7 8
}
▀▀ 
;
▀▀ !
AttachmentReference
██ !
_colorAttachmentRef
██  3
=
██4 5
new
██6 9!
AttachmentReference
██: M
(
██M N
)
██N O
{
▌▌ 

Attachment
▐▐ 
=
▐▐ 
$num
▐▐ 
,
▐▐ 
Layout
░░ 
=
░░ 
ImageLayout
░░ $
.
░░$ %$
ColorAttachmentOptimal
░░% ;
,
░░; <
}
▒▒ 
;
▒▒ #
AttachmentDescription
⌠⌠ !
_depthAttachment
⌠⌠" 2
=
⌠⌠3 4
new
⌠⌠5 8#
AttachmentDescription
⌠⌠9 N
(
⌠⌠N O
)
⌠⌠O P
{
■■ 
Format
∙∙ 
=
∙∙ 
GetDepthFormat
∙∙ '
(
∙∙' (
)
∙∙( )
,
∙∙) *
Samples
√√ 
=
√√ 
SampleCountFlags
√√ *
.
√√* +
	Count1Bit
√√+ 4
,
√√4 5
LoadOp
≈≈ 
=
≈≈ 
AttachmentLoadOp
≈≈ )
.
≈≈) *
Clear
≈≈* /
,
≈≈/ 0
StoreOp
≤≤ 
=
≤≤ 
AttachmentStoreOp
≤≤ +
.
≤≤+ ,
DontCare
≤≤, 4
,
≤≤4 5
StencilLoadOp
≥≥ 
=
≥≥ 
AttachmentLoadOp
≥≥  0
.
≥≥0 1
DontCare
≥≥1 9
,
≥≥9 :
StencilStoreOp
   
=
    
AttachmentStoreOp
  ! 2
.
  2 3
DontCare
  3 ;
,
  ; <
InitialLayout
⌡⌡ 
=
⌡⌡ 
ImageLayout
⌡⌡  +
.
⌡⌡+ ,
	Undefined
⌡⌡, 5
,
⌡⌡5 6
FinalLayout
°° 
=
°° 
ImageLayout
°° )
.
°°) *+
DepthStencilAttachmentOptimal
°°* G
}
²² 
;
²² !
AttachmentReference
÷÷ !
_depthAttachmentRef
÷÷  3
=
÷÷4 5
new
÷÷6 9!
AttachmentReference
÷÷: M
(
÷÷M N
)
÷÷N O
{
══ 

Attachment
║║ 
=
║║ 
$num
║║ 
,
║║ 
Layout
╒╒ 
=
╒╒ 
ImageLayout
╒╒ $
.
╒╒$ %+
DepthStencilAttachmentOptimal
╒╒% B
}
ёё 
;
ёё  
SubpassDescription
╔╔ 
_subpass
╔╔ '
=
╔╔( )
new
╔╔* - 
SubpassDescription
╔╔. @
(
╔╔@ A
)
╔╔A B
{
╕╕ 
PipelineBindPoint
╖╖ !
=
╖╖" #
PipelineBindPoint
╖╖$ 5
.
╖╖5 6
Graphics
╖╖6 >
,
╖╖> ?"
ColorAttachmentCount
╗╗ $
=
╗╗% &
$num
╗╗' (
,
╗╗( )
PColorAttachments
╘╘ !
=
╘╘" #
&
╘╘$ %!
_colorAttachmentRef
╘╘% 8
,
╘╘8 9%
PDepthStencilAttachment
╙╙ '
=
╙╙( )
&
╙╙* +!
_depthAttachmentRef
╙╙+ >
}
╚╚ 
;
╚╚ 
SubpassDependency
╜╜ 

_subDepend
╜╜ (
=
╜╜) *
new
╜╜+ .
SubpassDependency
╜╜/ @
(
╜╜@ A
)
╜╜A B
{
╝╝ 

SrcSubpass
╞╞ 
=
╞╞ 
Vk
╞╞ 
.
╞╞  
SubpassExternal
╞╞  /
,
╞╞/ 0

DstSubpass
╟╟ 
=
╟╟ 
$num
╟╟ 
,
╟╟ 
SrcStageMask
╠╠ 
=
╠╠  
PipelineStageFlags
╠╠ 1
.
╠╠1 2&
ColorAttachmentOutputBit
╠╠2 J
|
╠╠K L 
PipelineStageFlags
╠╠M _
.
╠╠_ `#
EarlyFragmentTestsBit
╠╠` u
,
╠╠u v
SrcAccessMask
╡╡ 
=
╡╡ 
$num
╡╡  !
,
╡╡! "
DstStageMask
ЁЁ 
=
ЁЁ  
PipelineStageFlags
ЁЁ 1
.
ЁЁ1 2&
ColorAttachmentOutputBit
ЁЁ2 J
|
ЁЁK L 
PipelineStageFlags
ЁЁM _
.
ЁЁ_ `#
EarlyFragmentTestsBit
ЁЁ` u
,
ЁЁu v
DstAccessMask
╢╢ 
=
╢╢ 
AccessFlags
╢╢  +
.
╢╢+ ,%
ColorAttachmentWriteBit
╢╢, C
|
╢╢D E
AccessFlags
╢╢F Q
.
╢╢Q R,
DepthStencilAttachmentWriteBit
╢╢R p
}
╣╣ 
;
╣╣ 
var
╥╥ 
_attachments
╥╥ 
=
╥╥ 
new
╥╥ "
[
╥╥" #
]
╥╥# $
{
╥╥% &
_colorAttachment
╥╥' 7
,
╥╥7 8
_depthAttachment
╥╥9 I
}
╥╥J K
;
╥╥K L
fixed
╦╦ 
(
╦╦ #
AttachmentDescription
╦╦ (
*
╦╦( )
_attachmentPtr
╦╦* 8
=
╦╦9 :
_attachments
╦╦; G
)
╦╦G H
{
╧╧ "
RenderPassCreateInfo
╨╨ $
_renderPassInfo
╨╨% 4
=
╨╨5 6
new
╨╨7 :"
RenderPassCreateInfo
╨╨; O
(
╨╨O P
)
╨╨P Q
{
╩╩ 
SType
╪╪ 
=
╪╪ 
StructureType
╪╪ )
.
╪╪) *"
RenderPassCreateInfo
╪╪* >
,
╪╪> ?
AttachmentCount
╫╫ #
=
╫╫$ %
(
╫╫& '
uint
╫╫' +
)
╫╫+ ,
_attachments
╫╫, 8
.
╫╫8 9
Length
╫╫9 ?
,
╫╫? @
PAttachments
╬╬  
=
╬╬! "
_attachmentPtr
╬╬# 1
,
╬╬1 2
SubpassCount
©©  
=
©©! "
$num
©©# $
,
©©$ %

PSubpasses
юю 
=
юю  
&
юю! "
_subpass
юю" *
,
юю* +
DependencyCount
аа #
=
аа$ %
$num
аа& '
,
аа' (
PDependencies
бб !
=
бб" #
&
бб$ %

_subDepend
бб% /
}
цц 
;
цц 
if
ее 
(
ее 

Rasterizer
ее 
.
ее 
_vulkan
ее &
.
ее& '
CreateRenderPass
ее' 7
(
ее7 8

Rasterizer
ее8 B
.
ееB C
_logicalDevice
ееC Q
,
ееQ R
_renderPassInfo
ееS b
,
ееb c
null
ееd h
,
ееh i
out
ееj m
_renderPass
ееn y
)
ееy z
!=
ее{ }
Resultее~ └
.ее└ ┘
Successее┘ ▄
)ее▄ █
{
фф 
throw
гг 
new
гг 
	Exception
гг '
(
гг' (
$str
гг( G
)
ггG H
;
ггH I
}
хх 
}
ии 
}
йй 	
internal
лл 
void
лл '
CreateShadowmapRenderPass
лл /
(
лл/ 0
)
лл0 1
{
мм 	#
AttachmentDescription
нн !
_depthAttachment
нн" 2
=
нн3 4
new
нн5 8#
AttachmentDescription
нн9 N
(
ннN O
)
ннO P
{
оо 
Format
пп 
=
пп 
GetDepthFormat
пп '
(
пп' (
)
пп( )
,
пп) *
Samples
яя 
=
яя 
SampleCountFlags
яя *
.
яя* +
	Count1Bit
яя+ 4
,
яя4 5
LoadOp
рр 
=
рр 
AttachmentLoadOp
рр )
.
рр) *
Clear
рр* /
,
рр/ 0
StoreOp
сс 
=
сс 
AttachmentStoreOp
сс +
.
сс+ ,
Store
сс, 1
,
сс1 2
StencilLoadOp
тт 
=
тт 
AttachmentLoadOp
тт  0
.
тт0 1
DontCare
тт1 9
,
тт9 :
StencilStoreOp
уу 
=
уу  
AttachmentStoreOp
уу! 2
.
уу2 3
DontCare
уу3 ;
,
уу; <
InitialLayout
жж 
=
жж 
ImageLayout
жж  +
.
жж+ ,
	Undefined
жж, 5
,
жж5 6
FinalLayout
вв 
=
вв 
ImageLayout
вв )
.
вв) *)
DepthStencilReadOnlyOptimal
вв* E
}
ьь 
;
ьь !
AttachmentReference
зз !
_depthAttachmentRef
зз  3
=
зз4 5
new
зз6 9!
AttachmentReference
зз: M
(
ззM N
)
ззN O
{
шш 

Attachment
ээ 
=
ээ 
$num
ээ 
,
ээ 
Layout
щщ 
=
щщ 
ImageLayout
щщ $
.
щщ$ %+
DepthStencilAttachmentOptimal
щщ% B
}
чч 
;
чч  
SubpassDescription
ЮЮ 
_subpass
ЮЮ '
=
ЮЮ( )
new
ЮЮ* - 
SubpassDescription
ЮЮ. @
(
ЮЮ@ A
)
ЮЮA B
{
АА 
PipelineBindPoint
ББ !
=
ББ" #
PipelineBindPoint
ББ$ 5
.
ББ5 6
Graphics
ББ6 >
,
ББ> ?"
ColorAttachmentCount
ЦЦ $
=
ЦЦ% &
$num
ЦЦ' (
,
ЦЦ( )
PColorAttachments
ДД !
=
ДД" #
null
ДД$ (
,
ДД( )%
PDepthStencilAttachment
ЕЕ '
=
ЕЕ( )
&
ЕЕ* +!
_depthAttachmentRef
ЕЕ+ >
}
ФФ 
;
ФФ 
SubpassDependency
ХХ 

_subDepend
ХХ (
=
ХХ) *
new
ХХ+ .
SubpassDependency
ХХ/ @
(
ХХ@ A
)
ХХA B
{
ИИ 

SrcSubpass
ЙЙ 
=
ЙЙ 
Vk
ЙЙ 
.
ЙЙ  
SubpassExternal
ЙЙ  /
,
ЙЙ/ 0

DstSubpass
КК 
=
КК 
$num
КК 
,
КК 
SrcStageMask
ЛЛ 
=
ЛЛ  
PipelineStageFlags
ЛЛ 1
.
ЛЛ1 2#
EarlyFragmentTestsBit
ЛЛ2 G
,
ЛЛG H
SrcAccessMask
ММ 
=
ММ 
$num
ММ  !
,
ММ! "
DstStageMask
НН 
=
НН  
PipelineStageFlags
НН 1
.
НН1 2#
EarlyFragmentTestsBit
НН2 G
,
ННG H
DstAccessMask
ОО 
=
ОО 
AccessFlags
ОО  +
.
ОО+ ,,
DepthStencilAttachmentWriteBit
ОО, J
}
ПП 
;
ПП 
var
РР 
_attachments
РР 
=
РР 
new
РР "
[
РР" #
]
РР# $
{
РР% &
_depthAttachment
РР' 7
}
РР8 9
;
РР9 :
fixed
СС 
(
СС #
AttachmentDescription
СС (
*
СС( )
_attachmentPtr
СС* 8
=
СС9 :
_attachments
СС; G
)
ССG H
{
ТТ "
RenderPassCreateInfo
УУ $
_renderPassInfo
УУ% 4
=
УУ5 6
new
УУ7 :"
RenderPassCreateInfo
УУ; O
(
УУO P
)
УУP Q
{
ЖЖ 
SType
ВВ 
=
ВВ 
StructureType
ВВ )
.
ВВ) *"
RenderPassCreateInfo
ВВ* >
,
ВВ> ?
AttachmentCount
ЬЬ #
=
ЬЬ$ %
(
ЬЬ& '
uint
ЬЬ' +
)
ЬЬ+ ,
_attachments
ЬЬ, 8
.
ЬЬ8 9
Length
ЬЬ9 ?
,
ЬЬ? @
PAttachments
ЫЫ  
=
ЫЫ! "
_attachmentPtr
ЫЫ# 1
,
ЫЫ1 2
SubpassCount
ЗЗ  
=
ЗЗ! "
$num
ЗЗ# $
,
ЗЗ$ %

PSubpasses
ШШ 
=
ШШ  
&
ШШ! "
_subpass
ШШ" *
,
ШШ* +
DependencyCount
ЭЭ #
=
ЭЭ$ %
$num
ЭЭ& '
,
ЭЭ' (
PDependencies
ЩЩ !
=
ЩЩ" #
&
ЩЩ$ %

_subDepend
ЩЩ% /
}
ЧЧ 
;
ЧЧ 
if
── 
(
── 

Rasterizer
── 
.
── 
_vulkan
── &
.
──& '
CreateRenderPass
──' 7
(
──7 8

Rasterizer
──8 B
.
──B C
_logicalDevice
──C Q
,
──Q R
_renderPassInfo
──S b
,
──b c
null
──d h
,
──h i
out
──j m#
_shadowmapRenderPass──n ┌
)──┌ ┐
!=──└ ├
Result──┤ █
.──█ ▌
Success──▌ ∙
)──∙ √
{
││ 
throw
┌┌ 
new
┌┌ 
	Exception
┌┌ '
(
┌┌' (
$str
┌┌( G
)
┌┌G H
;
┌┌H I
}
┐┐ 
}
└└ 
}
┘┘ 	
internal
┤┤ 
void
┤┤ 
DestroySwapchain
┤┤ &
(
┤┤& '
)
┤┤' (
{
┬┬ 	
foreach
┴┴ 
(
┴┴ 
var
┴┴ 
iv
┴┴ 
in
┴┴ 
_imageViews
┴┴ *
)
┴┴* +
{
┼┼ 

Rasterizer
▀▀ 
.
▀▀ 
_vulkan
▀▀ "
.
▀▀" #
DestroyImageView
▀▀# 3
(
▀▀3 4

Rasterizer
▀▀4 >
.
▀▀> ?
_logicalDevice
▀▀? M
,
▀▀M N
iv
▀▀O Q
,
▀▀Q R
null
▀▀S W
)
▀▀W X
;
▀▀X Y
}
▄▄ 
_driverSwapchain
██ 
.
██ 
DestroySwapchain
██ -
(
██- .

Rasterizer
██. 8
.
██8 9
_logicalDevice
██9 G
,
██G H
_swapchainKHR
██I V
,
██V W
null
██X \
)
██\ ]
;
██] ^
}
▌▌ 	
}
▐▐ 
}░░ ⌠и
`H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\Rasterizer.cs
	namespace		 	
ArctisAurora		
 
.		 

EngineWork		 !
.		! "
Renderer		" *
{

 
struct 

	LightData 
{ 
internal 
Vector3D 
< 
float 
>  
_pos! %
;% &
internal 
Vector4D 
< 
float 
>  
_color! '
;' (
} 
internal 
unsafe 
class 

Rasterizer $
:% &
VulkanRenderer' 5
{ 
string 
[ 
] 
requiredExtensions #
=$ %
{& '
$str( :
}; <
;< =
private 
Framebuffer 
[ 
] 
_framebuffer *
;* +
internal 
static 
Buffer 
_lightBuffer +
;+ ,
internal 
static 
DeviceMemory $
_lightBufferMemory% 7
;7 8
internal 
static 
Buffer 
[ 
]  
	_lightUBO! *
;* +
internal 
static 
DeviceMemory $
[$ %
]% &
_lightUBOMemory' 6
;6 7
internal 
static 
DescriptorSetLayout +&
_descriptorSetLayoutShadow, F
;F G
internal 
static 
DescriptorPool &!
_descriptorPoolShadow' <
;< =
internal 
static 
Sampler 
_textureSampler  /
;/ 0
internal 
static 
Sampler 
_shadowmapSampler  1
;1 2
public"" 

Rasterizer"" 
("" 
)"" 
{## 	
Setup$$ 
($$ 
)$$ 
;$$ 
int&& !
_graphicsQFamilyIndex&& %
=&&& '
AVulkanHelper&&( 5
.&&5 6 
FindQueueFamilyIndex&&6 J
(&&J K
ref&&K N
_gpu&&O S
,&&S T
ref&&U X
_qfm&&Y ]
,&&] ^

QueueFlags&&_ i
.&&i j
GraphicsBit&&j u
)&&u v
;&&v w
uint''  
_presentSupportIndex'' %
=''& '
AVulkanHelper''( 5
.''5 6#
FindPresentSupportIndex''6 M
(''M N
ref''N Q
_qfm''R V
,''V W
ref''X [
	_glWindow''\ e
.''e f
_driverSurface''f t
,''t u
ref''v y
	_glWindow	''z ┐
.
''┐ └
_surface
''└ ▄
)
''▄ █
;
''█ ▌
_graphicsQueue(( 
=(( 
_vulkan(( $
.(($ %
GetDeviceQueue((% 3
(((3 4
_logicalDevice((4 B
,((B C
(((D E
uint((E I
)((I J!
_graphicsQFamilyIndex((J _
,((_ `
$num((a b
)((b c
;((c d
_presentQueue)) 
=)) 
_vulkan)) #
.))# $
GetDeviceQueue))$ 2
())2 3
_logicalDevice))3 A
,))A B 
_presentSupportIndex))C W
,))W X
$num))Y Z
)))Z [
;))[ \

_swapchain,, 
=,, 
new,, 
	Swapchain,, &
(,,& '
ref,,' *
	_glWindow,,+ 4
.,,4 5
_driverSurface,,5 C
,,,C D
ref,,E H
	_glWindow,,I R
.,,R S
_surface,,S [
),,[ \
;,,\ ]

_swapchain-- 
.-- %
DoSwapchainMethodSequence-- 0
(--0 1
ref--1 4
_extent--5 <
)--< =
;--= >
_swapimageCount.. 
=.. 

_swapchain.. (
...( )
_swapchainImages..) 9
...9 :
Length..: @
;..@ A
_camera// 
=// 
new// 
AuroraCamera// &
(//& '
)//' (
;//( )/
#CreateRasterizerDescritorSetLayouts22 /
(22/ 0
)220 1
;221 2"
CreateGraphicsPipeline33 "
(33" #
)33# $
;33$ %
CreateFrameBuffers44 
(44 
)44  
;44  !
CreateCommandPool55 
(55 
)55 
;55  
CreateImageSampler66 
(66 
)66  
;66  ! 
CreateDescriptorPool77  
(77  !
)77! "
;77" #&
CreateShadowDescriptorPool88 &
(88& '
)88' (
;88( ) 
CreateCommandBuffers;;  
(;;  !
);;! "
;;;" #
CreateSyncObjects<< 
(<< 
)<< 
;<<  
}== 	
private?? 
void?? 
Setup?? 
(?? 
)?? 
{@@ 	
_rendererInstanceBB 
=BB 
thisBB  $
;BB$ %"
PhysicalDeviceFeaturesDD "
_deviceFeaturesDD# 2
=DD3 4
newDD5 8"
PhysicalDeviceFeaturesDD9 O
(DDO P
)DDP Q
{EE 
SamplerAnisotropyFF !
=FF" #
trueFF$ (
}GG 
;GG *
PhysicalDeviceVulkan12FeaturesHH *
_vulkan12FTHH+ 6
=HH7 8
newHH9 <*
PhysicalDeviceVulkan12FeaturesHH= [
(HH[ \
)HH\ ]
{II 
STypeJJ 
=JJ 
StructureTypeJJ %
.JJ% &*
PhysicalDeviceVulkan12FeaturesJJ& D
,JJD E
BufferDeviceAddressKK #
=KK$ %
trueKK& *
,KK* +"
RuntimeDescriptorArrayLL &
=LL' (
trueLL) -
,LL- .
}MM 
;MM 
CreateLogicalDeviceOO 
(OO  
requiredExtensionsOO  2
,OO2 3
_vulkan12FTOO4 ?
,OO? @
_deviceFeaturesOOA P
)OOP Q
;OOQ R
}PP 	
internalRR 
overrideRR 
voidRR "
AddEntityToRenderQueueRR 5
(RR5 6
EntityRR6 <
_mRR= ?
)RR? @
{SS 	
baseTT 
.TT "
AddEntityToRenderQueueTT '
(TT' (
_mTT( *
)TT* +
;TT+ , 
CreateDescriptorPoolUU  
(UU  !
)UU! "
;UU" #&
CreateShadowDescriptorPoolVV &
(VV& '
)VV' (
;VV( )
forWW 
(WW 
intWW 
iWW 
=WW 
$numWW 
;WW 
iWW 
<WW 
_entitiesToRenderWW  1
.WW1 2
CountWW2 7
;WW7 8
iWW9 :
++WW: <
)WW< =
_entitiesToRenderXX !
[XX! "
iXX" #
]XX# $
.XX$ %
GetComponentXX% 1
<XX1 2
MeshComponentXX2 ?
>XX? @
(XX@ A
)XXA B
.XXB C&
ReinstantiateDesriptorSetsXXC ]
(XX] ^
)XX^ _
;XX_ `"
RecreateCommandBuffersZZ "
(ZZ" #
)ZZ# $
;ZZ$ %
}[[ 	
internal]] 
override]] 
void]] !
AddLightToRenderQueue]] 4
(]]4 5
Entity]]5 ;
_l]]< >
)]]> ?
{^^ 	
_lightsToRender__ 
.__ 
Add__ 
(__  
_l__  "
)__" #
;__# $
if`` 
(`` 
_lightsToRender`` 
.``  
Count``  %
==``& (
$num``) *
)``* +
{aa  
AVulkanBufferHandlerbb $
.bb$ %
CreateLightsBufferbb% 7
(bb7 8
refbb8 ;
_lightsToRenderbb< K
,bbK L
refbbM P
_lightBufferbbQ ]
,bb] ^
refbb_ b
_lightBufferMemorybbc u
)bbu v
;bbv w 
AVulkanBufferHandlercc $
.cc$ %
CreateLightUBOcc% 3
(cc3 4
refcc4 7
	_lightUBOcc8 A
,ccA B
refccC F
_lightUBOMemoryccG V
,ccV W
$numccX Y
)ccY Z
;ccZ [
}dd 
elseee 
{ff 
_vulkangg 
.gg 

FreeMemorygg "
(gg" #
_logicalDevicegg# 1
,gg1 2
_lightBufferMemorygg3 E
,ggE F
nullggG K
)ggK L
;ggL M 
AVulkanBufferHandlerhh $
.hh$ % 
RecreateLightsBufferhh% 9
(hh9 :
refhh: =
_lightsToRenderhh> M
,hhM N
refhhO R
_lightBufferhhS _
,hh_ `
refhha d
_lightBufferMemoryhhe w
)hhw x
;hhx y
foreachii 
(ii 
Bufferii 
bii  !
inii" $
	_lightUBOii% .
)ii. /
_vulkanjj 
.jj 
DestroyBufferjj )
(jj) *
_logicalDevicejj* 8
,jj8 9
bjj: ;
,jj; <
nulljj= A
)jjA B
;jjB C 
AVulkanBufferHandlerkk $
.kk$ %
CreateLightUBOkk% 3
(kk3 4
refkk4 7
	_lightUBOkk8 A
,kkA B
refkkC F
_lightUBOMemorykkG V
,kkV W
_lightsToRenderkkX g
.kkg h
Countkkh m
)kkm n
;kkn o
foreachll 
(ll 
Entityll 
_ell  "
inll# %
_entitiesToRenderll& 7
)ll7 8
{mm 
_enn 
.nn 
GetComponentnn #
<nn# $
MeshComponentnn$ 1
>nn1 2
(nn2 3
)nn3 4
.nn4 5
FreeDescriptorSetsnn5 G
(nnG H
)nnH I
;nnI J
_eoo 
.oo 
GetComponentoo #
<oo# $
MeshComponentoo$ 1
>oo1 2
(oo2 3
)oo3 4
.oo4 5&
ReinstantiateDesriptorSetsoo5 O
(ooO P
)ooP Q
;ooQ R
}pp 
}qq 
}rr 	
privatett 
voidtt 
RecreateSwapChaintt &
(tt& '
)tt' (
{uu 	
	_glWindowww 
.ww 
UpdateWindowSizeww &
(ww& '
refww' *
_extentww+ 2
)ww2 3
;ww3 4
_vulkanxx 
.xx 
DeviceWaitIdlexx "
(xx" #
_logicalDevicexx# 1
)xx1 2
;xx2 3
CleanUpSwapChainyy 
(yy 
)yy 
;yy 

_swapchain{{ 
.{{ %
DoSwapchainMethodSequence{{ 0
({{0 1
ref{{1 4
_extent{{5 <
){{< =
;{{= >"
CreateGraphicsPipeline|| "
(||" #
)||# $
;||$ %
CreateFrameBuffers}} 
(}} 
)}}  
;}}  ! 
CreateDescriptorPool  
(  !
)! "
;" #(
CreateShadowDescriptorPool
── &
(
──& '
)
──' (
;
──( )
for
││ 
(
││ 
int
││ 
i
││ 
=
││ 
$num
││ 
;
││ 
i
││ 
<
││ 
_entitiesToRender
││  1
.
││1 2
Count
││2 7
;
││7 8
i
││9 :
++
││: <
)
││< =
{
┌┌ 
_entitiesToRender
┐┐ !
[
┐┐! "
i
┐┐" #
]
┐┐# $
.
┐┐$ %
GetComponent
┐┐% 1
<
┐┐1 2
MeshComponent
┐┐2 ?
>
┐┐? @
(
┐┐@ A
)
┐┐A B
.
┐┐B C!
CreateDescriptorSet
┐┐C V
(
┐┐V W
)
┐┐W X
;
┐┐X Y
}
└└ $
RecreateCommandBuffers
┘┘ "
(
┘┘" #
)
┘┘# $
;
┘┘$ %
_imagesInFlight
┤┤ 
=
┤┤ 
new
┤┤ !
Fence
┤┤" '
[
┤┤' (

_swapchain
┤┤( 2
.
┤┤2 3
_swapchainImages
┤┤3 C
.
┤┤C D
Length
┤┤D J
]
┤┤J K
;
┤┤K L
}
┬┬ 	
private
┼┼ 
void
┼┼ $
CreateGraphicsPipeline
┼┼ +
(
┼┼+ ,
)
┼┼, -
{
▀▀ 	
	_pipeline
▄▄ 
=
▄▄ 
new
▄▄ 
GraphicsPipeline
▄▄ ,
(
▄▄, -
)
▄▄- .
;
▄▄. /
	_pipeline
██ 
.
██ $
CreateGraphicsPipeline
██ ,
(
██, -
$str
██- >
,
██> ?
$str
██@ Q
,
██Q R
_extent
██S Z
,
██Z [
ref
██\ _"
_descriptorSetLayout
██` t
)
██t u
;
██u v
	_pipeline
▌▌ 
.
▌▌ %
CreateShadwomapPipeline
▌▌ -
(
▌▌- .
$str
▌▌. B
,
▌▌B C
new
▌▌D G
Extent2D
▌▌H P
(
▌▌P Q
$num
▌▌Q U
,
▌▌U V
$num
▌▌W [
)
▌▌[ \
,
▌▌\ ]
ref
▌▌^ a(
_descriptorSetLayoutShadow
▌▌b |
)
▌▌| }
;
▌▌} ~
}
▐▐ 	
private
▒▒ 
void
▒▒  
CreateFrameBuffers
▒▒ '
(
▒▒' (
)
▒▒( )
{
▓▓ 	
_framebuffer
⌠⌠ 
=
⌠⌠ 
new
⌠⌠ 
Framebuffer
⌠⌠ *
[
⌠⌠* +

_swapchain
⌠⌠+ 5
!
⌠⌠5 6
.
⌠⌠6 7
_imageViews
⌠⌠7 B
.
⌠⌠B C
Length
⌠⌠C I
]
⌠⌠I J
;
⌠⌠J K
for
■■ 
(
■■ 
int
■■ 
i
■■ 
=
■■ 
$num
■■ 
;
■■ 
i
■■ 
<
■■ 

_swapchain
■■  *
.
■■* +
_imageViews
■■+ 6
.
■■6 7
Length
■■7 =
;
■■= >
i
■■? @
++
■■@ B
)
■■B C
{
∙∙ 
var
√√ 
_attachment
√√ 
=
√√  !
new
√√" %
[
√√% &
]
√√& '
{
√√( )

_swapchain
√√* 4
.
√√4 5
_imageViews
√√5 @
[
√√@ A
i
√√A B
]
√√B C
,
√√C D

_swapchain
√√E O
.
√√O P

_depthView
√√P Z
}
√√[ \
;
√√\ ]
fixed
≤≤ 
(
≤≤ 
	ImageView
≤≤  
*
≤≤  !
_imAttachmentPtr
≤≤" 2
=
≤≤3 4
_attachment
≤≤5 @
)
≤≤@ A
{
≥≥ #
FramebufferCreateInfo
   )
_framebufferInfo
  * :
=
  ; <
new
  = @#
FramebufferCreateInfo
  A V
(
  V W
)
  W X
{
⌡⌡ 
SType
°° 
=
°° 
StructureType
°°  -
.
°°- .#
FramebufferCreateInfo
°°. C
,
°°C D

RenderPass
²² "
=
²²# $

_swapchain
²²% /
.
²²/ 0
_renderPass
²²0 ;
,
²²; <
AttachmentCount
·· '
=
··( )
(
··* +
uint
··+ /
)
··/ 0
_attachment
··0 ;
.
··; <
Length
··< B
,
··B C
PAttachments
÷÷ $
=
÷÷% &
_imAttachmentPtr
÷÷' 7
,
÷÷7 8
Width
══ 
=
══ 
_extent
══  '
.
══' (
Width
══( -
,
══- .
Height
║║ 
=
║║  
_extent
║║! (
.
║║( )
Height
║║) /
,
║║/ 0
Layers
╒╒ 
=
╒╒  
$num
╒╒! "
}
ёё 
;
ёё 
if
╓╓ 
(
╓╓ 
_vulkan
╓╓ 
.
╓╓  
CreateFramebuffer
╓╓  1
(
╓╓1 2
_logicalDevice
╓╓2 @
,
╓╓@ A
_framebufferInfo
╓╓B R
,
╓╓R S
null
╓╓T X
,
╓╓X Y
out
╓╓Z ]
_framebuffer
╓╓^ j
[
╓╓j k
i
╓╓k l
]
╓╓l m
)
╓╓m n
!=
╓╓o q
Result
╓╓r x
.
╓╓x y
Success╓╓y ─
)╓╓─ │
{
╔╔ 
throw
╕╕ 
new
╕╕ !
	Exception
╕╕" +
(
╕╕+ ,
$str
╕╕, K
)
╕╕K L
;
╕╕L M
}
╖╖ 
}
╗╗ 
}
╘╘ 
}
╙╙ 	
internal
╛╛ 
override
╛╛ 
void
╛╛ $
RecreateCommandBuffers
╛╛ 5
(
╛╛5 6
)
╛╛6 7
{
╜╜ 	
base
╝╝ 
.
╝╝ $
RecreateCommandBuffers
╝╝ '
(
╝╝' (
)
╝╝( )
;
╝╝) *"
CreateCommandBuffers
╞╞  
(
╞╞  !
)
╞╞! "
;
╞╞" #
}
╟╟ 	
internal
╡╡ 
override
╡╡ 
void
╡╡ "
CreateCommandBuffers
╡╡ 3
(
╡╡3 4
)
╡╡4 5
{
ЁЁ 	
base
╢╢ 
.
╢╢ "
CreateCommandBuffers
╢╢ %
(
╢╢% &
)
╢╢& '
;
╢╢' (
for
╣╣ 
(
╣╣ 
int
╣╣ 
i
╣╣ 
=
╣╣ 
$num
╣╣ 
;
╣╣ 
i
╣╣ 
<
╣╣ 
_commandBuffer
╣╣  .
.
╣╣. /
Length
╣╣/ 5
;
╣╣5 6
i
╣╣7 8
++
╣╣8 :
)
╣╣: ;
{
╤╤ $
CommandBufferBeginInfo
╥╥ &

_beginInfo
╥╥' 1
=
╥╥2 3
new
╥╥4 7$
CommandBufferBeginInfo
╥╥8 N
(
╥╥N O
)
╥╥O P
{
╦╦ 
SType
╧╧ 
=
╧╧ 
StructureType
╧╧ )
.
╧╧) *$
CommandBufferBeginInfo
╧╧* @
}
╨╨ 
;
╨╨ 
if
╪╪ 
(
╪╪ 
_vulkan
╪╪ 
.
╪╪  
BeginCommandBuffer
╪╪ .
(
╪╪. /
_commandBuffer
╪╪/ =
[
╪╪= >
i
╪╪> ?
]
╪╪? @
,
╪╪@ A

_beginInfo
╪╪B L
)
╪╪L M
!=
╪╪N P
Result
╪╪Q W
.
╪╪W X
Success
╪╪X _
)
╪╪_ `
{
╫╫ 
throw
╬╬ 
new
╬╬ 
	Exception
╬╬ '
(
╬╬' (
$str
╬╬( Y
+
╬╬Z [
i
╬╬\ ]
)
╬╬] ^
;
╬╬^ _
}
©© !
RenderPassBeginInfo
аа #
_renderPassInfo
аа$ 3
=
аа4 5
new
аа6 9!
RenderPassBeginInfo
аа: M
(
ааM N
)
ааN O
{
бб 
SType
цц 
=
цц 
StructureType
цц )
.
цц) *!
RenderPassBeginInfo
цц* =
,
цц= >

RenderPass
дд 
=
дд  

_swapchain
дд! +
.
дд+ ,
_renderPass
дд, 7
,
дд7 8
Framebuffer
ее 
=
ее  !
_framebuffer
ее" .
[
ее. /
i
ее/ 0
]
ее0 1
,
ее1 2

RenderArea
фф 
=
фф  
{
гг 
Offset
хх 
=
хх  
{
хх! "
X
хх# $
=
хх% &
$num
хх' (
,
хх( )
Y
хх* +
=
хх+ ,
$num
хх, -
}
хх. /
,
хх/ 0
Extent
ии 
=
ии  
_extent
ии! (
}
йй 
}
кк 
;
кк 
var
мм 
_clearValues
мм  
=
мм! "
new
мм# &

ClearValue
мм' 1
[
мм1 2
]
мм2 3
{
нн 
new
оо 

ClearValue
оо "
(
оо" #
)
оо# $
{
пп 
Color
яя 
=
яя 
new
яя  #
ClearColorValue
яя$ 3
(
яя3 4
)
яя4 5
{
яя6 7
	Float32_0
яя8 A
=
яяB C
$num
яяD I
,
яяI J
	Float32_1
яяK T
=
яяU V
$num
яяW \
,
яя\ ]
	Float32_2
яя^ g
=
яяh i
$num
яяj o
,
яяo p
	Float32_3
яяq z
=
яя{ |
$num
яя} 
}яя─ │
,яя│ ┌
}
рр 
,
рр 
new
сс 

ClearValue
сс "
(
сс" #
)
сс# $
{
тт 
DepthStencil
уу $
=
уу% &
new
уу' *$
ClearDepthStencilValue
уу+ A
(
ууA B
)
ууB C
{
ууD E
Depth
ууF K
=
ууL M
$num
ууN P
,
ууP Q
Stencil
ууR Y
=
ууZ [
$num
уу\ ]
}
уу^ _
}
жж 
,
жж 
}
вв 
;
вв 
fixed
ыы 
(
ыы 

ClearValue
ыы !
*
ыы! "
_clrValuesPtr
ыы# 0
=
ыы1 2
_clearValues
ыы3 ?
)
ыы? @
{
зз 
_renderPassInfo
шш #
.
шш# $
ClearValueCount
шш$ 3
=
шш4 5
(
шш6 7
uint
шш7 ;
)
шш; <
_clearValues
шш< H
.
шшH I
Length
шшI O
;
шшO P
_renderPassInfo
ээ #
.
ээ# $
PClearValues
ээ$ 0
=
ээ1 2
_clrValuesPtr
ээ3 @
;
ээ@ A
}
щщ 
var
ъъ  
_shadowClearValues
ъъ &
=
ъъ' (
new
ъъ) ,

ClearValue
ъъ- 7
[
ъъ7 8
]
ъъ8 9
{
ЮЮ 
new
АА 

ClearValue
АА "
(
АА" #
)
АА# $
{
ББ 
DepthStencil
ЦЦ $
=
ЦЦ% &
new
ЦЦ' *$
ClearDepthStencilValue
ЦЦ+ A
(
ЦЦA B
)
ЦЦB C
{
ЦЦD E
Depth
ЦЦF K
=
ЦЦL M
$num
ЦЦN P
,
ЦЦP Q
Stencil
ЦЦR Y
=
ЦЦZ [
$num
ЦЦ\ ]
}
ЦЦ^ _
}
ДД 
}
ЕЕ 
;
ЕЕ 
Buffer
ХХ 
[
ХХ 
]
ХХ 
_vertBuffers
ХХ %
=
ХХ& '
new
ХХ( +
Buffer
ХХ, 2
[
ХХ2 3
_entitiesToRender
ХХ3 D
.
ХХD E
Count
ХХE J
+
ХХK L
_entitiesToRender
ХХM ^
.
ХХ^ _
Count
ХХ_ d
*
ХХe f
_lightsToRender
ХХg v
.
ХХv w
Count
ХХw |
]
ХХ| }
;
ХХ} ~
_vulkan
ИИ 
.
ИИ 
CmdBindPipeline
ИИ '
(
ИИ' (
_commandBuffer
ИИ( 6
[
ИИ6 7
i
ИИ7 8
]
ИИ8 9
,
ИИ9 :
PipelineBindPoint
ИИ; L
.
ИИL M
Graphics
ИИM U
,
ИИU V
	_pipeline
ИИW `
.
ИИ` a
_shadowPipeline
ИИa p
)
ИИp q
;
ИИq r
for
ЙЙ 
(
ЙЙ 
int
ЙЙ 
j
ЙЙ 
=
ЙЙ 
$num
ЙЙ 
;
ЙЙ 
j
ЙЙ  !
<
ЙЙ" #
_lightsToRender
ЙЙ$ 3
.
ЙЙ3 4
Count
ЙЙ4 9
;
ЙЙ9 :
j
ЙЙ; <
++
ЙЙ< >
)
ЙЙ> ?
{
КК !
RenderPassBeginInfo
ЛЛ '
_shadowPassInfo
ЛЛ( 7
=
ЛЛ8 9
new
ЛЛ: =!
RenderPassBeginInfo
ЛЛ> Q
(
ЛЛQ R
)
ЛЛR S
{
ММ 
SType
НН 
=
НН 
StructureType
НН  -
.
НН- .!
RenderPassBeginInfo
НН. A
,
ННA B

RenderPass
ОО "
=
ОО# $

_swapchain
ОО% /
.
ОО/ 0"
_shadowmapRenderPass
ОО0 D
,
ООD E
Framebuffer
ПП #
=
ПП$ %
_lightsToRender
ПП& 5
[
ПП5 6
j
ПП6 7
]
ПП7 8
.
ПП8 9
GetComponent
ПП9 E
<
ППE F"
LightsourceComponent
ППF Z
>
ППZ [
(
ПП[ \
)
ПП\ ]
.
ПП] ^ 
_shadowFramebuffer
ПП^ p
,
ППp q

RenderArea
ЯЯ "
=
ЯЯ# $
{
РР 
Offset
СС "
=
СС# $
{
СС% &
X
СС' (
=
СС) *
$num
СС+ ,
,
СС, -
Y
СС. /
=
СС0 1
$num
СС2 3
}
СС4 5
,
СС5 6
Extent
ТТ "
=
ТТ# $
new
ТТ% (
Extent2D
ТТ) 1
(
ТТ1 2
$num
ТТ2 6
,
ТТ6 7
$num
ТТ8 <
)
ТТ< =
}
УУ 
,
УУ 
}
ЖЖ 
;
ЖЖ 
fixed
ВВ 
(
ВВ 

ClearValue
ВВ %
*
ВВ% &
_clrValuesPtr
ВВ' 4
=
ВВ5 6 
_shadowClearValues
ВВ7 I
)
ВВI J
{
ЬЬ 
_shadowPassInfo
ЫЫ '
.
ЫЫ' (
ClearValueCount
ЫЫ( 7
=
ЫЫ8 9
(
ЫЫ: ;
uint
ЫЫ; ?
)
ЫЫ? @ 
_shadowClearValues
ЫЫ@ R
.
ЫЫR S
Length
ЫЫS Y
;
ЫЫY Z
_shadowPassInfo
ЗЗ '
.
ЗЗ' (
PClearValues
ЗЗ( 4
=
ЗЗ5 6
_clrValuesPtr
ЗЗ7 D
;
ЗЗD E
}
ЭЭ 
_vulkan
ЩЩ 
.
ЩЩ  
CmdBeginRenderPass
ЩЩ .
(
ЩЩ. /
_commandBuffer
ЩЩ/ =
[
ЩЩ= >
i
ЩЩ> ?
]
ЩЩ? @
,
ЩЩ@ A
&
ЩЩB C
_shadowPassInfo
ЩЩC R
,
ЩЩR S
SubpassContents
ЩЩT c
.
ЩЩc d
Inline
ЩЩd j
)
ЩЩj k
;
ЩЩk l
for
ЪЪ 
(
ЪЪ 
int
ЪЪ 
e
ЪЪ 
=
ЪЪ  
$num
ЪЪ! "
;
ЪЪ" #
e
ЪЪ$ %
<
ЪЪ& '
_entitiesToRender
ЪЪ( 9
.
ЪЪ9 :
Count
ЪЪ: ?
;
ЪЪ? @
e
ЪЪA B
++
ЪЪB D
)
ЪЪD E
{
── 
var
││ 
_offset
││ #
=
││$ %
new
││& )
ulong
││* /
[
││/ 0
]
││0 1
{
││2 3
$num
││4 5
}
││6 7
;
││7 8
(
┌┌ 
(
┌┌ 
MCRaster
┌┌ "
)
┌┌" #
_entitiesToRender
┌┌# 4
[
┌┌4 5
e
┌┌5 6
]
┌┌6 7
.
┌┌7 8
GetComponent
┌┌8 D
<
┌┌D E
MeshComponent
┌┌E R
>
┌┌R S
(
┌┌S T
)
┌┌T U
)
┌┌U V
.
┌┌V W&
EnqueuShadowDrawCommands
┌┌W o
(
┌┌o p
_offset
┌┌p w
,
┌┌w x
i
┌┌y z
,
┌┌z {
ref
┌┌| 
_commandBuffer┌┌─ ▌
[┌┌▌ ▐
i┌┌▐ ░
]┌┌░ ▒
,┌┌▒ ▓
j┌┌⌠ ■
)┌┌■ ∙
;┌┌∙ √
}
┐┐ 
_vulkan
└└ 
.
└└ 
CmdEndRenderPass
└└ ,
(
└└, -
_commandBuffer
└└- ;
[
└└; <
i
└└< =
]
└└= >
)
└└> ?
;
└└? @
}
┘┘ 
_vulkan
┤┤ 
.
┤┤ 
CmdBindPipeline
┤┤ '
(
┤┤' (
_commandBuffer
┤┤( 6
[
┤┤6 7
i
┤┤7 8
]
┤┤8 9
,
┤┤9 :
PipelineBindPoint
┤┤; L
.
┤┤L M
Graphics
┤┤M U
,
┤┤U V
	_pipeline
┤┤W `
.
┤┤` a
_graphicsPipeline
┤┤a r
)
┤┤r s
;
┤┤s t
_vulkan
┬┬ 
.
┬┬  
CmdBeginRenderPass
┬┬ *
(
┬┬* +
_commandBuffer
┬┬+ 9
[
┬┬9 :
i
┬┬: ;
]
┬┬; <
,
┬┬< =
&
┬┬> ?
_renderPassInfo
┬┬? N
,
┬┬N O
SubpassContents
┬┬P _
.
┬┬_ `
Inline
┬┬` f
)
┬┬f g
;
┬┬g h
for
┴┴ 
(
┴┴ 
int
┴┴ 
e
┴┴ 
=
┴┴ 
$num
┴┴ 
;
┴┴ 
e
┴┴  !
<
┴┴" #
_entitiesToRender
┴┴$ 5
.
┴┴5 6
Count
┴┴6 ;
;
┴┴; <
e
┴┴= >
++
┴┴> @
)
┴┴@ A
{
┼┼ 
var
▀▀ 
_offset
▀▀ 
=
▀▀  !
new
▀▀" %
ulong
▀▀& +
[
▀▀+ ,
]
▀▀, -
{
▀▀. /
$num
▀▀0 1
}
▀▀2 3
;
▀▀3 4
_entitiesToRender
▄▄ %
[
▄▄% &
e
▄▄& '
]
▄▄' (
.
▄▄( )
GetComponent
▄▄) 5
<
▄▄5 6
MeshComponent
▄▄6 C
>
▄▄C D
(
▄▄D E
)
▄▄E F
.
▄▄F G!
EnqueueDrawCommands
▄▄G Z
(
▄▄Z [
_offset
▄▄[ b
,
▄▄b c
i
▄▄d e
,
▄▄e f
ref
▄▄g j
_commandBuffer
▄▄k y
[
▄▄y z
i
▄▄z {
]
▄▄{ |
)
▄▄| }
;
▄▄} ~
}
██ 
_vulkan
░░ 
.
░░ 
CmdEndRenderPass
░░ (
(
░░( )
_commandBuffer
░░) 7
[
░░7 8
i
░░8 9
]
░░9 :
)
░░: ;
;
░░; <
if
⌠⌠ 
(
⌠⌠ 
_vulkan
⌠⌠ 
.
⌠⌠ 
EndCommandBuffer
⌠⌠ ,
(
⌠⌠, -
_commandBuffer
⌠⌠- ;
[
⌠⌠; <
i
⌠⌠< =
]
⌠⌠= >
)
⌠⌠> ?
!=
⌠⌠@ B
Result
⌠⌠C I
.
⌠⌠I J
Success
⌠⌠J Q
)
⌠⌠Q R
{
■■ 
throw
∙∙ 
new
∙∙ 
	Exception
∙∙ '
(
∙∙' (
$str
∙∙( I
)
∙∙I J
;
∙∙J K
}
√√ 
}
≈≈ 
}
≤≤ 	
private
   
void
   1
#CreateRasterizerDescritorSetLayouts
   8
(
  8 9
)
  9 :
{
⌡⌡ 	
List
°° 
<
°° 
DescriptorType
°° 
>
°°  
_types1
°°! (
=
°°) *
new
°°+ .
List
°°/ 3
<
°°3 4
DescriptorType
°°4 B
>
°°B C
{
°°D E
DescriptorType
°°F T
.
°°T U
UniformBuffer
°°U b
,
°°b c
DescriptorType
°°d r
.
°°r s
StorageBuffer°°s ─
,°°─ │
DescriptorType°°┌ ░
.°°░ ▒
StorageBuffer°°▒ ·
,°°· ÷
DescriptorType°°═ ╝
.°°╝ ╞$
CombinedImageSampler°°╞ ц
,°°ц д
DescriptorType°°е с
.°°с т$
CombinedImageSampler°°т Х
}°°И Й
;°°Й К
List
²² 
<
²² 
ShaderStageFlags
²² !
>
²²! "
_flags1
²²# *
=
²²+ ,
new
²²- 0
List
²²1 5
<
²²5 6
ShaderStageFlags
²²6 F
>
²²F G
{
²²H I
ShaderStageFlags
²²J Z
.
²²Z [
	VertexBit
²²[ d
,
²²d e
ShaderStageFlags
²²f v
.
²²v w
	VertexBit²²w ─
,²²─ │ 
ShaderStageFlags²²┌ ▓
.²²▓ ⌠
FragmentBit²²⌠ ·
,²²· ÷ 
ShaderStageFlags²²═ ╟
.²²╟ ╠
FragmentBit²²╠ ╪
,²²╪ ╫ 
ShaderStageFlags²²╬ н
.²²н о
FragmentBit²²о з
,²²з ш
}²²э щ
;²²щ ч'
CreateDescriptorSetLayout
·· %
(
··% &
_types1
··& -
.
··- .
Count
··. 3
,
··3 4
_types1
··5 <
,
··< =
_flags1
··> E
,
··E F
ref
··G J"
_descriptorSetLayout
··K _
)
··_ `
;
··` a
List
÷÷ 
<
÷÷ 
DescriptorType
÷÷ 
>
÷÷  
_types2
÷÷! (
=
÷÷) *
new
÷÷+ .
List
÷÷/ 3
<
÷÷3 4
DescriptorType
÷÷4 B
>
÷÷B C
{
÷÷D E
DescriptorType
÷÷F T
.
÷÷T U
StorageBuffer
÷÷U b
,
÷÷b c
DescriptorType
÷÷d r
.
÷÷r s
StorageBuffer÷÷s ─
}÷÷│ ┌
;÷÷┌ ┐
List
══ 
<
══ 
ShaderStageFlags
══ !
>
══! "
_flags2
══# *
=
══+ ,
new
══- 0
List
══1 5
<
══5 6
ShaderStageFlags
══6 F
>
══F G
{
══H I
ShaderStageFlags
══J Z
.
══Z [
	VertexBit
══[ d
,
══d e
ShaderStageFlags
══f v
.
══v w
	VertexBit══w ─
}══│ ┌
;══┌ ┐'
CreateDescriptorSetLayout
║║ %
(
║║% &
_types2
║║& -
.
║║- .
Count
║║. 3
,
║║3 4
_types2
║║5 <
,
║║< =
_flags2
║║> E
,
║║E F
ref
║║G J(
_descriptorSetLayoutShadow
║║K e
)
║║e f
;
║║f g
}
╒╒ 	
internal
╓╓ 
override
╓╓ 
void
╓╓ "
CreateDescriptorPool
╓╓ 3
(
╓╓3 4
)
╓╓4 5
{
╔╔ 	
var
╕╕ 

_poolSizes
╕╕ 
=
╕╕ 
new
╕╕   
DescriptorPoolSize
╕╕! 3
[
╕╕3 4
]
╕╕4 5
{
╖╖ 
new
╗╗  
DescriptorPoolSize
╗╗ &
(
╗╗& '
)
╗╗' (
{
╘╘ 
Type
╙╙ 
=
╙╙ 
DescriptorType
╙╙ )
.
╙╙) *
UniformBuffer
╙╙* 7
,
╙╙7 8
DescriptorCount
╚╚ #
=
╚╚$ %
(
╚╚& '
uint
╚╚' +
)
╚╚+ ,
(
╚╚, -
_swapimageCount
╚╚- <
*
╚╚= >
_entitiesToRender
╚╚? P
.
╚╚P Q
Count
╚╚Q V
)
╚╚V W
+
╚╚X Y
$num
╚╚Y Z
}
╛╛ 
,
╛╛ 
new
╜╜  
DescriptorPoolSize
╜╜ &
(
╜╜& '
)
╜╜' (
{
╝╝ 
Type
╞╞ 
=
╞╞ 
DescriptorType
╞╞ )
.
╞╞) *
StorageBuffer
╞╞* 7
,
╞╞7 8
DescriptorCount
╟╟ #
=
╟╟$ %
(
╟╟& '
uint
╟╟' +
)
╟╟+ ,
(
╟╟, -
_swapimageCount
╟╟- <
*
╟╟= >
_entitiesToRender
╟╟? P
.
╟╟P Q
Count
╟╟Q V
*
╟╟W X
$num
╟╟Y Z
)
╟╟Z [
+
╟╟\ ]
$num
╟╟^ _
}
╠╠ 
,
╠╠ 
new
╡╡  
DescriptorPoolSize
╡╡ &
(
╡╡& '
)
╡╡' (
{
ЁЁ 
Type
╢╢ 
=
╢╢ 
DescriptorType
╢╢ )
.
╢╢) *"
CombinedImageSampler
╢╢* >
,
╢╢> ?
DescriptorCount
╣╣ #
=
╣╣$ %
(
╣╣& '
uint
╣╣' +
)
╣╣+ ,
(
╣╣, -
_swapimageCount
╣╣- <
*
╣╣= >
_entitiesToRender
╣╣? P
.
╣╣P Q
Count
╣╣Q V
*
╣╣W X
$num
╣╣Y Z
)
╣╣Z [
+
╣╣\ ]
$num
╣╣^ _
}
╤╤ 
}
╥╥ 
;
╥╥ 
fixed
╧╧ 
(
╧╧  
DescriptorPoolSize
╧╧ %
*
╧╧% &
_poolSizesPtr
╧╧' 4
=
╧╧5 6

_poolSizes
╧╧7 A
)
╧╧A B
fixed
╨╨ 
(
╨╨ 
DescriptorPool
╨╨ !
*
╨╨! "
_descPoolPtr
╨╨# /
=
╨╨0 1
&
╨╨2 3
_descriptorPool
╨╨3 B
)
╨╨B C
{
╩╩ &
DescriptorPoolCreateInfo
╪╪ (
	_poolInfo
╪╪) 2
=
╪╪3 4
new
╪╪5 8&
DescriptorPoolCreateInfo
╪╪9 Q
(
╪╪Q R
)
╪╪R S
{
╫╫ 
SType
╬╬ 
=
╬╬ 
StructureType
╬╬ )
.
╬╬) *&
DescriptorPoolCreateInfo
╬╬* B
,
╬╬B C
PoolSizeCount
©© !
=
©©" #
(
©©$ %
uint
©©% )
)
©©) *

_poolSizes
©©* 4
.
©©4 5
Length
©©5 ;
,
©©; <

PPoolSizes
юю 
=
юю  
_poolSizesPtr
юю! .
,
юю. /
MaxSets
аа 
=
аа 
(
аа 
uint
аа #
)
аа# $
(
аа$ %
_swapimageCount
аа% 4
*
аа5 6
_entitiesToRender
аа7 H
.
ааH I
Count
ааI N
*
ааO P
$num
ааQ R
+
ааS T
$num
ааU V
)
ааV W
,
ааW X
Flags
бб 
=
бб '
DescriptorPoolCreateFlags
бб 5
.
бб5 6"
FreeDescriptorSetBit
бб6 J
}
цц 
;
цц 
if
дд 
(
дд 
_vulkan
дд 
.
дд "
CreateDescriptorPool
дд 0
(
дд0 1
_logicalDevice
дд1 ?
,
дд? @
	_poolInfo
ддA J
,
ддJ K
null
ддL P
,
ддP Q
_descPoolPtr
ддR ^
)
дд^ _
!=
дд` b
Result
ддc i
.
ддi j
Success
ддj q
)
ддq r
{
ее 
throw
фф 
new
фф 
	Exception
фф '
(
фф' (
$str
фф( J
)
ффJ K
;
ффK L
}
гг 
}
хх 
}
ии 	
private
кк 
void
кк (
CreateShadowDescriptorPool
кк /
(
кк/ 0
)
кк0 1
{
лл 	
var
мм 

_poolSizes
мм 
=
мм 
new
мм   
DescriptorPoolSize
мм! 3
[
мм3 4
]
мм4 5
{
нн 
new
оо  
DescriptorPoolSize
оо &
(
оо& '
)
оо' (
{
пп 
Type
яя 
=
яя 
DescriptorType
яя )
.
яя) *
StorageBuffer
яя* 7
,
яя7 8
DescriptorCount
рр #
=
рр$ %
(
рр& '
uint
рр' +
)
рр+ ,
(
рр, -

_swapchain
рр- 7
!
рр7 8
.
рр8 9
_swapchainImages
рр9 I
.
ррI J
Length
ррJ P
*
ррQ R
_entitiesToRender
ррS d
.
ррd e
Count
ррe j
*
ррk l
$num
ррm n
)
ррn o
+
ррp q
$num
ррr s
}
сс 
}
тт 
;
тт 
fixed
жж 
(
жж  
DescriptorPoolSize
жж %
*
жж% &
_poolSizesPtr
жж' 4
=
жж5 6

_poolSizes
жж7 A
)
жжA B
fixed
вв 
(
вв 
DescriptorPool
вв !
*
вв! "
_descPoolPtr
вв# /
=
вв0 1
&
вв2 3#
_descriptorPoolShadow
вв3 H
)
ввH I
{
ьь &
DescriptorPoolCreateInfo
ыы (
	_poolInfo
ыы) 2
=
ыы3 4
new
ыы5 8&
DescriptorPoolCreateInfo
ыы9 Q
(
ыыQ R
)
ыыR S
{
зз 
SType
шш 
=
шш 
StructureType
шш )
.
шш) *&
DescriptorPoolCreateInfo
шш* B
,
шшB C
PoolSizeCount
ээ !
=
ээ" #
(
ээ$ %
uint
ээ% )
)
ээ) *

_poolSizes
ээ* 4
.
ээ4 5
Length
ээ5 ;
,
ээ; <

PPoolSizes
щщ 
=
щщ  
_poolSizesPtr
щщ! .
,
щщ. /
MaxSets
чч 
=
чч 
(
чч 
uint
чч #
)
чч# $
(
чч$ %

_swapchain
чч% /
!
чч/ 0
.
чч0 1
_swapchainImages
чч1 A
.
ччA B
Length
ччB H
*
ччI J
_entitiesToRender
ччK \
.
чч\ ]
Count
чч] b
*
ччc d
$num
ччe f
+
ччg h
$num
ччi j
)
ччj k
,
ччk l
Flags
ъъ 
=
ъъ '
DescriptorPoolCreateFlags
ъъ 5
.
ъъ5 6"
FreeDescriptorSetBit
ъъ6 J
}
ЮЮ 
;
ЮЮ 
if
АА 
(
АА 
_vulkan
АА 
.
АА "
CreateDescriptorPool
АА 0
(
АА0 1
_logicalDevice
АА1 ?
,
АА? @
	_poolInfo
ААA J
,
ААJ K
null
ААL P
,
ААP Q
_descPoolPtr
ААR ^
)
АА^ _
!=
АА` b
Result
ААc i
.
ААi j
Success
ААj q
)
ААq r
{
ББ 
throw
ЦЦ 
new
ЦЦ 
	Exception
ЦЦ '
(
ЦЦ' (
$str
ЦЦ( J
)
ЦЦJ K
;
ЦЦK L
}
ДД 
}
ЕЕ 
}
ФФ 	
private
ХХ 
void
ХХ  
CreateImageSampler
ХХ '
(
ХХ' (
)
ХХ( )
{
ИИ 	
_vulkan
КК 
.
КК )
GetPhysicalDeviceProperties
КК /
(
КК/ 0
_gpu
КК0 4
,
КК4 5
out
КК6 9&
PhysicalDeviceProperties
КК: R
_properties
ККS ^
)
КК^ _
;
КК_ `
SamplerCreateInfo
ЛЛ 
_createInfo
ЛЛ )
=
ЛЛ* +
new
ЛЛ, /
SamplerCreateInfo
ЛЛ0 A
(
ЛЛA B
)
ЛЛB C
{
ММ 
SType
НН 
=
НН 
StructureType
НН %
.
НН% &
SamplerCreateInfo
НН& 7
,
НН7 8
	MagFilter
ОО 
=
ОО 
Filter
ОО "
.
ОО" #
Linear
ОО# )
,
ОО) *
	MinFilter
ПП 
=
ПП 
Filter
ПП "
.
ПП" #
Linear
ПП# )
,
ПП) *
AddressModeU
ЯЯ 
=
ЯЯ  
SamplerAddressMode
ЯЯ 1
.
ЯЯ1 2
Repeat
ЯЯ2 8
,
ЯЯ8 9
AddressModeV
РР 
=
РР  
SamplerAddressMode
РР 1
.
РР1 2
Repeat
РР2 8
,
РР8 9
AddressModeW
СС 
=
СС  
SamplerAddressMode
СС 1
.
СС1 2
Repeat
СС2 8
,
СС8 9
AnisotropyEnable
ТТ  
=
ТТ! "
true
ТТ# '
,
ТТ' (
MaxAnisotropy
УУ 
=
УУ 
_properties
УУ  +
.
УУ+ ,
Limits
УУ, 2
.
УУ2 3"
MaxSamplerAnisotropy
УУ3 G
,
УУG H
BorderColor
ЖЖ 
=
ЖЖ 
BorderColor
ЖЖ )
.
ЖЖ) *
IntOpaqueBlack
ЖЖ* 8
,
ЖЖ8 9%
UnnormalizedCoordinates
ВВ '
=
ВВ( )
false
ВВ* /
,
ВВ/ 0
CompareEnable
ЬЬ 
=
ЬЬ 
false
ЬЬ  %
,
ЬЬ% &
	CompareOp
ЫЫ 
=
ЫЫ 
	CompareOp
ЫЫ %
.
ЫЫ% &
Always
ЫЫ& ,
,
ЫЫ, -

MipmapMode
ЗЗ 
=
ЗЗ 
SamplerMipmapMode
ЗЗ .
.
ЗЗ. /
Linear
ЗЗ/ 5
}
ШШ 
;
ШШ 
fixed
ЩЩ 
(
ЩЩ 
Sampler
ЩЩ 
*
ЩЩ  
_textureSamplerPtr
ЩЩ .
=
ЩЩ/ 0
&
ЩЩ1 2
_textureSampler
ЩЩ2 A
)
ЩЩA B
{
ЧЧ 
Result
ЪЪ 
r
ЪЪ 
=
ЪЪ 
_vulkan
ЪЪ "
.
ЪЪ" #
CreateSampler
ЪЪ# 0
(
ЪЪ0 1
_logicalDevice
ЪЪ1 ?
,
ЪЪ? @
_createInfo
ЪЪA L
,
ЪЪL M
null
ЪЪN R
,
ЪЪR S 
_textureSamplerPtr
ЪЪT f
)
ЪЪf g
;
ЪЪg h
if
── 
(
── 
r
── 
!=
── 
Result
── 
.
──  
Success
──  '
)
──' (
{
││ 
throw
┌┌ 
new
┌┌ 
	Exception
┌┌ '
(
┌┌' (
$str
┌┌( Y
+
┌┌Z [
r
┌┌\ ]
)
┌┌] ^
;
┌┌^ _
}
┐┐ 
}
└└ 
SamplerCreateInfo
├├ 
_shadowInfo
├├ )
=
├├* +
new
├├, /
SamplerCreateInfo
├├0 A
(
├├A B
)
├├B C
{
┤┤ 
SType
┬┬ 
=
┬┬ 
StructureType
┬┬ %
.
┬┬% &
SamplerCreateInfo
┬┬& 7
,
┬┬7 8
	MagFilter
┴┴ 
=
┴┴ 
Filter
┴┴ "
.
┴┴" #
Linear
┴┴# )
,
┴┴) *
	MinFilter
┼┼ 
=
┼┼ 
Filter
┼┼ "
.
┼┼" #
Linear
┼┼# )
,
┼┼) *
AddressModeU
▀▀ 
=
▀▀  
SamplerAddressMode
▀▀ 1
.
▀▀1 2
ClampToEdge
▀▀2 =
,
▀▀= >
AddressModeV
▄▄ 
=
▄▄  
SamplerAddressMode
▄▄ 1
.
▄▄1 2
ClampToEdge
▄▄2 =
,
▄▄= >
AddressModeW
██ 
=
██  
SamplerAddressMode
██ 1
.
██1 2
ClampToEdge
██2 =
,
██= >
AnisotropyEnable
▌▌  
=
▌▌! "
false
▌▌# (
,
▌▌( )
MaxAnisotropy
▐▐ 
=
▐▐ 
$num
▐▐  $
,
▐▐$ %

MipLodBias
░░ 
=
░░ 
$num
░░ !
,
░░! "
MinLod
▒▒ 
=
▒▒ 
$num
▒▒ 
,
▒▒ 
MaxLod
▓▓ 
=
▓▓ 
$num
▓▓ 
,
▓▓ 
BorderColor
⌠⌠ 
=
⌠⌠ 
BorderColor
⌠⌠ )
.
⌠⌠) *
FloatOpaqueWhite
⌠⌠* :
,
⌠⌠: ;%
UnnormalizedCoordinates
■■ '
=
■■( )
false
■■* /
,
■■/ 0
CompareEnable
∙∙ 
=
∙∙ 
false
∙∙  %
,
∙∙% &
	CompareOp
√√ 
=
√√ 
	CompareOp
√√ %
.
√√% &
Less
√√& *
,
√√* +

MipmapMode
≈≈ 
=
≈≈ 
SamplerMipmapMode
≈≈ .
.
≈≈. /
Linear
≈≈/ 5
}
≤≤ 
;
≤≤ 
fixed
   
(
   
Sampler
   
*
    
_textureSamplerPtr
   .
=
  / 0
&
  1 2
_shadowmapSampler
  2 C
)
  C D
{
⌡⌡ 
Result
°° 
r
°° 
=
°° 
_vulkan
°° "
.
°°" #
CreateSampler
°°# 0
(
°°0 1
_logicalDevice
°°1 ?
,
°°? @
_shadowInfo
°°A L
,
°°L M
null
°°N R
,
°°R S 
_textureSamplerPtr
°°T f
)
°°f g
;
°°g h
if
²² 
(
²² 
r
²² 
!=
²² 
Result
²² 
.
²²  
Success
²²  '
)
²²' (
{
·· 
throw
÷÷ 
new
÷÷ 
	Exception
÷÷ '
(
÷÷' (
$str
÷÷( [
+
÷÷\ ]
r
÷÷^ _
)
÷÷_ `
;
÷÷` a
}
══ 
}
║║ 
}
╒╒ 	
internal
╓╓ 
override
╓╓ 
void
╓╓ 
Draw
╓╓ #
(
╓╓# $
)
╓╓$ %
{
╔╔ 	
_camera
╕╕ 
.
╕╕ 
ProcessKeyboard
╕╕ #
(
╕╕# $
)
╕╕$ %
;
╕╕% &
_vulkan
╖╖ 
.
╖╖ 
WaitForFences
╖╖ !
(
╖╖! "
_logicalDevice
╖╖" 0
,
╖╖0 1
$num
╖╖2 3
,
╖╖3 4
_fencesInFlight
╖╖5 D
[
╖╖D E
_currentFrame
╖╖E R
]
╖╖R S
,
╖╖S T
true
╖╖U Y
,
╖╖Y Z
ulong
╖╖[ `
.
╖╖` a
MaxValue
╖╖a i
)
╖╖i j
;
╖╖j k
uint
╗╗ 
_imageIndex
╗╗ 
=
╗╗ 
$num
╗╗  
;
╗╗  !
Result
╘╘ 
r
╘╘ 
=
╘╘ 

_swapchain
╘╘ !
.
╘╘! "
_driverSwapchain
╘╘" 2
.
╘╘2 3
AcquireNextImage
╘╘3 C
(
╘╘C D
_logicalDevice
╘╘D R
,
╘╘R S

_swapchain
╘╘T ^
.
╘╘^ _
_swapchainKHR
╘╘_ l
,
╘╘l m
ulong
╘╘n s
.
╘╘s t
MaxValue
╘╘t |
,
╘╘| }(
_imageAvailableSemaphores╘╘~ ≈
[╘╘≈ ≤
_currentFrame╘╘≤ ╔
]╘╘╔ ╕
,╘╘╕ ╖
default╘╘╗ ╞
,╘╘╞ ╟
ref╘╘╠ ╢
_imageIndex╘╘╣ ю
)╘╘ю а
;╘╘а б
if
╚╚ 
(
╚╚ 
r
╚╚ 
==
╚╚ 
Result
╚╚ 
.
╚╚ 
ErrorOutOfDateKhr
╚╚ -
)
╚╚- .
{
╛╛ 
RecreateSwapChain
╜╜ !
(
╜╜! "
)
╜╜" #
;
╜╜# $
return
╝╝ 
;
╝╝ 
}
╞╞ 
else
╟╟ 
if
╟╟ 
(
╟╟ 
r
╟╟ 
!=
╟╟ 
Result
╟╟  
.
╟╟  !
Success
╟╟! (
&&
╟╟) +
r
╟╟, -
!=
╟╟. 0
Result
╟╟1 7
.
╟╟7 8
SuboptimalKhr
╟╟8 E
)
╟╟E F
{
╠╠ 
throw
╡╡ 
new
╡╡ 
	Exception
╡╡ #
(
╡╡# $
$str
╡╡$ G
)
╡╡G H
;
╡╡H I
}
ЁЁ 
_camera
╣╣ 
.
╣╣  
UpdateCameraMatrix
╣╣ &
(
╣╣& '
_extent
╣╣' .
,
╣╣. /
_imageIndex
╣╣0 ;
)
╣╣; <
;
╣╣< =
if
╤╤ 
(
╤╤ 
_lightsToRender
╤╤ 
.
╤╤  
Count
╤╤  %
>
╤╤& '
$num
╤╤( )
)
╤╤) *
{
╥╥ "
AVulkanBufferHandler
╦╦ $
.
╦╦$ % 
UpdateLightsBuffer
╦╦% 7
(
╦╦7 8
ref
╦╦8 ;
_lightsToRender
╦╦< K
,
╦╦K L
ref
╦╦M P 
_lightBufferMemory
╦╦Q c
)
╦╦c d
;
╦╦d e"
AVulkanBufferHandler
╧╧ $
.
╧╧$ %!
UpdateLightUniforms
╧╧% 8
(
╧╧8 9
ref
╧╧9 <
_lightsToRender
╧╧= L
,
╧╧L M
_imageIndex
╧╧N Y
,
╧╧Y Z
ref
╧╧[ ^
_lightUBOMemory
╧╧_ n
)
╧╧n o
;
╧╧o p
}
╨╨ 
foreach
╪╪ 
(
╪╪ 
Entity
╪╪ 
e
╪╪ 
in
╪╪  
_lightsToRender
╪╪! 0
)
╪╪0 1
{
╫╫ 
e
╬╬ 
.
╬╬ 
GetComponent
╬╬ 
<
╬╬ "
LightsourceComponent
╬╬ 3
>
╬╬3 4
(
╬╬4 5
)
╬╬5 6
.
╬╬6 7
UpdateVPMatrices
╬╬7 G
(
╬╬G H
_imageIndex
╬╬H S
)
╬╬S T
;
╬╬T U
}
©© 
int
аа 
localEntityCount
аа  
=
аа! "
$num
аа# $
;
аа$ %
foreach
бб 
(
бб 
Entity
бб 
e
бб 
in
бб  
_updateEntities
бб! 0
)
бб0 1
{
цц 
e
дд 
.
дд 
GetComponent
дд 
<
дд 
MeshComponent
дд ,
>
дд, -
(
дд- .
)
дд. /
.
дд/ 0
UpdateMatrices
дд0 >
(
дд> ?
)
дд? @
;
дд@ A
localEntityCount
ее  
++
ее  "
;
ее" #
}
фф 
_updateEntities
гг 
.
гг 
RemoveRange
гг '
(
гг' (
$num
гг( )
,
гг) *
localEntityCount
гг+ ;
)
гг; <
;
гг< =
if
ии 
(
ии 
_imagesInFlight
ии 
[
ии  
_imageIndex
ии  +
]
ии+ ,
.
ии, -
Handle
ии- 3
!=
ии4 6
default
ии7 >
)
ии> ?
{
йй 
_vulkan
кк 
.
кк 
WaitForFences
кк %
(
кк% &
_logicalDevice
кк& 4
,
кк4 5
$num
кк6 7
,
кк7 8
_imagesInFlight
кк9 H
[
ккH I
_imageIndex
ккI T
]
ккT U
,
ккU V
true
ккW [
,
кк[ \
ulong
кк] b
.
ккb c
MaxValue
ккc k
)
ккk l
;
ккl m
}
лл 
_imagesInFlight
мм 
[
мм 
_imageIndex
мм '
]
мм' (
=
мм) *
_fencesInFlight
мм+ :
[
мм: ;
_currentFrame
мм; H
]
ммH I
;
ммI J

SubmitInfo
оо 
_submitInfo
оо "
=
оо# $
new
оо% (

SubmitInfo
оо) 3
(
оо3 4
)
оо4 5
{
пп 
SType
яя 
=
яя 
StructureType
яя %
.
яя% &

SubmitInfo
яя& 0
}
рр 
;
рр 
var
тт 
_waitSemaphores
тт 
=
тт  !

stackalloc
тт" ,
[
тт, -
]
тт- .
{
уу '
_imageAvailableSemaphores
жж )
[
жж) *
_currentFrame
жж* 7
]
жж7 8
}
вв 
;
вв 
var
ьь 
_waitStages
ьь 
=
ьь 

stackalloc
ьь (
[
ьь( )
]
ьь) *
{
ыы  
PipelineStageFlags
зз "
.
зз" #&
ColorAttachmentOutputBit
зз# ;
}
шш 
;
шш 
CommandBuffer
щщ 
_buffer
щщ !
=
щщ" #
_commandBuffer
щщ$ 2
[
щщ2 3
_imageIndex
щщ3 >
]
щщ> ?
;
щщ? @
_submitInfo
чч 
=
чч 
_submitInfo
чч %
with
чч& *
{
ъъ  
WaitSemaphoreCount
ЮЮ "
=
ЮЮ# $
$num
ЮЮ% &
,
ЮЮ& '
PWaitSemaphores
АА 
=
АА  !
_waitSemaphores
АА" 1
,
АА1 2
PWaitDstStageMask
ББ !
=
ББ" #
_waitStages
ББ$ /
,
ББ/ 0 
CommandBufferCount
ДД "
=
ДД# $
$num
ДД% &
,
ДД& '
PCommandBuffers
ЕЕ 
=
ЕЕ  !
&
ЕЕ" #
_buffer
ЕЕ# *
}
ФФ 
;
ФФ 
var
ХХ 
_signalSemaphores
ХХ !
=
ХХ" #

stackalloc
ХХ$ .
[
ХХ. /
]
ХХ/ 0
{
ИИ '
_renderFinishedSemaphores
ЙЙ )
[
ЙЙ) *
_currentFrame
ЙЙ* 7
]
ЙЙ7 8
}
КК 
;
КК 
_submitInfo
ММ 
=
ММ 
_submitInfo
ММ %
with
ММ& *
{
НН "
SignalSemaphoreCount
ОО $
=
ОО% &
$num
ОО' (
,
ОО( )
PSignalSemaphores
ПП !
=
ПП" #
_signalSemaphores
ПП$ 5
}
ЯЯ 
;
ЯЯ 
_vulkan
СС 
.
СС 
ResetFences
СС 
(
СС  
_logicalDevice
СС  .
,
СС. /
$num
СС0 1
,
СС1 2
_fencesInFlight
СС3 B
[
ССB C
_currentFrame
ССC P
]
ССP Q
)
ССQ R
;
ССR S
r
ТТ 
=
ТТ 
_vulkan
ТТ 
.
ТТ 
QueueSubmit
ТТ #
(
ТТ# $
_graphicsQueue
ТТ$ 2
,
ТТ2 3
$num
ТТ4 5
,
ТТ5 6
_submitInfo
ТТ7 B
,
ТТB C
_fencesInFlight
ТТD S
[
ТТS T
_currentFrame
ТТT a
]
ТТa b
)
ТТb c
;
ТТc d
if
УУ 
(
УУ 
r
УУ 
!=
УУ 
Result
УУ 
.
УУ 
Success
УУ #
)
УУ# $
{
ЖЖ 
throw
ВВ 
new
ВВ 
	Exception
ВВ #
(
ВВ# $
$str
ВВ$ _
+
ВВ` a
r
ВВb c
)
ВВc d
;
ВВd e
}
ЬЬ 
var
ЗЗ 
_swapChains
ЗЗ 
=
ЗЗ 

stackalloc
ЗЗ (
[
ЗЗ( )
]
ЗЗ) *
{
ЗЗ+ ,

_swapchain
ЗЗ- 7
.
ЗЗ7 8
_swapchainKHR
ЗЗ8 E
}
ЗЗF G
;
ЗЗG H
PresentInfoKHR
ШШ 
_presentInfo
ШШ '
=
ШШ( )
new
ШШ* -
PresentInfoKHR
ШШ. <
(
ШШ< =
)
ШШ= >
{
ЭЭ 
SType
ЩЩ 
=
ЩЩ 
StructureType
ЩЩ %
.
ЩЩ% &
PresentInfoKhr
ЩЩ& 4
,
ЩЩ4 5 
WaitSemaphoreCount
ЧЧ "
=
ЧЧ# $
$num
ЧЧ% &
,
ЧЧ& '
PWaitSemaphores
ЪЪ 
=
ЪЪ  !
_signalSemaphores
ЪЪ" 3
,
ЪЪ3 4
SwapchainCount
── 
=
──  
$num
──! "
,
──" #
PSwapchains
││ 
=
││ 
_swapChains
││ )
,
││) *
PImageIndices
┌┌ 
=
┌┌ 
&
┌┌  !
_imageIndex
┌┌! ,
}
┐┐ 
;
┐┐ 
r
└└ 
=
└└ 

_swapchain
└└ 
.
└└ 
_driverSwapchain
└└ +
.
└└+ ,
QueuePresent
└└, 8
(
└└8 9
_presentQueue
└└9 F
,
└└F G
_presentInfo
└└H T
)
└└T U
;
└└U V
if
┘┘ 
(
┘┘ 
r
┘┘ 
==
┘┘ 
Result
┘┘ 
.
┘┘ 
ErrorOutOfDateKhr
┘┘ -
||
┘┘. 0
r
┘┘1 2
==
┘┘3 5
Result
┘┘6 <
.
┘┘< =
SuboptimalKhr
┘┘= J
||
┘┘K M
	_glWindow
┘┘N W
.
┘┘W X!
_frameBufferResized
┘┘X k
)
┘┘k l
{
├├ 
	_glWindow
┤┤ 
.
┤┤ !
_frameBufferResized
┤┤ -
=
┤┤. /
false
┤┤0 5
;
┤┤5 6
RecreateSwapChain
┬┬ !
(
┬┬! "
)
┬┬" #
;
┬┬# $
}
┴┴ 
else
┼┼ 
if
┼┼ 
(
┼┼ 
r
┼┼ 
!=
┼┼ 
Result
┼┼  
.
┼┼  !
Success
┼┼! (
)
┼┼( )
{
▀▀ 
throw
▄▄ 
new
▄▄ 
	Exception
▄▄ #
(
▄▄# $
$str
▄▄$ H
)
▄▄H I
;
▄▄I J
}
██ 
_currentFrame
▐▐ 
=
▐▐ 
(
▐▐ 
_currentFrame
▐▐ *
+
▐▐+ ,
$num
▐▐- .
)
▐▐. /
%
▐▐0 1"
MAX_FRAMES_IN_FLIGHT
▐▐2 F
;
▐▐F G
}
░░ 	
private
▓▓ 
void
▓▓ 
CleanUpSwapChain
▓▓ %
(
▓▓% &
)
▓▓& '
{
⌠⌠ 	
foreach
■■ 
(
■■ 
var
■■ 
fb
■■ 
in
■■ 
_framebuffer
■■ +
)
■■+ ,
{
∙∙ 
_vulkan
√√ 
.
√√  
DestroyFramebuffer
√√ *
(
√√* +
_logicalDevice
√√+ 9
,
√√9 :
fb
√√; =
,
√√= >
null
√√? C
)
√√C D
;
√√D E
}
≈≈ 
fixed
≤≤ 
(
≤≤ 
CommandBuffer
≤≤  
*
≤≤  !
CBPtr
≤≤" '
=
≤≤( )
_commandBuffer
≤≤* 8
)
≤≤8 9
{
≥≥ 
_vulkan
   
.
    
FreeCommandBuffers
   *
(
  * +
_logicalDevice
  + 9
,
  9 :
_commandPool
  ; G
,
  G H
(
  I J
uint
  J N
)
  N O
_commandBuffer
  O ]
.
  ] ^
Length
  ^ d
,
  d e
CBPtr
  f k
)
  k l
;
  l m
}
⌡⌡ 
	_pipeline
²² 
.
²² 
DestroyPipeline
²² %
(
²²% &
)
²²& '
;
²²' (
_vulkan
·· 
.
·· 
DestroyRenderPass
·· %
(
··% &
_logicalDevice
··& 4
,
··4 5

_swapchain
··6 @
.
··@ A
_renderPass
··A L
,
··L M
null
··N R
)
··R S
;
··S T
_vulkan
÷÷ 
.
÷÷ 
DestroyRenderPass
÷÷ %
(
÷÷% &
_logicalDevice
÷÷& 4
,
÷÷4 5

_swapchain
÷÷6 @
.
÷÷@ A"
_shadowmapRenderPass
÷÷A U
,
÷÷U V
null
÷÷W [
)
÷÷[ \
;
÷÷\ ]

_swapchain
══ 
.
══ 
DestroySwapchain
══ '
(
══' (
)
══( )
;
══) *
}
║║ 	
}
╒╒ 
}ёё ж 
aH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\Pathtracing.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{ 
internal 
unsafe 
class 
Pathtracing %
:& '
VulkanRenderer( 6
{ 
string 
[ 
] 
requiredExtensions #
=$ %
{ 	
$str "
," #
$str ,
,, -
$str "
," #
$str .
,. /$
KhrAccelerationStructure (
.( )
ExtensionName) 6
,6 7!
KhrRayTracingPipeline %
.% &
ExtensionName& 3
,3 4%
KhrDeferredHostOperations )
.) *
ExtensionName* 7
,7 8"
KhrBufferDeviceAddress &
.& '
ExtensionName' 4
,4 5
} 	
;	 
9
-PhysicalDeviceRayTracingPipelinePropertiesKHR 5!
_rtPipelineProperties6 K
=L M
defaultN U
;U V7
+PhysicalDeviceRayTracingPipelineFeaturesKHR 3
_rtPipelineFeatures4 G
=H I
defaultJ Q
;Q R
internal 
static $
KhrAccelerationStructure 0"
_accelerationStructure1 G
=H I
defaultJ Q
;Q R
internal!! 
Image!! 
[!! 
]!! 
_storageImage!! &
;!!& '
internal"" 
DeviceMemory"" 
["" 
]"" 

_storageDM""  *
;""* +
internal## 
static## 
	ImageView## !
[##! "
]##" #
_storageImageView##$ 5
;##5 6!
KhrRayTracingPipeline%% 
_rtExtention%% *
;%%* +
internal&& 
static&& 
PipelineLayout&& &
_pipelineLayout&&' 6
;&&6 7
internal'' 
static'' 
Pipeline''  
_rtPipeline''! ,
;'', -
Buffer)) 
_raygenBindingTable)) "
;))" #
DeviceMemory** 
_raygenBTDM**  
;**  !
Buffer++ 
_missBindingTable++  
;++  !
DeviceMemory,, 
	_missBTDM,, 
;,, 
Buffer-- 
_hitBinddingTable--  
;--  !
DeviceMemory.. 
_hitBTDM.. 
;.. 
internal11 
Pathtracing11 
(11 
)11 
{22 	
setup33 
(33 
)33 
;33 
int55 !
_graphicsQFamilyIndex55 %
=55& '
AVulkanHelper55( 5
.555 6 
FindQueueFamilyIndex556 J
(55J K
ref55K N
_gpu55O S
,55S T
ref55U X
_qfm55Y ]
,55] ^

QueueFlags55_ i
.55i j
GraphicsBit55j u
)55u v
;55v w
uint66  
_presentSupportIndex66 %
=66& '
AVulkanHelper66( 5
.665 6#
FindPresentSupportIndex666 M
(66M N
ref66N Q
_qfm66R V
,66V W
ref66X [
	_glWindow66\ e
.66e f
_driverSurface66f t
,66t u
ref66v y
	_glWindow	66z ┐
.
66┐ └
_surface
66└ ▄
)
66▄ █
;
66█ ▌
_graphicsQueue77 
=77 
_vulkan77 $
.77$ %
GetDeviceQueue77% 3
(773 4
_logicalDevice774 B
,77B C
(77D E
uint77E I
)77I J!
_graphicsQFamilyIndex77J _
,77_ `
$num77a b
)77b c
;77c d
_presentQueue88 
=88 
_vulkan88 #
.88# $
GetDeviceQueue88$ 2
(882 3
_logicalDevice883 A
,88A B 
_presentSupportIndex88C W
,88W X
$num88Y Z
)88Z [
;88[ \

_swapchain:: 
=:: 
new:: 
	Swapchain:: &
(::& '
ref::' *
	_glWindow::+ 4
.::4 5
_driverSurface::5 C
,::C D
ref::E H
	_glWindow::I R
.::R S
_surface::S [
)::[ \
;::\ ]

_swapchain;; 
.;; %
DoSwapchainMethodSequence;; 0
(;;0 1
ref;;1 4
_extent;;5 <
);;< =
;;;= >
_swapimageCount<< 
=<< 

_swapchain<< (
.<<( )
_swapchainImages<<) 9
.<<9 :
Length<<: @
;<<@ A
_camera== 
=== 
new== 
AuroraCamera== &
(==& '
)==' (
;==( )
_vulkan?? 
.?? !
TryGetDeviceExtension?? )
(??) *
	_instance??* 3
,??3 4
_logicalDevice??5 C
,??C D
out??E H"
_accelerationStructure??I _
)??_ `
;??` a
_vulkan@@ 
.@@ !
TryGetDeviceExtension@@ )
(@@) *
	_instance@@* 3
,@@3 4
_logicalDevice@@5 C
,@@C D
out@@E H
_rtExtention@@I U
)@@U V
;@@V W
CreateCommandPoolBB 
(BB 
)BB 
;BB  
CreateStorageImageCC 
(CC 
)CC  
;CC  ! 
CreateDescriptorPoolDD  
(DD  !
)DD! "
;DD" #0
$CreatePathtracingDescriptorSetLayoutEE 0
(EE0 1
)EE1 2
;EE2 3$
CreateRaytracingPipelineFF $
(FF$ %
)FF% &
;FF& '$
CreateShaderBindingTableGG $
(GG$ %
)GG% &
;GG& ' 
CreateCommandBuffersII  
(II  !
)II! "
;II" #
CreateSyncObjectsJJ 
(JJ 
)JJ 
;JJ  
}KK 	
privateMM 
voidMM 
setupMM 
(MM 
)MM 
{NN 	
_rendererInstanceOO 
=OO 
thisOO  $
;OO$ %"
PhysicalDeviceFeaturesQQ "
_deviceFeaturesQQ# 2
=QQ3 4
newQQ5 8"
PhysicalDeviceFeaturesQQ9 O
(QQO P
)QQP Q
{RR 
}SS 
;SS 7
+PhysicalDeviceRayTracingPipelineFeaturesKHRTT 7
_rtPipelineFeatureTT8 J
=TTK L
newTTM P7
+PhysicalDeviceRayTracingPipelineFeaturesKHRTTQ |
(TT| }
)TT} ~
{UU 
STypeVV 
=VV 
StructureTypeVV %
.VV% &7
+PhysicalDeviceRayTracingPipelineFeaturesKhrVV& Q
,VVQ R
RayTracingPipelineWW "
=WW# $
trueWW% )
}XX 
;XX :
.PhysicalDeviceAccelerationStructureFeaturesKHRYY :)
accelerationStructureFeaturesYY; X
=YYY Z
newYY[ ^
(YY^ _
)YY_ `
{ZZ 
SType[[ 
=[[ 
StructureType[[ %
.[[% &:
.PhysicalDeviceAccelerationStructureFeaturesKhr[[& T
,[[T U!
AccelerationStructure\\ %
=\\& '
true\\( ,
,\\, -
PNext]] 
=]] 
&]] 
_rtPipelineFeature]] +
}^^ 
;^^ *
PhysicalDeviceVulkan12Features__ *
_vulkan12FT__+ 6
=__7 8
new__9 <*
PhysicalDeviceVulkan12Features__= [
(__[ \
)__\ ]
{`` 
STypeaa 
=aa 
StructureTypeaa %
.aa% &*
PhysicalDeviceVulkan12Featuresaa& D
,aaD E
DescriptorIndexingbb "
=bb# $
truebb% )
,bb) *
BufferDeviceAddresscc #
=cc$ %
truecc& *
,cc* +"
RuntimeDescriptorArraydd &
=dd' (
truedd) -
,dd- .
PNextee 
=ee 
&ee )
accelerationStructureFeaturesee 6
}ff 
;ff 
CreateLogicalDevicegg 
(gg  
requiredExtensionsgg  2
,gg2 3
_vulkan12FTgg4 ?
,gg? @
_deviceFeaturesggA P
)ggP Q
;ggQ R!
_rtPipelinePropertieshh !
.hh! "
STypehh" '
=hh( )
StructureTypehh* 7
.hh7 89
-PhysicalDeviceRayTracingPipelinePropertiesKhrhh8 e
;hhe f
fixedii 
(ii 9
-PhysicalDeviceRayTracingPipelinePropertiesKHRii @
*ii@ A
_rtPtriiB H
=iiI J
&iiK L!
_rtPipelinePropertiesiiL a
)iia b
{jj %
PhysicalDeviceProperties2kk )

_devprops2kk* 4
=kk5 6
newkk7 :%
PhysicalDeviceProperties2kk; T
(kkT U
)kkU V
{ll 
STypemm 
=mm 
StructureTypemm )
.mm) *%
PhysicalDeviceProperties2mm* C
,mmC D
PNextnn 
=nn 
_rtPtrnn "
}oo 
;oo 
_vulkanpp 
.pp (
GetPhysicalDeviceProperties2pp 4
(pp4 5
_gpupp5 9
,pp9 :
&pp; <

_devprops2pp< F
)ppF G
;ppG H
}qq 
}ss 	
internaluu 
overrideuu 
voiduu "
AddEntityToRenderQueueuu 5
(uu5 6
Entityuu6 <
_muu= ?
)uu? @
{vv 	
baseww 
.ww "
AddEntityToRenderQueueww '
(ww' (
_mww( *
)ww* +
;ww+ , 
CreateDescriptorPoolxx  
(xx  !
)xx! "
;xx" #
foryy 
(yy 
intyy 
iyy 
=yy 
$numyy 
;yy 
iyy 
<yy 
_entitiesToRenderyy  1
.yy1 2
Countyy2 7
;yy7 8
iyy9 :
++yy: <
)yy< =
_entitiesToRenderzz !
[zz! "
izz" #
]zz# $
.zz$ %
GetComponentzz% 1
<zz1 2
MeshComponentzz2 ?
>zz? @
(zz@ A
)zzA B
.zzB C&
ReinstantiateDesriptorSetszzC ]
(zz] ^
)zz^ _
;zz_ `"
RecreateCommandBuffers|| "
(||" #
)||# $
;||$ %
}}} 	
internal 
override 
void !
AddLightToRenderQueue 4
(4 5
Entity5 ;
_m< >
)> ?
{
── 	
base
││ 
.
││ #
AddLightToRenderQueue
││ &
(
││& '
_m
││' )
)
││) *
;
││* +
}
┌┌ 	
internal
└└ 
override
└└ 
void
└└ "
CreateDescriptorPool
└└ 3
(
└└3 4
)
└└4 5
{
┘┘ 	
var
├├ 

_poolSizes
├├ 
=
├├ 
new
├├   
DescriptorPoolSize
├├! 3
[
├├3 4
]
├├4 5
{
┤┤ 
new
┬┬  
DescriptorPoolSize
┬┬ &
(
┬┬& '
)
┬┬' (
{
┴┴ 
Type
┼┼ 
=
┼┼ 
DescriptorType
┼┼ )
.
┼┼) *&
AccelerationStructureKhr
┼┼* B
,
┼┼B C
DescriptorCount
▀▀ #
=
▀▀$ %
(
▀▀& '
uint
▀▀' +
)
▀▀+ ,
(
▀▀, -
(
▀▀- .
_swapimageCount
▀▀. =
*
▀▀> ?
_entitiesToRender
▀▀@ Q
.
▀▀Q R
Count
▀▀R W
)
▀▀W X
+
▀▀Y Z
$num
▀▀[ \
)
▀▀\ ]
}
▄▄ 
,
▄▄ 
new
██  
DescriptorPoolSize
██ &
(
██& '
)
██' (
{
▌▌ 
Type
▐▐ 
=
▐▐ 
DescriptorType
▐▐ )
.
▐▐) *
StorageImage
▐▐* 6
,
▐▐6 7
DescriptorCount
░░ #
=
░░$ %
(
░░& '
uint
░░' +
)
░░+ ,
(
░░, -
(
░░- .
_swapimageCount
░░. =
*
░░> ?
_entitiesToRender
░░@ Q
.
░░Q R
Count
░░R W
)
░░W X
+
░░Y Z
$num
░░[ \
)
░░\ ]
}
▒▒ 
,
▒▒ 
new
▓▓  
DescriptorPoolSize
▓▓ &
(
▓▓& '
)
▓▓' (
{
⌠⌠ 
Type
■■ 
=
■■ 
DescriptorType
■■ )
.
■■) *
UniformBuffer
■■* 7
,
■■7 8
DescriptorCount
∙∙ #
=
∙∙$ %
(
∙∙& '
uint
∙∙' +
)
∙∙+ ,
(
∙∙, -
(
∙∙- .
_swapimageCount
∙∙. =
*
∙∙> ?
_entitiesToRender
∙∙@ Q
.
∙∙Q R
Count
∙∙R W
)
∙∙W X
+
∙∙Y Z
$num
∙∙[ \
)
∙∙\ ]
}
√√ 
}
≈≈ 
;
≈≈ 
fixed
≥≥ 
(
≥≥  
DescriptorPoolSize
≥≥ $
*
≥≥$ %
_poolSizePtr
≥≥& 2
=
≥≥3 4

_poolSizes
≥≥5 ?
)
≥≥? @
fixed
   
(
   
DescriptorPool
    
*
    !
_dpPtr
  " (
=
  ) *
&
  + ,
_descriptorPool
  , ;
)
  ; <
{
⌡⌡ &
DescriptorPoolCreateInfo
°° (
_createInfo
°°) 4
=
°°5 6
new
°°7 :&
DescriptorPoolCreateInfo
°°; S
(
°°S T
)
°°T U
{
²² 
SType
·· 
=
·· 
StructureType
·· )
.
··) *&
DescriptorPoolCreateInfo
··* B
,
··B C
PoolSizeCount
÷÷ !
=
÷÷" #
(
÷÷$ %
uint
÷÷% )
)
÷÷) *

_poolSizes
÷÷* 4
.
÷÷4 5
Length
÷÷5 ;
,
÷÷; <

PPoolSizes
══ 
=
══  
_poolSizePtr
══! -
,
══- .
MaxSets
║║ 
=
║║ 
(
║║ 
uint
║║ #
)
║║# $
(
║║$ %
_swapimageCount
║║% 4
*
║║5 6
$num
║║7 8
*
║║9 :
_entitiesToRender
║║; L
.
║║L M
Count
║║M R
+
║║S T
$num
║║U V
)
║║V W
,
║║W X
}
╒╒ 
;
╒╒ 
if
ёё 
(
ёё 
_vulkan
ёё 
.
ёё "
CreateDescriptorPool
ёё 0
(
ёё0 1
_logicalDevice
ёё1 ?
,
ёё? @
_createInfo
ёёA L
,
ёёL M
null
ёёN R
,
ёёR S
_dpPtr
ёёT Z
)
ёёZ [
!=
ёё\ ^
Result
ёё_ e
.
ёёe f
Success
ёёf m
)
ёёm n
{
╓╓ 
throw
╔╔ 
new
╔╔ 
	Exception
╔╔ '
(
╔╔' (
$str
╔╔( J
)
╔╔J K
;
╔╔K L
}
╕╕ 
}
╖╖ 
}
╗╗ 	
private
╙╙ 
void
╙╙ 2
$CreatePathtracingDescriptorSetLayout
╙╙ 9
(
╙╙9 :
)
╙╙: ;
{
╚╚ 	
List
╛╛ 
<
╛╛ 
DescriptorType
╛╛ 
>
╛╛  
_types1
╛╛! (
=
╛╛) *
new
╛╛+ .
List
╛╛/ 3
<
╛╛3 4
DescriptorType
╛╛4 B
>
╛╛B C
{
╛╛D E
DescriptorType
╛╛F T
.
╛╛T U&
AccelerationStructureKhr
╛╛U m
,
╛╛m n
DescriptorType
╛╛o }
.
╛╛} ~
StorageImage╛╛~ ┼
,╛╛┼ ▀
DescriptorType╛╛▄  
.╛╛  ⌡
UniformBuffer╛╛⌡ ╗
}╛╛╘ ╙
;╛╛╙ ╚
List
╜╜ 
<
╜╜ 
ShaderStageFlags
╜╜ !
>
╜╜! "
_flags1
╜╜# *
=
╜╜+ ,
new
╜╜- 0
List
╜╜1 5
<
╜╜5 6
ShaderStageFlags
╜╜6 F
>
╜╜F G
{
╜╜H I
ShaderStageFlags
╜╜J Z
.
╜╜Z [
RaygenBitKhr
╜╜[ g
,
╜╜g h
ShaderStageFlags
╜╜i y
.
╜╜y z
RaygenBitKhr╜╜z ├
,╜╜├ ┤ 
ShaderStageFlags╜╜┬ ≤
.╜╜≤ ≥
RaygenBitKhr╜╜≥ ╔
}╜╜╕ ╖
;╜╜╖ ╗'
CreateDescriptorSetLayout
╝╝ %
(
╝╝% &
_types1
╝╝& -
.
╝╝- .
Count
╝╝. 3
,
╝╝3 4
_types1
╝╝5 <
,
╝╝< =
_flags1
╝╝> E
,
╝╝E F
ref
╝╝G J"
_descriptorSetLayout
╝╝K _
)
╝╝_ `
;
╝╝` a
}
╞╞ 	
private
╠╠ 
void
╠╠ &
CreateRaytracingPipeline
╠╠ -
(
╠╠- .
)
╠╠. /
{
╡╡ 	
fixed
ЁЁ 
(
ЁЁ !
DescriptorSetLayout
ЁЁ &
*
ЁЁ& '
_setPtr
ЁЁ( /
=
ЁЁ0 1
&
ЁЁ2 3"
_descriptorSetLayout
ЁЁ3 G
)
ЁЁG H
{
╢╢ &
PipelineLayoutCreateInfo
╣╣ ('
_pipelineLayoutCreateInfo
╣╣) B
=
╣╣C D
new
╣╣E H
(
╣╣H I
)
╣╣I J
{
╤╤ 
SType
╥╥ 
=
╥╥ 
StructureType
╥╥ )
.
╥╥) *&
PipelineLayoutCreateInfo
╥╥* B
,
╥╥B C
SetLayoutCount
╦╦ "
=
╦╦# $
$num
╦╦% &
,
╦╦& '
PSetLayouts
╧╧ 
=
╧╧  !
_setPtr
╧╧" )
}
╨╨ 
;
╨╨ 
fixed
╩╩ 
(
╩╩ 
PipelineLayout
╩╩ %
*
╩╩% &
_pipePtr
╩╩' /
=
╩╩0 1
&
╩╩2 3
_pipelineLayout
╩╩3 B
)
╩╩B C
if
╪╪ 
(
╪╪ 
_vulkan
╪╪ 
.
╪╪  "
CreatePipelineLayout
╪╪  4
(
╪╪4 5
_logicalDevice
╪╪5 C
,
╪╪C D'
_pipelineLayoutCreateInfo
╪╪E ^
,
╪╪^ _
null
╪╪` d
,
╪╪d e
_pipePtr
╪╪f n
)
╪╪n o
!=
╪╪p r
Result
╪╪s y
.
╪╪y z
Success╪╪z │
)╪╪│ ┌
{
╫╫ 
throw
╬╬ 
new
╬╬ !
	Exception
╬╬" +
(
╬╬+ ,
$str
╬╬, N
)
╬╬N O
;
╬╬O P
}
©© 
}
юю 
byte
бб 
[
бб 
]
бб 
_rayGenCode
бб 
=
бб  
ReadFile
бб! )
(
бб) *
$str
бб* L
)
ббL M
;
ббM N
byte
цц 
[
цц 
]
цц 
	_missCode
цц 
=
цц 
ReadFile
цц '
(
цц' (
$str
цц( I
)
ццI J
;
ццJ K
byte
дд 
[
дд 
]
дд 
_hitCode
дд 
=
дд 
ReadFile
дд &
(
дд& '
$str
дд' N
)
ддN O
;
ддO P
ShaderModule
фф 
_raygenShader
фф &
=
фф' ( 
CreateShaderModule
фф) ;
(
фф; <
_rayGenCode
фф< G
)
ффG H
;
ффH I
ShaderModule
гг 
_missShader
гг $
=
гг% & 
CreateShaderModule
гг' 9
(
гг9 :
	_missCode
гг: C
)
ггC D
;
ггD E
ShaderModule
хх 

_hitShader
хх #
=
хх$ % 
CreateShaderModule
хх& 8
(
хх8 9
_hitCode
хх9 A
)
ххA B
;
ххB C+
PipelineShaderStageCreateInfo
йй )*
_pipelineShaderStageRaygenCI
йй* F
=
ййG H
new
ййI L
(
ййL M
)
ййM N
{
кк 
SType
лл 
=
лл 
StructureType
лл %
.
лл% &+
PipelineShaderStageCreateInfo
лл& C
,
ллC D
Stage
мм 
=
мм 
ShaderStageFlags
мм (
.
мм( )
RaygenBitKhr
мм) 5
,
мм5 6
Module
нн 
=
нн 
_raygenShader
нн &
,
нн& '
PName
оо 
=
оо 
(
оо 
byte
оо 
*
оо 
)
оо 
SilkMarshal
оо *
.
оо* +
StringToPtr
оо+ 6
(
оо6 7
$str
оо7 =
)
оо= >
}
пп 
;
пп +
PipelineShaderStageCreateInfo
яя )(
_pipelineShaderStageMissCI
яя* D
=
яяE F
new
яяG J
(
яяJ K
)
яяK L
{
рр 
SType
сс 
=
сс 
StructureType
сс %
.
сс% &+
PipelineShaderStageCreateInfo
сс& C
,
ссC D
Stage
тт 
=
тт 
ShaderStageFlags
тт (
.
тт( )

MissBitKhr
тт) 3
,
тт3 4
Module
уу 
=
уу 
_missShader
уу $
,
уу$ %
PName
жж 
=
жж 
(
жж 
byte
жж 
*
жж 
)
жж 
SilkMarshal
жж *
.
жж* +
StringToPtr
жж+ 6
(
жж6 7
$str
жж7 =
)
жж= >
}
вв 
;
вв +
PipelineShaderStageCreateInfo
ьь )'
_pipelineShaderStageHitCI
ьь* C
=
ььD E
new
ььF I
(
ььI J
)
ььJ K
{
ыы 
SType
зз 
=
зз 
StructureType
зз %
.
зз% &+
PipelineShaderStageCreateInfo
зз& C
,
ззC D
Stage
шш 
=
шш 
ShaderStageFlags
шш (
.
шш( )
ClosestHitBitKhr
шш) 9
,
шш9 :
Module
ээ 
=
ээ 

_hitShader
ээ #
,
ээ# $
PName
щщ 
=
щщ 
(
щщ 
byte
щщ 
*
щщ 
)
щщ 
SilkMarshal
щщ *
.
щщ* +
StringToPtr
щщ+ 6
(
щщ6 7
$str
щщ7 =
)
щщ= >
}
чч 
;
чч 
var
ЮЮ 
_stages
ЮЮ 
=
ЮЮ 

stackalloc
ЮЮ $
[
ЮЮ$ %
]
ЮЮ% &
{
АА *
_pipelineShaderStageRaygenCI
ББ ,
,
ББ, -(
_pipelineShaderStageMissCI
ЦЦ *
,
ЦЦ* +'
_pipelineShaderStageHitCI
ДД )
}
ЕЕ 
;
ЕЕ 0
"RayTracingShaderGroupCreateInfoKHR
ГГ .
	_raygenCI
ГГ/ 8
=
ГГ9 :
new
ГГ; >
(
ГГ> ?
)
ГГ? @
{
ХХ 
SType
ИИ 
=
ИИ 
StructureType
ИИ %
.
ИИ% &0
"RayTracingShaderGroupCreateInfoKhr
ИИ& H
,
ИИH I
Type
ЙЙ 
=
ЙЙ *
RayTracingShaderGroupTypeKHR
ЙЙ 3
.
ЙЙ3 4

GeneralKhr
ЙЙ4 >
,
ЙЙ> ?
GeneralShader
КК 
=
КК 
$num
КК  !
,
КК! "
ClosestHitShader
ЛЛ  
=
ЛЛ! "
Vk
ЛЛ# %
.
ЛЛ% &
ShaderUnusedKhr
ЛЛ& 5
,
ЛЛ5 6
AnyHitShader
ММ 
=
ММ 
Vk
ММ !
.
ММ! "
ShaderUnusedKhr
ММ" 1
,
ММ1 2 
IntersectionShader
НН "
=
НН# $
Vk
НН% '
.
НН' (
ShaderUnusedKhr
НН( 7
,
НН7 8
}
ОО 
;
ОО 0
"RayTracingShaderGroupCreateInfoKHR
ЯЯ .
_missCI
ЯЯ/ 6
=
ЯЯ7 8
new
ЯЯ9 <
(
ЯЯ< =
)
ЯЯ= >
{
РР 
SType
СС 
=
СС 
StructureType
СС %
.
СС% &0
"RayTracingShaderGroupCreateInfoKhr
СС& H
,
ССH I
Type
ТТ 
=
ТТ *
RayTracingShaderGroupTypeKHR
ТТ 3
.
ТТ3 4

GeneralKhr
ТТ4 >
,
ТТ> ?
GeneralShader
УУ 
=
УУ 
$num
УУ  !
,
УУ! "
ClosestHitShader
ЖЖ  
=
ЖЖ! "
Vk
ЖЖ# %
.
ЖЖ% &
ShaderUnusedKhr
ЖЖ& 5
,
ЖЖ5 6
AnyHitShader
ВВ 
=
ВВ 
Vk
ВВ !
.
ВВ! "
ShaderUnusedKhr
ВВ" 1
,
ВВ1 2 
IntersectionShader
ЬЬ "
=
ЬЬ# $
Vk
ЬЬ% '
.
ЬЬ' (
ShaderUnusedKhr
ЬЬ( 7
,
ЬЬ7 8
}
ЫЫ 
;
ЫЫ 0
"RayTracingShaderGroupCreateInfoKHR
ШШ .
	_closesCI
ШШ/ 8
=
ШШ9 :
new
ШШ; >
(
ШШ> ?
)
ШШ? @
{
ЭЭ 
SType
ЩЩ 
=
ЩЩ 
StructureType
ЩЩ %
.
ЩЩ% &0
"RayTracingShaderGroupCreateInfoKhr
ЩЩ& H
,
ЩЩH I
Type
ЧЧ 
=
ЧЧ *
RayTracingShaderGroupTypeKHR
ЧЧ 3
.
ЧЧ3 4"
TrianglesHitGroupKhr
ЧЧ4 H
,
ЧЧH I
GeneralShader
ЪЪ 
=
ЪЪ 
Vk
ЪЪ  "
.
ЪЪ" #
ShaderUnusedKhr
ЪЪ# 2
,
ЪЪ2 3
ClosestHitShader
──  
=
──! "
$num
──# $
,
──$ %
AnyHitShader
││ 
=
││ 
Vk
││ !
.
││! "
ShaderUnusedKhr
││" 1
,
││1 2 
IntersectionShader
┌┌ "
=
┌┌# $
Vk
┌┌% '
.
┌┌' (
ShaderUnusedKhr
┌┌( 7
,
┌┌7 8
}
┐┐ 
;
┐┐ 
var
└└ 
_shaderGroups
└└ 
=
└└ 

stackalloc
└└  *
[
└└* +
]
└└+ ,
{
┘┘ 
	_raygenCI
┘┘ 
,
┘┘ 
_missCI
┘┘ %
,
┘┘% &
	_closesCI
┘┘' 0
}
┘┘0 1
;
┘┘1 2-
RayTracingPipelineCreateInfoKHR
┬┬ +
_rtPipelineCI
┬┬, 9
=
┬┬: ;
new
┬┬< ?
(
┬┬? @
)
┬┬@ A
{
┴┴ 
SType
┼┼ 
=
┼┼ 
StructureType
┼┼ %
.
┼┼% &-
RayTracingPipelineCreateInfoKhr
┼┼& E
,
┼┼E F

StageCount
▀▀ 
=
▀▀ 
$num
▀▀ 
,
▀▀ 
PStages
▄▄ 
=
▄▄ 
_stages
▄▄ !
,
▄▄! "

GroupCount
██ 
=
██ 
$num
██ 
,
██ 
PGroups
▌▌ 
=
▌▌ 
_shaderGroups
▌▌ '
,
▌▌' (*
MaxPipelineRayRecursionDepth
▐▐ ,
=
▐▐- .
$num
▐▐/ 0
,
▐▐0 1
Layout
░░ 
=
░░ 
_pipelineLayout
░░ (
}
▒▒ 
;
▒▒ 
Result
▓▓ 
r
▓▓ 
=
▓▓ 
_rtExtention
▓▓ #
.
▓▓# $'
CreateRayTracingPipelines
▓▓$ =
(
▓▓= >
_logicalDevice
▓▓> L
,
▓▓L M
default
▓▓N U
,
▓▓U V
default
▓▓W ^
,
▓▓^ _
$num
▓▓` a
,
▓▓a b
_rtPipelineCI
▓▓c p
,
▓▓p q
null
▓▓r v
,
▓▓v w
out
▓▓x {
_rtPipeline▓▓| ┤
)▓▓┤ ┬
;▓▓┬ ┴
if
⌠⌠ 
(
⌠⌠ 
r
⌠⌠ 
!=
⌠⌠ 
Result
⌠⌠ 
.
⌠⌠ 
Success
⌠⌠ #
)
⌠⌠# $
{
■■ 
throw
∙∙ 
new
∙∙ 
	Exception
∙∙ #
(
∙∙# $
$str
∙∙$ I
+
∙∙J K
r
∙∙L M
)
∙∙M N
;
∙∙N O
}
√√ 
}
≈≈ 	
private
≥≥ 
void
≥≥ &
CreateShaderBindingTable
≥≥ -
(
≥≥- .
)
≥≥. /
{
   	
uint
⌡⌡ 
_handleSize
⌡⌡ 
=
⌡⌡ #
_rtPipelineProperties
⌡⌡ 4
.
⌡⌡4 5#
ShaderGroupHandleSize
⌡⌡5 J
;
⌡⌡J K
uint
°°  
_handleSizeAligned
°° #
=
°°$ %
AVulkanHelper
°°& 3
.
°°3 4
AlignedSize
°°4 ?
(
°°? @
_handleSize
°°@ K
,
°°K L#
_rtPipelineProperties
°°M b
.
°°b c(
ShaderGroupHandleAlignment
°°c }
)
°°} ~
;
°°~ 
uint
²² 
_groupCount
²² 
=
²² 
$num
²²  
;
²²  !
uint
·· 
_sbtSize
·· 
=
·· 
_groupCount
·· '
*
··( ) 
_handleSizeAligned
··* <
;
··< =
BufferUsageFlags
══ 
_buf
══ !
=
══" #
BufferUsageFlags
══$ 4
.
══4 5&
ShaderBindingTableBitKhr
══5 M
|
══N O
BufferUsageFlags
══P `
.
══` a$
ShaderDeviceAddressBit
══a w
;
══w x!
MemoryPropertyFlags
║║ 
_mpf
║║  $
=
║║% &!
MemoryPropertyFlags
║║' :
.
║║: ;
HostVisibleBit
║║; I
|
║║J K!
MemoryPropertyFlags
║║L _
.
║║_ `
HostCoherentBit
║║` o
;
║║o p"
AVulkanBufferHandler
ёё  
.
ёё  !
CreateBuffer
ёё! -
(
ёё- .
_handleSize
ёё. 9
,
ёё9 :
_buf
ёё; ?
,
ёё? @
_mpf
ёёA E
,
ёёE F
ref
ёёG J!
_raygenBindingTable
ёёK ^
,
ёё^ _
ref
ёё` c
_raygenBTDM
ёёd o
)
ёёo p
;
ёёp q"
AVulkanBufferHandler
╓╓  
.
╓╓  !
CreateBuffer
╓╓! -
(
╓╓- .
_handleSize
╓╓. 9
,
╓╓9 :
_buf
╓╓; ?
,
╓╓? @
_mpf
╓╓A E
,
╓╓E F
ref
╓╓G J
_missBindingTable
╓╓K \
,
╓╓\ ]
ref
╓╓^ a
	_missBTDM
╓╓b k
)
╓╓k l
;
╓╓l m"
AVulkanBufferHandler
╔╔  
.
╔╔  !
CreateBuffer
╔╔! -
(
╔╔- .
_handleSize
╔╔. 9
,
╔╔9 :
_buf
╔╔; ?
,
╔╔? @
_mpf
╔╔A E
,
╔╔E F
ref
╔╔G J
_hitBinddingTable
╔╔K \
,
╔╔\ ]
ref
╔╔^ a
_hitBTDM
╔╔b j
)
╔╔j k
;
╔╔k l
byte
╖╖ 
[
╖╖ 
]
╖╖ 
_sbt
╖╖ 
=
╖╖ 
new
╖╖ 
byte
╖╖ "
[
╖╖" #
_sbtSize
╖╖# +
]
╖╖+ ,
;
╖╖, -
fixed
╗╗ 
(
╗╗ 
byte
╗╗ 
*
╗╗ 
_ptr
╗╗ 
=
╗╗ 
_sbt
╗╗  $
)
╗╗$ %
{
╘╘ 
_rtExtention
╙╙ 
.
╙╙ -
GetRayTracingShaderGroupHandles
╙╙ <
(
╙╙< =
_logicalDevice
╙╙= K
,
╙╙K L
_rtPipeline
╙╙M X
,
╙╙X Y
$num
╙╙Z [
,
╙╙[ \
_groupCount
╙╙] h
,
╙╙h i
_sbtSize
╙╙j r
,
╙╙r s
_ptr
╙╙t x
)
╙╙x y
;
╙╙y z
}
╚╚ 
CopyHandles
╜╜ 
(
╜╜ 
ref
╜╜ 
_raygenBTDM
╜╜ '
,
╜╜' (
(
╜╜) *
int
╜╜* -
)
╜╜- .
_handleSize
╜╜. 9
,
╜╜9 :
$num
╜╜; <
,
╜╜< =
_sbt
╜╜> B
)
╜╜B C
;
╜╜C D
CopyHandles
╝╝ 
(
╝╝ 
ref
╝╝ 
	_missBTDM
╝╝ %
,
╝╝% &
(
╝╝' (
int
╝╝( +
)
╝╝+ ,
_handleSize
╝╝, 7
,
╝╝7 8
(
╝╝9 :
int
╝╝: =
)
╝╝= > 
_handleSizeAligned
╝╝> P
,
╝╝P Q
_sbt
╝╝R V
)
╝╝V W
;
╝╝W X
CopyHandles
╞╞ 
(
╞╞ 
ref
╞╞ 
_hitBTDM
╞╞ $
,
╞╞$ %
(
╞╞& '
int
╞╞' *
)
╞╞* +
_handleSize
╞╞+ 6
,
╞╞6 7
(
╞╞8 9
int
╞╞9 <
)
╞╞< = 
_handleSizeAligned
╞╞= O
*
╞╞P Q
$num
╞╞Q R
,
╞╞R S
_sbt
╞╞T X
)
╞╞X Y
;
╞╞Y Z
}
╟╟ 	
private
╡╡ 
void
╡╡ 
CopyHandles
╡╡  
(
╡╡  !
ref
╡╡! $
DeviceMemory
╡╡% 1
_memory
╡╡2 9
,
╡╡9 :
int
╡╡; >
_size
╡╡? D
,
╡╡D E
int
╡╡F I
_offset
╡╡J Q
,
╡╡Q R
byte
╡╡S W
[
╡╡W X
]
╡╡X Y
_sbt
╡╡Z ^
)
╡╡^ _
{
ЁЁ 	
void
╢╢ 
*
╢╢ 
_data
╢╢ 
;
╢╢ 
_vulkan
╣╣ 
.
╣╣ 
	MapMemory
╣╣ 
(
╣╣ 
_logicalDevice
╣╣ ,
,
╣╣, -
_memory
╣╣. 5
,
╣╣5 6
$num
╣╣7 8
,
╣╣8 9
(
╣╣: ;
ulong
╣╣; @
)
╣╣@ A
_size
╣╣A F
,
╣╣F G
$num
╣╣H I
,
╣╣I J
&
╣╣K L
_data
╣╣L Q
)
╣╣Q R
;
╣╣R S
Marshal
╤╤ 
.
╤╤ 
Copy
╤╤ 
(
╤╤ 
_sbt
╤╤ 
,
╤╤ 
_offset
╤╤ &
,
╤╤& '
(
╤╤( )
nint
╤╤) -
)
╤╤- .
_data
╤╤. 3
,
╤╤3 4
_size
╤╤5 :
)
╤╤: ;
;
╤╤; <
_vulkan
╥╥ 
.
╥╥ 
UnmapMemory
╥╥ 
(
╥╥  
_logicalDevice
╥╥  .
,
╥╥. /
_memory
╥╥0 7
)
╥╥7 8
;
╥╥8 9
}
╦╦ 	
private
╨╨ 
void
╨╨  
CreateStorageImage
╨╨ '
(
╨╨' (
)
╨╨( )
{
╩╩ 	

_storageDM
╪╪ 
=
╪╪ 
new
╪╪ 
DeviceMemory
╪╪ )
[
╪╪) *
_swapimageCount
╪╪* 9
]
╪╪9 :
;
╪╪: ;
_storageImage
╫╫ 
=
╫╫ 
new
╫╫ 
Image
╫╫  %
[
╫╫% &
_swapimageCount
╫╫& 5
]
╫╫5 6
;
╫╫6 7
_storageImageView
╬╬ 
=
╬╬ 
new
╬╬  #
	ImageView
╬╬$ -
[
╬╬- .
_swapimageCount
╬╬. =
]
╬╬= >
;
╬╬> ?
for
юю 
(
юю 
int
юю 
i
юю 
=
юю 
$num
юю 
;
юю 
i
юю 
<
юю 
_swapimageCount
юю  /
;
юю/ 0
i
юю1 2
++
юю2 4
)
юю4 5
{
аа "
AVulkanBufferHandler
бб $
.
бб$ %
CreateImage
бб% 0
(
бб0 1
_extent
бб1 8
.
бб8 9
Width
бб9 >
,
бб> ?
_extent
бб@ G
.
ббG H
Height
ббH N
,
ббN O
Format
ббP V
.
ббV W
R8G8B8A8Unorm
ббW d
,
ббd e
ImageTiling
ббf q
.
ббq r
Optimal
ббr y
,
ббy z
ImageUsageFlagsбб{ ┼
.бб┼ ▀
TransferSrcBitбб▀ ≥
|бб  ⌡
ImageUsageFlagsбб° ╚
.бб╚ ╛

StorageBitбб╛ ╤
,бб╤ ╥#
MemoryPropertyFlagsбб╦ к
.ббк л
DeviceLocalBitббл з
,ббз ш
refббэ ъ
_storageImageббЮ М
[ббМ Н
iббН О
]ббО П
,ббП Я
refббР У

_storageDMббЖ ─
[бб─ │
iбб│ ┌
]бб┌ ┐
)бб┐ └
;бб└ ┘

_swapchain
цц 
.
цц 
CreateImageView
цц *
(
цц* +
ref
цц+ .
_storageImageView
цц/ @
[
цц@ A
i
ццA B
]
ццB C
,
ццC D
ref
ццE H
_storageImage
ццI V
[
ццV W
i
ццW X
]
ццX Y
,
ццY Z
ImageAspectFlags
цц[ k
.
ццk l
ColorBit
ццl t
,
ццt u
Format
ццv |
.
цц| }
R8G8B8A8Unormцц} ┼
)цц┼ ▀
;цц▀ ▄
CommandBuffer
ее 
_imageTransition
ее .
=
ее/ 0"
AVulkanBufferHandler
ее1 E
.
ееE F%
BeginSingleTimeCommands
ееF ]
(
ее] ^
)
ее^ _
;
ее_ ` 
ImageMemoryBarrier
гг "
_barrier
гг# +
=
гг, -
new
гг. 1
(
гг1 2
)
гг2 3
{
хх 
SType
ии 
=
ии 
StructureType
ии )
.
ии) * 
ImageMemoryBarrier
ии* <
,
ии< =
	OldLayout
йй 
=
йй 
ImageLayout
йй  +
.
йй+ ,
	Undefined
йй, 5
,
йй5 6
	NewLayout
кк 
=
кк 
ImageLayout
кк  +
.
кк+ ,
General
кк, 3
,
кк3 4!
SrcQueueFamilyIndex
лл '
=
лл( )
Vk
лл* ,
.
лл, - 
QueueFamilyIgnored
лл- ?
,
лл? @!
DstQueueFamilyIndex
мм '
=
мм( )
Vk
мм* ,
.
мм, - 
QueueFamilyIgnored
мм- ?
,
мм? @
Image
нн 
=
нн 
_storageImage
нн )
[
нн) *
i
нн* +
]
нн+ ,
,
нн, -
SubresourceRange
оо $
=
оо% &
{
пп 

AspectMask
яя 
=
яя  
ImageAspectFlags
яя! 1
.
яя1 2
ColorBit
яя2 :
,
яя: ;
BaseMipLevel
рр  
=
рр! "
$num
рр# $
,
рр$ %

LevelCount
сс 
=
сс  
$num
сс! "
,
сс" #
BaseArrayLayer
тт "
=
тт# $
$num
тт% &
,
тт& '

LayerCount
уу 
=
уу  
$num
уу! "
,
уу" #
}
жж 
,
жж 
SrcAccessMask
вв !
=
вв" #
$num
вв$ %
,
вв% &
DstAccessMask
ьь !
=
ьь" #
AccessFlags
ьь$ /
.
ьь/ 0
ShaderReadBit
ьь0 =
|
ьь> ?
AccessFlags
ьь@ K
.
ььK L
ShaderWriteBit
ььL Z
,
ььZ [
}
ыы 
;
ыы 
_vulkan
зз 
.
зз  
CmdPipelineBarrier
зз *
(
зз* +
_imageTransition
зз+ ;
,
зз; < 
PipelineStageFlags
зз= O
.
ззO P
TopOfPipeBit
ззP \
,
зз\ ] 
PipelineStageFlags
зз^ p
.
ззp q
ComputeShaderBitззq │
|зз┌ ┐"
PipelineStageFlagsзз└ √
.зз√ ≈&
RayTracingShaderBitKhrзз≈ ╜
,зз╜ ╝
$numзз╞ ╟
,зз╟ ╠
$numзз╡ Ё
,ззЁ ╢
nullзз╣ ╧
,зз╧ ╨
$numзз╩ ╪
,зз╪ ╫
nullзз╬ б
,ззб ц
$numззд е
,ззе ф
_barrierззг о
)ззо п
;ззп я"
AVulkanBufferHandler
шш $
.
шш$ %#
EndSingleTimeCommands
шш% :
(
шш: ;
ref
шш; >
_imageTransition
шш? O
)
шшO P
;
шшP Q
}
ээ 
}
щщ 	
internal
ъъ 
override
ъъ 
void
ъъ "
CreateCommandBuffers
ъъ 3
(
ъъ3 4
)
ъъ4 5
{
ЮЮ 	
base
АА 
.
АА "
CreateCommandBuffers
АА %
(
АА% &
)
АА& '
;
АА' (#
ImageSubresourceRange
ББ !
_sr
ББ" %
=
ББ& '
new
ББ( +
(
ББ+ ,
)
ББ, -
{
ЦЦ 

AspectMask
ДД 
=
ДД 
ImageAspectFlags
ДД -
.
ДД- .
ColorBit
ДД. 6
,
ДД6 7
BaseArrayLayer
ЕЕ 
=
ЕЕ  
$num
ЕЕ! "
,
ЕЕ" #
BaseMipLevel
ФФ 
=
ФФ 
$num
ФФ  
,
ФФ  !

LayerCount
ГГ 
=
ГГ 
$num
ГГ 
,
ГГ 

LevelCount
ХХ 
=
ХХ 
$num
ХХ 
}
ИИ 
;
ИИ 
for
КК 
(
КК 
int
КК 
i
КК 
=
КК 
$num
КК 
;
КК 
i
КК 
<
КК 
_commandBuffer
КК  .
.
КК. /
Length
КК/ 5
;
КК5 6
i
КК7 8
++
КК8 :
)
КК: ;
{
ЛЛ $
CommandBufferBeginInfo
ММ &

_beginInfo
ММ' 1
=
ММ2 3
new
ММ4 7$
CommandBufferBeginInfo
ММ8 N
(
ММN O
)
ММO P
{
НН 
SType
ОО 
=
ОО 
StructureType
ОО )
.
ОО) *$
CommandBufferBeginInfo
ОО* @
}
ПП 
;
ПП 
if
ЯЯ 
(
ЯЯ 
_vulkan
ЯЯ 
.
ЯЯ  
BeginCommandBuffer
ЯЯ .
(
ЯЯ. /
_commandBuffer
ЯЯ/ =
[
ЯЯ= >
i
ЯЯ> ?
]
ЯЯ? @
,
ЯЯ@ A

_beginInfo
ЯЯB L
)
ЯЯL M
!=
ЯЯN P
Result
ЯЯQ W
.
ЯЯW X
Success
ЯЯX _
)
ЯЯ_ `
{
РР 
throw
СС 
new
СС 
	Exception
СС '
(
СС' (
$str
СС( Y
+
ССZ [
i
СС\ ]
)
СС] ^
;
СС^ _
}
ТТ 
uint
ЖЖ  
_handleSizeAligned
ЖЖ '
=
ЖЖ( )
AVulkanHelper
ЖЖ* 7
.
ЖЖ7 8
AlignedSize
ЖЖ8 C
(
ЖЖC D#
_rtPipelineProperties
ЖЖD Y
.
ЖЖY Z#
ShaderGroupHandleSize
ЖЖZ o
,
ЖЖo p$
_rtPipelinePropertiesЖЖq ├
.ЖЖ├ ┤*
ShaderGroupHandleAlignmentЖЖ┤ ║
)ЖЖ║ ╒
;ЖЖ╒ ё+
StridedDeviceAddressRegionKHR
ВВ -#
_raygenShaderSbtEntry
ВВ. C
=
ВВD E
new
ВВF I
(
ВВI J
)
ВВJ K
{
ЬЬ 
DeviceAddress
ЫЫ !
=
ЫЫ" #
AVulkanHelper
ЫЫ$ 1
.
ЫЫ1 2
GetBufferAdress
ЫЫ2 A
(
ЫЫA B
ref
ЫЫB E!
_raygenBindingTable
ЫЫF Y
)
ЫЫY Z
,
ЫЫZ [
Stride
ЗЗ 
=
ЗЗ  
_handleSizeAligned
ЗЗ /
,
ЗЗ/ 0
Size
ШШ 
=
ШШ  
_handleSizeAligned
ШШ -
}
ЭЭ 
;
ЭЭ +
StridedDeviceAddressRegionKHR
ЩЩ -"
_missnShaderSbtEntry
ЩЩ. B
=
ЩЩC D
new
ЩЩE H
(
ЩЩH I
)
ЩЩI J
{
ЧЧ 
DeviceAddress
ЪЪ !
=
ЪЪ" #
AVulkanHelper
ЪЪ$ 1
.
ЪЪ1 2
GetBufferAdress
ЪЪ2 A
(
ЪЪA B
ref
ЪЪB E
_missBindingTable
ЪЪF W
)
ЪЪW X
,
ЪЪX Y
Stride
── 
=
──  
_handleSizeAligned
── /
,
──/ 0
Size
││ 
=
││  
_handleSizeAligned
││ -
}
┌┌ 
;
┌┌ +
StridedDeviceAddressRegionKHR
┐┐ - 
_hitShaderSbtEntry
┐┐. @
=
┐┐A B
new
┐┐C F
(
┐┐F G
)
┐┐G H
{
└└ 
DeviceAddress
┘┘ !
=
┘┘" #
AVulkanHelper
┘┘$ 1
.
┘┘1 2
GetBufferAdress
┘┘2 A
(
┘┘A B
ref
┘┘B E
_hitBinddingTable
┘┘F W
)
┘┘W X
,
┘┘X Y
Stride
├├ 
=
├├  
_handleSizeAligned
├├ /
,
├├/ 0
Size
┤┤ 
=
┤┤  
_handleSizeAligned
┤┤ -
}
┬┬ 
;
┬┬ +
StridedDeviceAddressRegionKHR
┴┴ - 
_callableShaderSbt
┴┴. @
=
┴┴A B
default
┴┴C J
;
┴┴J K
_vulkan
┼┼ 
.
┼┼ 
CmdBindPipeline
┼┼ '
(
┼┼' (
_commandBuffer
┼┼( 6
[
┼┼6 7
i
┼┼7 8
]
┼┼8 9
,
┼┼9 :
PipelineBindPoint
┼┼; L
.
┼┼L M
RayTracingKhr
┼┼M Z
,
┼┼Z [
_rtPipeline
┼┼\ g
)
┼┼g h
;
┼┼h i
for
▀▀ 
(
▀▀ 
int
▀▀ 
j
▀▀ 
=
▀▀ 
$num
▀▀ 
;
▀▀ 
j
▀▀  !
<
▀▀" #
_entitiesToRender
▀▀$ 5
.
▀▀5 6
Count
▀▀6 ;
;
▀▀; <
j
▀▀= >
++
▀▀> @
)
▀▀@ A
{
▄▄ 
var
██ 
_offset
██ 
=
██  !
new
██" %
ulong
██& +
[
██+ ,
]
██, -
{
██. /
$num
██0 1
}
██2 3
;
██3 4
_entitiesToRender
▌▌ %
[
▌▌% &
j
▌▌& '
]
▌▌' (
.
▌▌( )
GetComponent
▌▌) 5
<
▌▌5 6
MeshComponent
▌▌6 C
>
▌▌C D
(
▌▌D E
)
▌▌E F
.
▌▌F G!
EnqueueDrawCommands
▌▌G Z
(
▌▌Z [
_offset
▌▌[ b
,
▌▌b c
i
▌▌d e
,
▌▌e f
ref
▌▌g j
_commandBuffer
▌▌k y
[
▌▌y z
i
▌▌z {
]
▌▌{ |
)
▌▌| }
;
▌▌} ~
}
▐▐ 
_rtExtention
░░ 
.
░░ 
CmdTraceRays
░░ )
(
░░) *
_commandBuffer
▒▒ "
[
▒▒" #
i
▒▒# $
]
▒▒$ %
,
▒▒% &
&
▓▓ #
_raygenShaderSbtEntry
▓▓ *
,
▓▓* +
&
⌠⌠ "
_missnShaderSbtEntry
⌠⌠ )
,
⌠⌠) *
&
■■  
_hitShaderSbtEntry
■■ '
,
■■' (
&
∙∙  
_callableShaderSbt
∙∙ '
,
∙∙' (
_extent
√√ 
.
√√ 
Width
√√ !
,
√√! "
_extent
≈≈ 
.
≈≈ 
Height
≈≈ "
,
≈≈" #
$num
≤≤ 
)
≤≤ 
;
≤≤ 
SetImageLayout
≥≥ 
(
≥≥ 
ref
≥≥ "
_commandBuffer
≥≥# 1
[
≥≥1 2
i
≥≥2 3
]
≥≥3 4
,
≥≥4 5
ref
≥≥6 9

_swapchain
≥≥: D
.
≥≥D E
_swapchainImages
≥≥E U
[
≥≥U V
i
≥≥V W
]
≥≥W X
,
≥≥X Y
ImageLayout
≥≥Z e
.
≥≥e f
	Undefined
≥≥f o
,
≥≥o p
ImageLayout
≥≥q |
.
≥≥| }!
TransferDstOptimal≥≥} ▐
,≥≥▐ ░
_sr≥≥▒ ■
)≥≥■ ∙
;≥≥∙ √
SetImageLayout
   
(
   
ref
   "
_commandBuffer
  # 1
[
  1 2
i
  2 3
]
  3 4
,
  4 5
ref
  6 9
_storageImage
  : G
[
  G H
i
  H I
]
  I J
,
  J K
ImageLayout
  L W
.
  W X
General
  X _
,
  _ `
ImageLayout
  a l
.
  l m 
TransferSrcOptimal
  m 
,   ─
_sr  │ └
)  └ ┘
;  ┘ ├
	ImageCopy
°° 
_ic
°° 
=
°° 
new
°°  #
	ImageCopy
°°$ -
(
°°- .
)
°°. /
{
²² 
SrcSubresource
·· "
=
··# $
{
÷÷ 

AspectMask
══ "
=
══# $
ImageAspectFlags
══% 5
.
══5 6
ColorBit
══6 >
,
══> ?
BaseArrayLayer
║║ &
=
║║' (
$num
║║) *
,
║║* +

LayerCount
╒╒ "
=
╒╒# $
$num
╒╒% &
,
╒╒& '
MipLevel
ёё  
=
ёё! "
$num
ёё# $
}
╓╓ 
,
╓╓ 
	SrcOffset
╔╔ 
=
╔╔ 
{
╔╔  !
X
╔╔" #
=
╔╔$ %
$num
╔╔& '
,
╔╔' (
Y
╔╔) *
=
╔╔+ ,
$num
╔╔- .
,
╔╔. /
Z
╔╔0 1
=
╔╔2 3
$num
╔╔4 5
}
╔╔5 6
,
╔╔6 7
DstSubresource
╕╕ "
=
╕╕# $
{
╖╖ 

AspectMask
╗╗ "
=
╗╗# $
ImageAspectFlags
╗╗% 5
.
╗╗5 6
ColorBit
╗╗6 >
,
╗╗> ?
MipLevel
╘╘  
=
╘╘! "
$num
╘╘# $
,
╘╘$ %

LayerCount
╙╙ "
=
╙╙# $
$num
╙╙% &
,
╙╙& '
BaseArrayLayer
╚╚ &
=
╚╚' (
$num
╚╚) *
}
╛╛ 
,
╛╛ 
	DstOffset
╜╜ 
=
╜╜ 
{
╜╜  !
X
╜╜" #
=
╜╜$ %
$num
╜╜& '
,
╜╜' (
Y
╜╜( )
=
╜╜* +
$num
╜╜, -
,
╜╜- .
Z
╜╜/ 0
=
╜╜1 2
$num
╜╜3 4
}
╜╜4 5
,
╜╜5 6
Extent
╝╝ 
=
╝╝ 
{
╞╞ 
Height
╟╟ 
=
╟╟  
_extent
╟╟! (
.
╟╟( )
Height
╟╟) /
,
╟╟0 1
Width
╟╟2 7
=
╟╟8 9
_extent
╟╟: A
.
╟╟A B
Width
╟╟B G
,
╟╟G H
Depth
╟╟I N
=
╟╟O P
$num
╟╟Q R
}
╠╠ 
}
╡╡ 
;
╡╡ 
_vulkan
ЁЁ 
.
ЁЁ 
CmdCopyImage
ЁЁ $
(
ЁЁ$ %
_commandBuffer
ЁЁ% 3
[
ЁЁ3 4
i
ЁЁ4 5
]
ЁЁ5 6
,
ЁЁ6 7
_storageImage
ЁЁ8 E
[
ЁЁE F
i
ЁЁF G
]
ЁЁG H
,
ЁЁH I
ImageLayout
ЁЁJ U
.
ЁЁU V 
TransferSrcOptimal
ЁЁV h
,
ЁЁh i

_swapchain
ЁЁj t
.
ЁЁt u
_swapchainImagesЁЁu ┘
[ЁЁ┘ ├
iЁЁ├ ┤
]ЁЁ┤ ┬
,ЁЁ┬ ┴
ImageLayoutЁЁ┼ ∙
.ЁЁ∙ √"
TransferDstOptimalЁЁ√ ╗
,ЁЁ╗ ╘
$numЁЁ╙ ╚
,ЁЁ╚ ╛
&ЁЁ╜ ╝
_icЁЁ╝ ╠
)ЁЁ╠ ╡
;ЁЁ╡ Ё
SetImageLayout
╣╣ 
(
╣╣ 
ref
╣╣ "
_commandBuffer
╣╣# 1
[
╣╣1 2
i
╣╣2 3
]
╣╣3 4
,
╣╣4 5
ref
╣╣6 9

_swapchain
╣╣: D
.
╣╣D E
_swapchainImages
╣╣E U
[
╣╣U V
i
╣╣V W
]
╣╣W X
,
╣╣X Y
ImageLayout
╣╣Z e
.
╣╣e f 
TransferDstOptimal
╣╣f x
,
╣╣x y
ImageLayout╣╣z ┘
.╣╣┘ ├
PresentSrcKhr╣╣├ ⌠
,╣╣⌠ ■
_sr╣╣∙ ≤
)╣╣≤ ≥
;╣╣≥  
SetImageLayout
╤╤ 
(
╤╤ 
ref
╤╤ "
_commandBuffer
╤╤# 1
[
╤╤1 2
i
╤╤2 3
]
╤╤3 4
,
╤╤4 5
ref
╤╤6 9
_storageImage
╤╤: G
[
╤╤G H
i
╤╤H I
]
╤╤I J
,
╤╤J K
ImageLayout
╤╤L W
.
╤╤W X 
TransferSrcOptimal
╤╤X j
,
╤╤j k
ImageLayout
╤╤l w
.
╤╤w x
General
╤╤x 
,╤╤ ─
_sr╤╤│ └
)╤╤└ ┘
;╤╤┘ ├
if
╦╦ 
(
╦╦ 
_vulkan
╦╦ 
.
╦╦ 
EndCommandBuffer
╦╦ ,
(
╦╦, -
_commandBuffer
╦╦- ;
[
╦╦; <
i
╦╦< =
]
╦╦= >
)
╦╦> ?
!=
╦╦@ B
Result
╦╦C I
.
╦╦I J
Success
╦╦J Q
)
╦╦Q R
{
╧╧ 
throw
╨╨ 
new
╨╨ 
	Exception
╨╨ '
(
╨╨' (
$str
╨╨( I
)
╨╨I J
;
╨╨J K
}
╩╩ 
}
╪╪ 
}
╫╫ 	
internal
©© 
override
©© 
void
©© $
RecreateCommandBuffers
©© 5
(
©©5 6
)
©©6 7
{
юю 	
base
аа 
.
аа $
RecreateCommandBuffers
аа '
(
аа' (
)
аа( )
;
аа) *"
CreateCommandBuffers
бб  
(
бб  !
)
бб! "
;
бб" #
}
цц 	
internal
ее 
override
ее 
void
ее 
Draw
ее #
(
ее# $
)
ее$ %
{
фф 	
Result
гг 
r
гг 
;
гг 
_camera
хх 
.
хх 
ProcessKeyboard
хх #
(
хх# $
)
хх$ %
;
хх% &
r
ии 
=
ии 
_vulkan
ии 
.
ии 
WaitForFences
ии %
(
ии% &
_logicalDevice
ии& 4
,
ии4 5
$num
ии6 7
,
ии7 8
_fencesInFlight
ии9 H
[
ииH I
_currentFrame
ииI V
]
ииV W
,
ииW X
true
ииY ]
,
ии] ^
ulong
ии_ d
.
ииd e
MaxValue
ииe m
)
ииm n
;
ииn o
uint
йй 
_imageIndex
йй 
=
йй 
$num
йй  
;
йй  !
r
кк 
=
кк 

_swapchain
кк 
.
кк 
_driverSwapchain
кк +
.
кк+ ,
AcquireNextImage
кк, <
(
кк< =
_logicalDevice
кк= K
,
ккK L

_swapchain
ккM W
.
ккW X
_swapchainKHR
ккX e
,
ккe f
ulong
ккg l
.
ккl m
MaxValue
ккm u
,
ккu v(
_imageAvailableSemaphoresккw ░
[кк░ ▒
_currentFrameкк▒ ·
]кк· ÷
,кк÷ ═
defaultкк║ ╗
,кк╗ ╘
refкк╙ ╜
_imageIndexкк╝ ╧
)кк╧ ╨
;кк╨ ╩
if
мм 
(
мм 
r
мм 
==
мм 
Result
мм 
.
мм 
ErrorOutOfDateKhr
мм -
)
мм- .
{
нн 
return
пп 
;
пп 
}
яя 
else
рр 
if
рр 
(
рр 
r
рр 
!=
рр 
Result
рр  
.
рр  !
Success
рр! (
&&
рр) +
r
рр, -
!=
рр. 0
Result
рр1 7
.
рр7 8
SuboptimalKhr
рр8 E
)
ррE F
{
сс 
throw
тт 
new
тт 
	Exception
тт #
(
тт# $
$str
тт$ G
)
ттG H
;
ттH I
}
уу 
_camera
вв 
.
вв  
UpdateCameraMatrix
вв &
(
вв& '
_extent
вв' .
,
вв. /
_imageIndex
вв0 ;
)
вв; <
;
вв< =
int
ыы 
localEntityCount
ыы  
=
ыы! "
$num
ыы# $
;
ыы$ %
foreach
зз 
(
зз 
Entity
зз 
e
зз 
in
зз  
_updateEntities
зз! 0
)
зз0 1
{
шш 
e
ээ 
.
ээ 
GetComponent
ээ 
<
ээ 
MeshComponent
ээ ,
>
ээ, -
(
ээ- .
)
ээ. /
.
ээ/ 0
UpdateMatrices
ээ0 >
(
ээ> ?
)
ээ? @
;
ээ@ A
localEntityCount
щщ  
++
щщ  "
;
щщ" #
}
чч 
_updateEntities
ъъ 
.
ъъ 
RemoveRange
ъъ '
(
ъъ' (
$num
ъъ( )
,
ъъ) *
localEntityCount
ъъ+ ;
)
ъъ; <
;
ъъ< =
if
АА 
(
АА 
_imagesInFlight
АА 
[
АА  
_imageIndex
АА  +
]
АА+ ,
.
АА, -
Handle
АА- 3
!=
АА4 6
default
АА7 >
)
АА> ?
{
ББ 
r
ЦЦ 
=
ЦЦ 
_vulkan
ЦЦ 
.
ЦЦ 
WaitForFences
ЦЦ )
(
ЦЦ) *
_logicalDevice
ЦЦ* 8
,
ЦЦ8 9
$num
ЦЦ: ;
,
ЦЦ; <
_imagesInFlight
ЦЦ= L
[
ЦЦL M
_imageIndex
ЦЦM X
]
ЦЦX Y
,
ЦЦY Z
true
ЦЦ[ _
,
ЦЦ_ `
ulong
ЦЦa f
.
ЦЦf g
MaxValue
ЦЦg o
)
ЦЦo p
;
ЦЦp q
}
ДД 
_imagesInFlight
ЕЕ 
[
ЕЕ 
_imageIndex
ЕЕ '
]
ЕЕ' (
=
ЕЕ) *
_fencesInFlight
ЕЕ+ :
[
ЕЕ: ;
_currentFrame
ЕЕ; H
]
ЕЕH I
;
ЕЕI J

SubmitInfo
ГГ 
_submitInfo
ГГ "
=
ГГ# $
new
ГГ% (

SubmitInfo
ГГ) 3
(
ГГ3 4
)
ГГ4 5
{
ХХ 
SType
ИИ 
=
ИИ 
StructureType
ИИ %
.
ИИ% &

SubmitInfo
ИИ& 0
}
ЙЙ 
;
ЙЙ 
var
ЛЛ 
_waitSemaphores
ЛЛ 
=
ЛЛ  !

stackalloc
ЛЛ" ,
[
ЛЛ, -
]
ЛЛ- .
{
ММ '
_imageAvailableSemaphores
НН )
[
НН) *
_currentFrame
НН* 7
]
НН7 8
}
ОО 
;
ОО 
var
ПП 
_waitStages
ПП 
=
ПП 

stackalloc
ПП (
[
ПП( )
]
ПП) *
{
ЯЯ  
PipelineStageFlags
РР "
.
РР" #$
RayTracingShaderBitKhr
РР# 9
}
СС 
;
СС 
CommandBuffer
УУ 
_buffer
УУ !
=
УУ" #
_commandBuffer
УУ$ 2
[
УУ2 3
_imageIndex
УУ3 >
]
УУ> ?
;
УУ? @
_submitInfo
ЖЖ 
=
ЖЖ 
_submitInfo
ЖЖ %
with
ЖЖ& *
{
ВВ  
WaitSemaphoreCount
ЬЬ "
=
ЬЬ# $
$num
ЬЬ% &
,
ЬЬ& '
PWaitSemaphores
ЫЫ 
=
ЫЫ  !
_waitSemaphores
ЫЫ" 1
,
ЫЫ1 2
PWaitDstStageMask
ЗЗ !
=
ЗЗ" #
_waitStages
ЗЗ$ /
,
ЗЗ/ 0 
CommandBufferCount
ЭЭ "
=
ЭЭ# $
$num
ЭЭ% &
,
ЭЭ& '
PCommandBuffers
ЩЩ 
=
ЩЩ  !
&
ЩЩ" #
_buffer
ЩЩ# *
}
ЧЧ 
;
ЧЧ 
var
── 
_signalSemaphores
── !
=
──" #

stackalloc
──$ .
[
──. /
]
──/ 0
{
││ '
_renderFinishedSemaphores
┌┌ )
[
┌┌) *
_currentFrame
┌┌* 7
]
┌┌7 8
}
┐┐ 
;
┐┐ 
_submitInfo
┘┘ 
=
┘┘ 
_submitInfo
┘┘ %
with
┘┘& *
{
├├ "
SignalSemaphoreCount
┤┤ $
=
┤┤% &
$num
┤┤' (
,
┤┤( )
PSignalSemaphores
┬┬ !
=
┬┬" #
_signalSemaphores
┬┬$ 5
}
┴┴ 
;
┴┴ 
_vulkan
▀▀ 
.
▀▀ 
ResetFences
▀▀ 
(
▀▀  
_logicalDevice
▀▀  .
,
▀▀. /
$num
▀▀0 1
,
▀▀1 2
_fencesInFlight
▀▀3 B
[
▀▀B C
_currentFrame
▀▀C P
]
▀▀P Q
)
▀▀Q R
;
▀▀R S
r
▄▄ 
=
▄▄ 
_vulkan
▄▄ 
.
▄▄ 
QueueSubmit
▄▄ #
(
▄▄# $
_graphicsQueue
▄▄$ 2
,
▄▄2 3
$num
▄▄4 5
,
▄▄5 6
_submitInfo
▄▄7 B
,
▄▄B C
_fencesInFlight
▄▄D S
[
▄▄S T
_currentFrame
▄▄T a
]
▄▄a b
)
▄▄b c
;
▄▄c d
if
██ 
(
██ 
r
██ 
!=
██ 
Result
██ 
.
██ 
Success
██ #
)
██# $
{
▌▌ 
throw
▐▐ 
new
▐▐ 
	Exception
▐▐ #
(
▐▐# $
$str
▐▐$ P
+
▐▐Q R
r
▐▐S T
)
▐▐T U
;
▐▐U V
}
░░ 
var
▓▓ 
_swapChains
▓▓ 
=
▓▓ 

stackalloc
▓▓ (
[
▓▓( )
]
▓▓) *
{
▓▓+ ,

_swapchain
▓▓- 7
.
▓▓7 8
_swapchainKHR
▓▓8 E
}
▓▓F G
;
▓▓G H
PresentInfoKHR
⌠⌠ 
_presentInfo
⌠⌠ '
=
⌠⌠( )
new
⌠⌠* -
PresentInfoKHR
⌠⌠. <
(
⌠⌠< =
)
⌠⌠= >
{
■■ 
SType
∙∙ 
=
∙∙ 
StructureType
∙∙ %
.
∙∙% &
PresentInfoKhr
∙∙& 4
,
∙∙4 5 
WaitSemaphoreCount
√√ "
=
√√# $
$num
√√% &
,
√√& '
PWaitSemaphores
≈≈ 
=
≈≈  !
_signalSemaphores
≈≈" 3
,
≈≈3 4
SwapchainCount
≤≤ 
=
≤≤  
$num
≤≤! "
,
≤≤" #
PSwapchains
≥≥ 
=
≥≥ 
_swapChains
≥≥ )
,
≥≥) *
PImageIndices
   
=
   
&
    !
_imageIndex
  ! ,
}
⌡⌡ 
;
⌡⌡ 
r
°° 
=
°° 

_swapchain
°° 
.
°° 
_driverSwapchain
°° +
.
°°+ ,
QueuePresent
°°, 8
(
°°8 9
_presentQueue
°°9 F
,
°°F G
_presentInfo
°°H T
)
°°T U
;
°°U V
if
²² 
(
²² 
r
²² 
==
²² 
Result
²² 
.
²² 
ErrorOutOfDateKhr
²² -
||
²². 0
r
²²1 2
==
²²3 5
Result
²²6 <
.
²²< =
SuboptimalKhr
²²= J
||
²²K M
	_glWindow
²²N W
.
²²W X!
_frameBufferResized
²²X k
)
²²k l
{
·· 
	_glWindow
÷÷ 
.
÷÷ !
_frameBufferResized
÷÷ -
=
÷÷. /
false
÷÷0 5
;
÷÷5 6
}
║║ 
else
╒╒ 
if
╒╒ 
(
╒╒ 
r
╒╒ 
!=
╒╒ 
Result
╒╒  
.
╒╒  !
Success
╒╒! (
)
╒╒( )
{
ёё 
throw
╓╓ 
new
╓╓ 
	Exception
╓╓ #
(
╓╓# $
$str
╓╓$ H
)
╓╓H I
;
╓╓I J
}
╔╔ 
_currentFrame
╕╕ 
=
╕╕ 
(
╕╕ 
_currentFrame
╕╕ *
+
╕╕+ ,
$num
╕╕- .
)
╕╕. /
%
╕╕0 1"
MAX_FRAMES_IN_FLIGHT
╕╕2 F
;
╕╕F G
}
╖╖ 	
private
╘╘ 
void
╘╘ 
SetImageLayout
╘╘ #
(
╘╘# $
ref
╘╘$ '
CommandBuffer
╘╘( 5
_cBuffer
╘╘6 >
,
╘╘> ?
ref
╘╘@ C
Image
╘╘D I
_image
╘╘J P
,
╘╘P Q
ImageLayout
╘╘R ]

_oldLayout
╘╘^ h
,
╘╘h i
ImageLayout
╘╘j u

_newLayout╘╘v ─
,╘╘─ │%
ImageSubresourceRange╘╘┌ ≈
_subresource╘╘≤ ╓
)╘╘╓ ╔
{
╙╙ 	 
ImageMemoryBarrier
╚╚ 
_barrier
╚╚ '
=
╚╚( )
new
╚╚* -
(
╚╚- .
)
╚╚. /
{
╛╛ 
SType
╜╜ 
=
╜╜ 
StructureType
╜╜ %
.
╜╜% & 
ImageMemoryBarrier
╜╜& 8
,
╜╜8 9
	OldLayout
╝╝ 
=
╝╝ 

_oldLayout
╝╝ &
,
╝╝& '
	NewLayout
╞╞ 
=
╞╞ 

_newLayout
╞╞ &
,
╞╞& '!
SrcQueueFamilyIndex
╟╟ #
=
╟╟$ %
Vk
╟╟& (
.
╟╟( ) 
QueueFamilyIgnored
╟╟) ;
,
╟╟; <!
DstQueueFamilyIndex
╠╠ #
=
╠╠$ %
Vk
╠╠& (
.
╠╠( ) 
QueueFamilyIgnored
╠╠) ;
,
╠╠; <
Image
╡╡ 
=
╡╡ 
_image
╡╡ 
,
╡╡ 
SubresourceRange
ЁЁ  
=
ЁЁ! "
_subresource
ЁЁ# /
}
╢╢ 
;
╢╢  
PipelineStageFlags
╣╣ 
sourceStage
╣╣ *
;
╣╣* + 
PipelineStageFlags
╤╤ 
destinationStage
╤╤ /
;
╤╤/ 0
if
╦╦ 
(
╦╦ 

_oldLayout
╦╦ 
==
╦╦ 
ImageLayout
╦╦ )
.
╦╦) *
	Undefined
╦╦* 3
&&
╦╦4 6

_newLayout
╦╦7 A
==
╦╦B D
ImageLayout
╦╦E P
.
╦╦P Q 
TransferDstOptimal
╦╦Q c
)
╦╦c d
{
╧╧ 
_barrier
╨╨ 
.
╨╨ 
SrcAccessMask
╨╨ &
=
╨╨' (
$num
╨╨) *
;
╨╨* +
_barrier
╩╩ 
.
╩╩ 
DstAccessMask
╩╩ &
=
╩╩' (
AccessFlags
╩╩) 4
.
╩╩4 5
TransferWriteBit
╩╩5 E
;
╩╩E F
sourceStage
╫╫ 
=
╫╫  
PipelineStageFlags
╫╫ 0
.
╫╫0 1
TopOfPipeBit
╫╫1 =
;
╫╫= >
destinationStage
╬╬  
=
╬╬! " 
PipelineStageFlags
╬╬# 5
.
╬╬5 6
TransferBit
╬╬6 A
;
╬╬A B
}
©© 
else
юю 
if
юю 
(
юю 

_oldLayout
юю 
==
юю  "
ImageLayout
юю# .
.
юю. / 
TransferDstOptimal
юю/ A
&&
ююB D

_newLayout
ююE O
==
ююP R
ImageLayout
ююS ^
.
юю^ _
PresentSrcKhr
юю_ l
)
ююl m
{
аа 
_barrier
бб 
.
бб 
SrcAccessMask
бб &
=
бб' (
AccessFlags
бб) 4
.
бб4 5
TransferWriteBit
бб5 E
;
ббE F
_barrier
цц 
.
цц 
DstAccessMask
цц &
=
цц' (
AccessFlags
цц) 4
.
цц4 5
MemoryReadBit
цц5 B
;
ццB C
sourceStage
ее 
=
ее  
PipelineStageFlags
ее 0
.
ее0 1
TransferBit
ее1 <
;
ее< =
destinationStage
фф  
=
фф! " 
PipelineStageFlags
фф# 5
.
фф5 6
BottomOfPipeBit
фф6 E
;
ффE F
}
гг 
else
хх 
if
хх 
(
хх 

_oldLayout
хх 
==
хх  "
ImageLayout
хх# .
.
хх. / 
TransferSrcOptimal
хх/ A
&&
ххB D

_newLayout
ххE O
==
ххP R
ImageLayout
ххS ^
.
хх^ _
General
хх_ f
)
ххf g
{
ии 
_barrier
йй 
.
йй 
SrcAccessMask
йй &
=
йй' (
AccessFlags
йй) 4
.
йй4 5
TransferReadBit
йй5 D
;
ййD E
_barrier
кк 
.
кк 
DstAccessMask
кк &
=
кк' (
AccessFlags
кк) 4
.
кк4 5
ShaderReadBit
кк5 B
|
ккC D
AccessFlags
ккE P
.
ккP Q
ShaderWriteBit
ккQ _
;
кк_ `
sourceStage
мм 
=
мм  
PipelineStageFlags
мм 0
.
мм0 1
TransferBit
мм1 <
;
мм< =
destinationStage
нн  
=
нн! " 
PipelineStageFlags
нн# 5
.
нн5 6$
RayTracingShaderBitKhr
нн6 L
;
ннL M
}
оо 
else
пп 
if
пп 
(
пп 

_oldLayout
пп 
==
пп  "
ImageLayout
пп# .
.
пп. /
General
пп/ 6
&&
пп7 9

_newLayout
пп: D
==
ппE G
ImageLayout
ппH S
.
ппS T 
TransferSrcOptimal
ппT f
)
ппf g
{
яя 
_barrier
рр 
.
рр 
SrcAccessMask
рр &
=
рр' (
AccessFlags
рр) 4
.
рр4 5
ShaderWriteBit
рр5 C
;
ррC D
_barrier
сс 
.
сс 
DstAccessMask
сс &
=
сс' (
AccessFlags
сс) 4
.
сс4 5
TransferReadBit
сс5 D
;
ссD E
sourceStage
уу 
=
уу  
PipelineStageFlags
уу 0
.
уу0 1$
RayTracingShaderBitKhr
уу1 G
;
ууG H
destinationStage
жж  
=
жж! " 
PipelineStageFlags
жж# 5
.
жж5 6
TransferBit
жж6 A
;
жжA B
}
вв 
else
ьь 
{
ыы 
throw
зз 
new
зз 
	Exception
зз #
(
зз# $
$str
зз$ D
)
ззD E
;
ззE F
}
шш 
_vulkan
ээ 
!
ээ 
.
ээ  
CmdPipelineBarrier
ээ '
(
ээ' (
_cBuffer
ээ( 0
,
ээ0 1
sourceStage
ээ2 =
,
ээ= >
destinationStage
ээ? O
,
ээO P
$num
ээQ R
,
ээR S
$num
ээT U
,
ээU V
null
ээW [
,
ээ[ \
$num
ээ] ^
,
ээ^ _
null
ээ` d
,
ээd e
$num
ээf g
,
ээg h
&
ээi j
_barrier
ээj r
)
ээr s
;
ээs t
}
щщ 	
private
ъъ 
ShaderModule
ъъ  
CreateShaderModule
ъъ /
(
ъъ/ 0
byte
ъъ0 4
[
ъъ4 5
]
ъъ5 6
_shaderCode
ъъ7 B
)
ъъB C
{
ЮЮ 	$
ShaderModuleCreateInfo
АА "
_createInfo
АА# .
=
АА/ 0
new
АА1 4$
ShaderModuleCreateInfo
АА5 K
{
ББ 
SType
ЦЦ 
=
ЦЦ 
StructureType
ЦЦ %
.
ЦЦ% &$
ShaderModuleCreateInfo
ЦЦ& <
,
ЦЦ< =
CodeSize
ДД 
=
ДД 
(
ДД 
nuint
ДД !
)
ДД! "
_shaderCode
ДД" -
.
ДД- .
Length
ДД. 4
,
ДД4 5
}
ЕЕ 
;
ЕЕ 
ShaderModule
ФФ 
_shaderModule
ФФ &
;
ФФ& '
fixed
ХХ 
(
ХХ 
byte
ХХ 
*
ХХ 
_shaderCodePtr
ХХ '
=
ХХ( )
_shaderCode
ХХ* 5
)
ХХ5 6
{
ИИ 
_createInfo
ЙЙ 
.
ЙЙ 
PCode
ЙЙ !
=
ЙЙ" #
(
ЙЙ$ %
uint
ЙЙ% )
*
ЙЙ) *
)
ЙЙ* +
_shaderCodePtr
ЙЙ+ 9
;
ЙЙ9 :
if
КК 
(
КК 
_vulkan
КК 
.
КК  
CreateShaderModule
КК .
(
КК. /
_logicalDevice
КК/ =
,
КК= >
_createInfo
КК? J
,
ККJ K
null
ККL P
,
ККP Q
out
ККR U
_shaderModule
ККV c
)
ККc d
!=
ККe g
Result
ККh n
.
ККn o
Success
ККo v
)
ККv w
{
ЛЛ 
throw
ММ 
new
ММ 
	Exception
ММ '
(
ММ' (
$str
ММ( H
)
ММH I
;
ММI J
}
НН 
}
ОО 
return
ПП 
_shaderModule
ПП  
;
ПП  !
}
ЯЯ 	
private
СС 
byte
СС 
[
СС 
]
СС 
ReadFile
СС 
(
СС  
string
СС  &
FileName
СС' /
)
СС/ 0
{
ТТ 	
byte
УУ 
[
УУ 
]
УУ 
contents
УУ 
=
УУ 
File
УУ "
.
УУ" #
ReadAllBytes
УУ# /
(
УУ/ 0
FileName
УУ0 8
)
УУ8 9
;
УУ9 :
return
ЖЖ 
contents
ЖЖ 
;
ЖЖ 
}
ВВ 	
}
ЬЬ 
}ЫЫ ╦│
tH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\MeshSubComponents\MCRaytracing.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
.* +
MeshSubComponents+ <
{ 
internal 
unsafe 
class 
MCRaytracing &
:' (
MeshComponent) 6
{ 
Buffer  
_fakeTransformBuffer #
;# $
DeviceMemory 
_fakeTransformDM %
;% &
Buffer 
_fakeInstanceBuffer "
;" #
DeviceMemory 
_fakeInstanceDM $
;$ %
public 
struct 
AccelerationStruct (
{ 	
public $
AccelerationStructureKHR +
_handle, 3
;3 4
public 
ulong 
_deviceAddress '
;' (
public 
DeviceMemory 
_memory  '
;' (
public 
Buffer 
_buffer !
;! "
} 	
public 
struct $
PathtracingScratchBuffer .
{ 	
public 
ulong 
_deviceAddress '
;' (
public   
Buffer   
_buffer   !
;  ! "
public!! 
DeviceMemory!! 
_memory!!  '
;!!' (
}"" 	'
DeviceOrHostAddressConstKHR$$ #
_addressVertex$$$ 2
=$$3 4
default$$5 <
;$$< ='
DeviceOrHostAddressConstKHR%% #
_addressIndex%%$ 1
=%%2 3
default%%4 ;
;%%; <'
DeviceOrHostAddressConstKHR&& #
_addressTransform&&$ 5
=&&6 7
default&&8 ?
;&&? @'
DeviceOrHostAddressConstKHR'' #
_addressInstance''$ 4
=''5 6
default''7 >
;''> ?
AccelerationStruct)) 
_BLAS))  
=))! "
default))# *
;))* +
AccelerationStruct** 
_TLAS**  
=**! "
default**# *
;*** +,
 AccelerationStructureInstanceKHR,, (!
_accelerationInstance,,) >
;,,> ?
internal.. 
MCRaytracing.. 
(.. 
).. 
{// 	 
_aditionalUsageFlags00  
=00! "
BufferUsageFlags00# 3
.003 49
-AccelerationStructureBuildInputReadOnlyBitKhr004 a
|00b c
BufferUsageFlags00d t
.00t u#
ShaderDeviceAddressBit	00u ▀
;
00▀ ▄ 
AVulkanBufferHandler11  
.11  !
CreateVertexBuffer11! 3
(113 4
ref114 7
_mesh118 =
.11= >
	_vertices11> G
,11G H
ref11I L
_vertexBuffer11M Z
,11Z [
ref11\ _
_vertexBufferMemory11` s
,11s t!
_aditionalUsageFlags	11u ┴
)
11┴ ┼
;
11┼ ▀ 
AVulkanBufferHandler22  
.22  !
CreateIndexBuffer22! 2
(222 3
ref223 6
_mesh227 <
.22< =
_indices22= E
,22E F
ref22G J
_indexBuffer22K W
,22W X
ref22Y \
_indexBufferMemory22] o
,22o p!
_aditionalUsageFlags	22q ┘
)
22┘ ├
;
22├ ┤
}33 	
public55 
override55 
void55 
OnStart55 $
(55$ %
)55% &
{66 	
SingletonMatrix77 
(77 
)77 
;77 

CreateBLAS88 
(88 
)88 
;88 

CreateTLAS99 
(99 
)99 
;99 
_rendererInstance:: 
.:: "
AddEntityToRenderQueue:: 4
(::4 5
parent::5 ;
)::; <
;::< =
CreateDescriptorSet;; 
(;;  
);;  !
;;;! "
}<< 	
private>> 
void>> 

CreateBLAS>> 
(>>  
)>>  !
{?? 	
TransformMatrixKHR@@  
_fakeTransformMatrix@@ 3
=@@4 5
new@@6 9
TransformMatrixKHR@@: L
(@@L M
)@@M N
;@@N O
UnsafeAA 
.AA 
	CopyBlockAA 
(AA  
_fakeTransformMatrixAA 1
.AA1 2
MatrixAA2 8
,AA8 9
UnsafeAA: @
.AA@ A
	AsPointerAAA J
(AAJ K
refAAK N
_transformMatricesAAO a
.AAa b
ToArrayAAb i
(AAi j
)AAj k
[AAk l
$numAAl m
]AAm n
)AAn o
,AAo p
$numAAq s
)AAs t
;AAt u 
AVulkanBufferHandlerCC  
.CC  !
CreateBufferCC! -
(CC- .
(DD 
ulongDD 
)DD 
sizeofDD 
(DD 
TransformMatrixKHRDD 0
)DD0 1
,DD1 2
BufferUsageFlagsEE  
.EE  !"
ShaderDeviceAddressBitEE! 7
|EE8 9
BufferUsageFlagsEE: J
.EEJ K9
-AccelerationStructureBuildInputReadOnlyBitKhrEEK x
,EEx y
MemoryPropertyFlagsFF #
.FF# $
HostVisibleBitFF$ 2
|FF3 4
MemoryPropertyFlagsFF5 H
.FFH I
HostCoherentBitFFI X
,FFX Y
refGG  
_fakeTransformBufferGG (
,GG( )
refGG* -
_fakeTransformDMGG. >
)GG> ?
;GG? @
voidHH 
*HH 
_dataHH 
;HH 
_vulkanII 
.II 
	MapMemoryII 
(II 
_logicalDeviceII ,
,II, -
_fakeTransformDMII. >
,II> ?
$numII@ A
,IIA B
(IIC D
ulongIID I
)III J
sizeofIIJ P
(IIP Q
TransformMatrixKHRIIQ c
)IIc d
,IId e
$numIIf g
,IIg h
&IIi j
_dataIIj o
)IIo p
;IIp q
newJJ 
SpanJJ 
<JJ 
TransformMatrixKHRJJ '
>JJ' (
(JJ( )
_dataJJ) .
,JJ. /
$numJJ0 1
)JJ1 2
[JJ2 3
$numJJ3 4
]JJ4 5
=JJ6 7 
_fakeTransformMatrixJJ8 L
;JJL M
_vulkanKK 
.KK 
UnmapMemoryKK 
(KK  
_logicalDeviceKK  .
,KK. /
_fakeTransformDMKK0 @
)KK@ A
;KKA B
_addressVertexMM 
.MM 
DeviceAddressMM (
=MM) *
AVulkanHelperMM+ 8
.MM8 9
GetBufferAdressMM9 H
(MMH I
refMMI L
_vertexBufferMMM Z
)MMZ [
;MM[ \
_addressIndexNN 
.NN 
DeviceAddressNN '
=NN( )
AVulkanHelperNN* 7
.NN7 8
GetBufferAdressNN8 G
(NNG H
refNNH K
_indexBufferNNL X
)NNX Y
;NNY Z
_addressTransformOO 
.OO 
DeviceAddressOO +
=OO, -
AVulkanHelperOO. ;
.OO; <
GetBufferAdressOO< K
(OOK L
refOOL O 
_fakeTransformBufferOOP d
)OOd e
;OOe f,
 AccelerationStructureGeometryKHRQQ ,
_accelStrGeomQQ- :
=QQ; <
newQQ= @,
 AccelerationStructureGeometryKHRQQA a
{RR 
STypeSS 
=SS 
StructureTypeSS %
.SS% &,
 AccelerationStructureGeometryKhrSS& F
,SSF G
FlagsTT 
=TT 
GeometryFlagsKHRTT (
.TT( )
OpaqueBitKhrTT) 5
,TT5 6
GeometryTypeUU 
=UU 
GeometryTypeKHRUU .
.UU. /
TrianglesKhrUU/ ;
,UU; <
GeometryVV 
=VV 
{WW 
	TrianglesXX 
=XX 
{YY 
STypeZZ 
=ZZ 
StructureTypeZZ  -
.ZZ- .9
-AccelerationStructureGeometryTrianglesDataKhrZZ. [
,ZZ[ \
VertexFormat[[ $
=[[% &
Format[[' -
.[[- .
R32G32B32Sfloat[[. =
,[[= >

VertexData\\ "
=\\# $
_addressVertex\\% 3
,\\3 4
	MaxVertex]] !
=]]" #
(]]$ %
uint]]% )
)]]) *
(]]* +
_mesh]]+ 0
.]]0 1
	_vertices]]1 :
.]]: ;
Length]]; A
)]]A B
,]]B C
VertexStride^^ $
=^^% &
(^^' (
ulong^^( -
)^^- .
sizeof^^. 4
(^^4 5
Vertex^^5 ;
)^^; <
,^^< =
	IndexType__ !
=__" #
	IndexType__$ -
.__- .
Uint16__. 4
,__4 5
	IndexData`` !
=``" #
_addressIndex``$ 1
,``1 2
TransformDataaa %
=aa& '
defaultaa( /
,aa/ 0
PNextbb 
=bb 
nullbb  $
}cc 
}dd 
,dd 
PNextee 
=ee 
nullee 
,ee 
}ff 
;ff 
_accelStrGeomgg 
.gg 
Geometrygg "
.gg" #
	Trianglesgg# ,
.gg, -
TransformDatagg- :
=gg; <
_addressTransformgg= N
;ggN O5
)AccelerationStructureBuildGeometryInfoKHRii 5
_accelStrGeomInfoii6 G
=iiH I
newiiJ M
(iiM N
)iiN O
{jj 
STypekk 
=kk 
StructureTypekk %
.kk% &5
)AccelerationStructureBuildGeometryInfoKhrkk& O
,kkO P
Typell 
=ll (
AccelerationStructureTypeKHRll 3
.ll3 4
BottomLevelKhrll4 B
,llB C
Flagsmm 
=mm .
"BuildAccelerationStructureFlagsKHRmm :
.mm: ;!
PreferFastTraceBitKhrmm; P
,mmP Q
GeometryCountnn 
=nn 
$numnn  !
,nn! "
PGeometriesoo 
=oo 
&oo 
_accelStrGeomoo ,
,oo, -$
SrcAccelerationStructurepp (
=pp) *
defaultpp+ 2
,pp2 3
}qq 
;qq 
uintss 
numTrisss 
=ss 
(ss 
uintss  
)ss  !
(ss! "
_meshss" '
.ss' (
_indicesss( 0
.ss0 1
Lengthss1 7
/ss8 9
$numss: ;
)ss; <
;ss< =2
&AccelerationStructureBuildSizesInfoKHRtt 2
	_asbsInfott3 <
=tt= >
defaulttt? F
;ttF G
	_asbsInfouu 
.uu 
STypeuu 
=uu 
StructureTypeuu +
.uu+ ,2
&AccelerationStructureBuildSizesInfoKhruu, R
;uuR S"
_accelerationStructurevv "
.vv" #.
"GetAccelerationStructureBuildSizesvv# E
(vvE F
_logicalDevicevvF T
,vvT U-
!AccelerationStructureBuildTypeKHRvvV w
.vvw x
	DeviceKhr	vvx │
,
vv│ ┌
&
vv┐ └
_accelStrGeomInfo
vv└ ∙
,
vv∙ √
numTris
vv≈ ·
,
vv· ÷
out
vv═ ё
	_asbsInfo
vv╓ ╜
)
vv╜ ╝
;
vv╝ ╞-
!CreateAccelerationStructureBufferww -
(ww- .
refww. 1
_BLASww2 7
,ww7 8
refww9 <
	_asbsInfoww= F
)wwF G
;wwG H.
"AccelerationStructureCreateInfoKHRyy .,
 _accelerationStructureCreateInfoyy/ O
=yyP Q
newyyR U.
"AccelerationStructureCreateInfoKHRyyV x
(yyx y
)yyy z
{zz 
SType{{ 
={{ 
StructureType{{ %
.{{% &.
"AccelerationStructureCreateInfoKhr{{& H
,{{H I
Buffer|| 
=|| 
_BLAS|| 
.|| 
_buffer|| &
,||& '
Size}} 
=}} 
	_asbsInfo}}  
.}}  !%
AccelerationStructureSize}}! :
,}}: ;
Type~~ 
=~~ (
AccelerationStructureTypeKHR~~ 3
.~~3 4
BottomLevelKhr~~4 B
} 
; 
Result
── 
r
── 
=
── $
_accelerationStructure
── -
.
──- .)
CreateAccelerationStructure
──. I
(
──I J
_logicalDevice
──J X
,
──X Y.
 _accelerationStructureCreateInfo
──Z z
,
──z {
null──| ─
,─── │
out──┌ ┘
_BLAS──├ ▀
.──▀ ▄
_handle──▄ ⌠
)──⌠ ■
;──■ ∙
if
││ 
(
││ 
r
││ 
!=
││ 
Result
││ 
.
││ 
Success
││ #
)
││# $
{
┌┌ 
throw
┐┐ 
new
┐┐ 
	Exception
┐┐ #
(
┐┐# $
$str
┐┐$ G
)
┐┐G H
;
┐┐H I
}
└└ &
PathtracingScratchBuffer
┘┘ $
_scratchBuffer
┘┘% 3
=
┘┘4 5
new
┘┘6 9&
PathtracingScratchBuffer
┘┘: R
(
┘┘R S
)
┘┘S T
;
┘┘T U!
CreateScratchBuffer
├├ 
(
├├  
	_asbsInfo
├├  )
.
├├) *
BuildScratchSize
├├* :
,
├├: ;
ref
├├< ?
_scratchBuffer
├├@ N
)
├├N O
;
├├O P7
)AccelerationStructureBuildGeometryInfoKHR
┬┬ 5
_abgInfo
┬┬6 >
=
┬┬? @
new
┬┬A D7
)AccelerationStructureBuildGeometryInfoKHR
┬┬E n
(
┬┬n o
)
┬┬o p
{
┴┴ 
SType
┼┼ 
=
┼┼ 
StructureType
┼┼ %
.
┼┼% &7
)AccelerationStructureBuildGeometryInfoKhr
┼┼& O
,
┼┼O P
Type
▀▀ 
=
▀▀ *
AccelerationStructureTypeKHR
▀▀ 3
.
▀▀3 4
BottomLevelKhr
▀▀4 B
,
▀▀B C
Flags
▄▄ 
=
▄▄ 0
"BuildAccelerationStructureFlagsKHR
▄▄ :
.
▄▄: ;#
PreferFastTraceBitKhr
▄▄; P
,
▄▄P Q
Mode
██ 
=
██ /
!BuildAccelerationStructureModeKHR
██ 8
.
██8 9
BuildKhr
██9 A
,
██A B&
DstAccelerationStructure
▌▌ (
=
▌▌) *
_BLAS
▌▌+ 0
.
▌▌0 1
_handle
▌▌1 8
,
▌▌8 9
GeometryCount
▐▐ 
=
▐▐ 
$num
▐▐  !
,
▐▐! "
PGeometries
░░ 
=
░░ 
&
░░ 
_accelStrGeom
░░ ,
,
░░, -
ScratchData
▒▒ 
=
▒▒ 
{
▓▓ 
DeviceAddress
⌠⌠ !
=
⌠⌠" #
_scratchBuffer
⌠⌠$ 2
.
⌠⌠2 3
_deviceAddress
⌠⌠3 A
}
■■ 
}
∙∙ 
;
∙∙ 4
&AccelerationStructureBuildRangeInfoKHR
√√ 2
	_asbrInfo
√√3 <
=
√√= >
new
√√? B4
&AccelerationStructureBuildRangeInfoKHR
√√C i
(
√√i j
)
√√j k
{
≈≈ 
PrimitiveCount
≤≤ 
=
≤≤  
numTris
≤≤! (
,
≤≤( )
PrimitiveOffset
≥≥ 
=
≥≥  !
$num
≥≥" #
,
≥≥# $
FirstVertex
   
=
   
$num
   
,
    
TransformOffset
⌡⌡ 
=
⌡⌡  !
$num
⌡⌡" #
}
°° 
;
°° 
CommandBuffer
·· 
_commandBuffer
·· (
=
··) *"
AVulkanBufferHandler
··+ ?
.
··? @%
BeginSingleTimeCommands
··@ W
(
··W X
)
··X Y
;
··Y Z$
_accelerationStructure
÷÷ "
.
÷÷" #,
CmdBuildAccelerationStructures
÷÷# A
(
÷÷A B
_commandBuffer
÷÷B P
,
÷÷P Q
$num
÷÷R S
,
÷÷S T
&
÷÷U V
_abgInfo
÷÷V ^
,
÷÷^ _
&
÷÷` a
	_asbrInfo
÷÷a j
)
÷÷j k
;
÷÷k l"
AVulkanBufferHandler
══  
.
══  !#
EndSingleTimeCommands
══! 6
(
══6 7
ref
══7 :
_commandBuffer
══; I
)
══I J
;
══J K7
)AccelerationStructureDeviceAddressInfoKHR
ёё 5
_adaInfo
ёё6 >
=
ёё? @
new
ёёA D7
)AccelerationStructureDeviceAddressInfoKHR
ёёE n
(
ёёn o
)
ёёo p
{
╓╓ 
SType
╔╔ 
=
╔╔ 
StructureType
╔╔ %
.
╔╔% &7
)AccelerationStructureDeviceAddressInfoKhr
╔╔& O
,
╔╔O P#
AccelerationStructure
╕╕ %
=
╕╕& '
_BLAS
╕╕( -
.
╕╕- .
_handle
╕╕. 5
}
╖╖ 
;
╖╖ 
_BLAS
╗╗ 
.
╗╗ 
_deviceAddress
╗╗  
=
╗╗! "$
_accelerationStructure
╗╗# 9
.
╗╗9 :3
%GetAccelerationStructureDeviceAddress
╗╗: _
(
╗╗_ `
_logicalDevice
╗╗` n
,
╗╗n o
_adaInfo
╗╗p x
)
╗╗x y
;
╗╗y z!
DeleteScratchBuffer
╘╘ 
(
╘╘  
ref
╘╘  #
_scratchBuffer
╘╘$ 2
)
╘╘2 3
;
╘╘3 4
}
╙╙ 	
private
╛╛ 
void
╛╛ 

CreateTLAS
╛╛ 
(
╛╛  
)
╛╛  !
{
╜╜ 	
if
╞╞ 
(
╞╞ !
_fakeInstanceBuffer
╞╞ #
.
╞╞# $
Handle
╞╞$ *
==
╞╞+ -
$num
╞╞. /
)
╞╞/ 0
{
╟╟ 

Quaternion
╠╠ 
<
╠╠ 
float
╠╠  
>
╠╠  !
q
╠╠" #
=
╠╠$ %

Quaternion
╠╠& 0
<
╠╠0 1
float
╠╠1 6
>
╠╠6 7
.
╠╠7 8$
CreateFromYawPitchRoll
╠╠8 N
(
╠╠N O
$num
╠╠O R
*
╠╠S T
MathF
╠╠U Z
.
╠╠Z [
PI
╠╠[ ]
/
╠╠^ _
$num
╠╠` d
,
╠╠d e
$num
╠╠f g
,
╠╠g h
$num
╠╠i j
)
╠╠j k
;
╠╠k l
	Matrix4X4
╡╡ 
<
╡╡ 
float
╡╡ 
>
╡╡  

_transform
╡╡! +
=
╡╡, -
	Matrix4X4
╡╡. 7
<
╡╡7 8
float
╡╡8 =
>
╡╡= >
.
╡╡> ?
Identity
╡╡? G
;
╡╡G H

_transform
ЁЁ 
*=
ЁЁ 
	Matrix4X4
ЁЁ '
.
ЁЁ' (
CreateScale
ЁЁ( 3
(
ЁЁ3 4
parent
ЁЁ4 :
.
ЁЁ: ;
	transform
ЁЁ; D
.
ЁЁD E
scale
ЁЁE J
)
ЁЁJ K
;
ЁЁK L

_transform
╢╢ 
*=
╢╢ 
	Matrix4X4
╢╢ '
.
╢╢' ("
CreateFromQuaternion
╢╢( <
(
╢╢< =
q
╢╢= >
)
╢╢> ?
;
╢╢? @

_transform
╣╣ 
*=
╣╣ 
	Matrix4X4
╣╣ '
.
╣╣' (
CreateTranslation
╣╣( 9
(
╣╣9 :
parent
╣╣: @
.
╣╣@ A
	transform
╣╣A J
.
╣╣J K
position
╣╣K S
)
╣╣S T
;
╣╣T U 
_transformMatrices
╥╥ "
[
╥╥" #
$num
╥╥# $
]
╥╥$ %
=
╥╥& '

_transform
╥╥( 2
;
╥╥2 3 
TransformMatrixKHR
╦╦ ""
_fakeTransformMatrix
╦╦# 7
=
╦╦8 9
new
╦╦: = 
TransformMatrixKHR
╦╦> P
(
╦╦P Q
)
╦╦Q R
;
╦╦R S
Unsafe
╧╧ 
.
╧╧ 
	CopyBlock
╧╧  
(
╧╧  !"
_fakeTransformMatrix
╧╧! 5
.
╧╧5 6
Matrix
╧╧6 <
,
╧╧< =
Unsafe
╧╧> D
.
╧╧D E
	AsPointer
╧╧E N
(
╧╧N O
ref
╧╧O R 
_transformMatrices
╧╧S e
.
╧╧e f
ToArray
╧╧f m
(
╧╧m n
)
╧╧n o
[
╧╧o p
$num
╧╧p q
]
╧╧q r
)
╧╧r s
,
╧╧s t
$num
╧╧u w
)
╧╧w x
;
╧╧x y#
_accelerationInstance
╩╩ %
=
╩╩& '
new
╩╩( +.
 AccelerationStructureInstanceKHR
╩╩, L
(
╩╩L M
)
╩╩M N
{
╪╪ 
Flags
╫╫ 
=
╫╫ &
GeometryInstanceFlagsKHR
╫╫ 4
.
╫╫4 5-
TriangleFacingCullDisableBitKhr
╫╫5 T
,
╫╫T U,
AccelerationStructureReference
╬╬ 2
=
╬╬3 4
_BLAS
╬╬5 :
.
╬╬: ;
_deviceAddress
╬╬; I
,
╬╬I J
	Transform
©© 
=
©© "
_fakeTransformMatrix
©©  4
,
©©4 5!
InstanceCustomIndex
юю '
=
юю( )
$num
юю* +
,
юю+ ,
Mask
аа 
=
аа 
$num
аа 
,
аа  4
&InstanceShaderBindingTableRecordOffset
бб :
=
бб; <
$num
бб= >
}
цц 
;
цц "
AVulkanBufferHandler
ее $
.
ее$ %
CreateBuffer
ее% 1
(
ее1 2
(
фф 
ulong
фф 
)
фф 
sizeof
фф !
(
фф! ".
 AccelerationStructureInstanceKHR
фф" B
)
ффB C
,
ффC D
BufferUsageFlags
гг $
.
гг$ %$
ShaderDeviceAddressBit
гг% ;
|
гг< =
BufferUsageFlags
гг> N
.
ггN O;
-AccelerationStructureBuildInputReadOnlyBitKhr
ггO |
,
гг| }!
MemoryPropertyFlags
хх '
.
хх' (
HostVisibleBit
хх( 6
|
хх7 8!
MemoryPropertyFlags
хх9 L
.
ххL M
HostCoherentBit
ххM \
,
хх\ ]
ref
ии !
_fakeInstanceBuffer
ии +
,
ии+ ,
ref
ии- 0
_fakeInstanceDM
ии1 @
)
ии@ A
;
ииA B
void
йй 
*
йй 
_data
йй 
;
йй 
_vulkan
кк 
.
кк 
	MapMemory
кк !
(
кк! "
_logicalDevice
кк" 0
,
кк0 1
_fakeInstanceDM
кк2 A
,
ккA B
$num
ккC D
,
ккD E
(
ккF G
ulong
ккG L
)
ккL M
sizeof
ккM S
(
ккS T.
 AccelerationStructureInstanceKHR
ккT t
)
ккt u
,
ккu v
$num
ккw x
,
ккx y
&
ккz {
_dataкк{ ─
)кк─ │
;кк│ ┌
new
лл 
Span
лл 
<
лл .
 AccelerationStructureInstanceKHR
лл 9
>
лл9 :
(
лл: ;
_data
лл; @
,
лл@ A
$num
ллB C
)
ллC D
[
ллD E
$num
ллE F
]
ллF G
=
ллH I#
_accelerationInstance
ллJ _
;
лл_ `
_vulkan
мм 
.
мм 
UnmapMemory
мм #
(
мм# $
_logicalDevice
мм$ 2
,
мм2 3
_fakeInstanceDM
мм4 C
)
ммC D
;
ммD E
}
нн 
_addressInstance
пп 
.
пп 
DeviceAddress
пп *
=
пп+ ,
AVulkanHelper
пп- :
.
пп: ;
GetBufferAdress
пп; J
(
ппJ K
ref
ппK N!
_fakeInstanceBuffer
ппO b
)
ппb c
;
ппc d.
 AccelerationStructureGeometryKHR
рр ,
_asg
рр- 1
=
рр2 3
new
рр4 7.
 AccelerationStructureGeometryKHR
рр8 X
(
ррX Y
)
ррY Z
{
сс 
SType
тт 
=
тт 
StructureType
тт %
.
тт% &.
 AccelerationStructureGeometryKhr
тт& F
,
ттF G
GeometryType
уу 
=
уу 
GeometryTypeKHR
уу .
.
уу. /
InstancesKhr
уу/ ;
,
уу; <
Flags
жж 
=
жж 
GeometryFlagsKHR
жж (
.
жж( )
OpaqueBitKhr
жж) 5
,
жж5 6
Geometry
вв 
=
вв 
{
ьь 
	Instances
ыы 
=
ыы 
{
зз 
SType
шш 
=
шш 
StructureType
шш  -
.
шш- .;
-AccelerationStructureGeometryInstancesDataKhr
шш. [
,
шш[ \
ArrayOfPointers
ээ '
=
ээ( )
false
ээ* /
,
ээ/ 0
Data
щщ 
=
щщ 
_addressInstance
щщ /
}
чч 
}
ъъ 
}
ЮЮ 
;
ЮЮ 7
)AccelerationStructureBuildGeometryInfoKHR
АА 5
	_asbgInfo
АА6 ?
=
АА@ A
new
ААB E7
)AccelerationStructureBuildGeometryInfoKHR
ААF o
(
ААo p
)
ААp q
{
ББ 
SType
ЦЦ 
=
ЦЦ 
StructureType
ЦЦ %
.
ЦЦ% &7
)AccelerationStructureBuildGeometryInfoKhr
ЦЦ& O
,
ЦЦO P
Type
ДД 
=
ДД *
AccelerationStructureTypeKHR
ДД 3
.
ДД3 4
TopLevelKhr
ДД4 ?
,
ДД? @
Flags
ЕЕ 
=
ЕЕ 0
"BuildAccelerationStructureFlagsKHR
ЕЕ :
.
ЕЕ: ;#
PreferFastTraceBitKhr
ЕЕ; P
|
ЕЕQ R0
"BuildAccelerationStructureFlagsKHR
ЕЕS u
.
ЕЕu v 
AllowUpdateBitKhrЕЕv ┤
,ЕЕ┤ ┬
GeometryCount
ФФ 
=
ФФ 
$num
ФФ  !
,
ФФ! "
PGeometries
ГГ 
=
ГГ 
&
ГГ 
_asg
ГГ #
}
ХХ 
;
ХХ 
uint
ИИ 
primitive_count
ИИ  
=
ИИ! "
$num
ИИ# $
;
ИИ$ %4
&AccelerationStructureBuildSizesInfoKHR
ЙЙ 2
	_asbsInfo
ЙЙ3 <
=
ЙЙ= >
new
ЙЙ? B
(
ЙЙB C
)
ЙЙC D
{
КК 
SType
ЛЛ 
=
ЛЛ 
StructureType
ЛЛ %
.
ЛЛ% &4
&AccelerationStructureBuildSizesInfoKhr
ЛЛ& L
}
ММ 
;
ММ $
_accelerationStructure
НН "
.
НН" #0
"GetAccelerationStructureBuildSizes
НН# E
(
ННE F
_logicalDevice
ННF T
,
ННT U/
!AccelerationStructureBuildTypeKHR
ННV w
.
ННw x
	DeviceKhrННx │
,НН│ ┌
&НН┐ └
	_asbgInfoНН└ █
,НН█ ▌
primitive_countНН▐ ·
,НН· ÷
&НН═ ║
	_asbsInfoНН║ ╙
)НН╙ ╚
;НН╚ ╛/
!CreateAccelerationStructureBuffer
ПП -
(
ПП- .
ref
ПП. 1
_TLAS
ПП2 7
,
ПП7 8
ref
ПП9 <
	_asbsInfo
ПП= F
)
ППF G
;
ППG H0
"AccelerationStructureCreateInfoKHR
РР .
_asCreateInfo
РР/ <
=
РР= >
new
РР? B0
"AccelerationStructureCreateInfoKHR
РРC e
(
РРe f
)
РРf g
{
СС 
SType
ТТ 
=
ТТ 
StructureType
ТТ %
.
ТТ% &0
"AccelerationStructureCreateInfoKhr
ТТ& H
,
ТТH I
Buffer
УУ 
=
УУ 
_TLAS
УУ 
.
УУ 
_buffer
УУ &
,
УУ& '
Size
ЖЖ 
=
ЖЖ 
	_asbsInfo
ЖЖ  
.
ЖЖ  !'
AccelerationStructureSize
ЖЖ! :
,
ЖЖ: ;
Type
ВВ 
=
ВВ *
AccelerationStructureTypeKHR
ВВ 3
.
ВВ3 4
TopLevelKhr
ВВ4 ?
,
ВВ? @
}
ЬЬ 
;
ЬЬ 
Result
ЗЗ 
r
ЗЗ 
=
ЗЗ $
_accelerationStructure
ЗЗ -
.
ЗЗ- .)
CreateAccelerationStructure
ЗЗ. I
(
ЗЗI J
_logicalDevice
ЗЗJ X
,
ЗЗX Y
_asCreateInfo
ЗЗZ g
,
ЗЗg h
null
ЗЗi m
,
ЗЗm n
out
ЗЗo r
_TLAS
ЗЗs x
.
ЗЗx y
_handleЗЗy ─
)ЗЗ─ │
;ЗЗ│ ┌
if
ШШ 
(
ШШ 
r
ШШ 
!=
ШШ 
Result
ШШ 
.
ШШ 
Success
ШШ #
)
ШШ# $
{
ЭЭ 
throw
ЩЩ 
new
ЩЩ 
	Exception
ЩЩ #
(
ЩЩ# $
$str
ЩЩ$ G
)
ЩЩG H
;
ЩЩH I
}
ЧЧ &
PathtracingScratchBuffer
ЪЪ $
_scratchBuffer
ЪЪ% 3
=
ЪЪ4 5
new
ЪЪ6 9&
PathtracingScratchBuffer
ЪЪ: R
(
ЪЪR S
)
ЪЪS T
;
ЪЪT U!
CreateScratchBuffer
── 
(
──  
	_asbsInfo
──  )
.
──) *
BuildScratchSize
──* :
,
──: ;
ref
──< ?
_scratchBuffer
──@ N
)
──N O
;
──O P7
)AccelerationStructureBuildGeometryInfoKHR
┌┌ 5
_abgInfo
┌┌6 >
=
┌┌? @
new
┌┌A D7
)AccelerationStructureBuildGeometryInfoKHR
┌┌E n
(
┌┌n o
)
┌┌o p
{
┐┐ 
SType
└└ 
=
└└ 
StructureType
└└ %
.
└└% &7
)AccelerationStructureBuildGeometryInfoKhr
└└& O
,
└└O P
Type
┘┘ 
=
┘┘ *
AccelerationStructureTypeKHR
┘┘ 3
.
┘┘3 4
TopLevelKhr
┘┘4 ?
,
┘┘? @
Flags
├├ 
=
├├ 0
"BuildAccelerationStructureFlagsKHR
├├ :
.
├├: ;#
PreferFastTraceBitKhr
├├; P
|
├├Q R0
"BuildAccelerationStructureFlagsKHR
├├S u
.
├├u v 
AllowUpdateBitKhr├├v ┤
,├├┤ ┬
Mode
┤┤ 
=
┤┤ /
!BuildAccelerationStructureModeKHR
┤┤ 8
.
┤┤8 9
BuildKhr
┤┤9 A
,
┤┤A B&
DstAccelerationStructure
┬┬ (
=
┬┬) *
_TLAS
┬┬+ 0
.
┬┬0 1
_handle
┬┬1 8
,
┬┬8 9
GeometryCount
┴┴ 
=
┴┴ 
$num
┴┴  !
,
┴┴! "
PGeometries
┼┼ 
=
┼┼ 
&
┼┼ 
_asg
┼┼ #
,
┼┼# $
ScratchData
▀▀ 
=
▀▀ 
{
▄▄ 
DeviceAddress
██ !
=
██" #
_scratchBuffer
██$ 2
.
██2 3
_deviceAddress
██3 A
}
▌▌ 
}
▐▐ 
;
▐▐ 4
&AccelerationStructureBuildRangeInfoKHR
░░ 2
	_asbrInfo
░░3 <
=
░░= >
new
░░? B4
&AccelerationStructureBuildRangeInfoKHR
░░C i
(
░░i j
)
░░j k
{
▒▒ 
PrimitiveCount
▓▓ 
=
▓▓  
primitive_count
▓▓! 0
,
▓▓0 1
PrimitiveOffset
⌠⌠ 
=
⌠⌠  !
$num
⌠⌠" #
,
⌠⌠# $
FirstVertex
■■ 
=
■■ 
$num
■■ 
,
■■  
TransformOffset
∙∙ 
=
∙∙  !
$num
∙∙" #
}
√√ 
;
√√ 
var
≈≈ 
_buildRangeInfos
≈≈  
=
≈≈! "

stackalloc
≈≈# -
[
≈≈- .
]
≈≈. /
{
≤≤ 
	_asbrInfo
≥≥ 
}
   
;
   
CommandBuffer
°° 
_commandBuffer
°° (
=
°°) *"
AVulkanBufferHandler
°°+ ?
.
°°? @%
BeginSingleTimeCommands
°°@ W
(
°°W X
)
°°X Y
;
°°Y Z$
_accelerationStructure
²² "
.
²²" #,
CmdBuildAccelerationStructures
²²# A
(
²²A B
_commandBuffer
²²B P
,
²²P Q
$num
²²R S
,
²²S T
&
²²U V
_abgInfo
²²V ^
,
²²^ _
_buildRangeInfos
²²` p
)
²²p q
;
²²q r"
AVulkanBufferHandler
··  
.
··  !#
EndSingleTimeCommands
··! 6
(
··6 7
ref
··7 :
_commandBuffer
··; I
)
··I J
;
··J K7
)AccelerationStructureDeviceAddressInfoKHR
══ 5
_adaInfo
══6 >
=
══? @
new
══A D7
)AccelerationStructureDeviceAddressInfoKHR
══E n
(
══n o
)
══o p
{
║║ 
SType
╒╒ 
=
╒╒ 
StructureType
╒╒ %
.
╒╒% &7
)AccelerationStructureDeviceAddressInfoKhr
╒╒& O
,
╒╒O P#
AccelerationStructure
ёё %
=
ёё& '
_TLAS
ёё( -
.
ёё- .
_handle
ёё. 5
}
╓╓ 
;
╓╓ 
_TLAS
╔╔ 
.
╔╔ 
_deviceAddress
╔╔  
=
╔╔! "$
_accelerationStructure
╔╔# 9
.
╔╔9 :3
%GetAccelerationStructureDeviceAddress
╔╔: _
(
╔╔_ `
_logicalDevice
╔╔` n
,
╔╔n o
_adaInfo
╔╔p x
)
╔╔x y
;
╔╔y z!
DeleteScratchBuffer
╕╕ 
(
╕╕  
ref
╕╕  #
_scratchBuffer
╕╕$ 2
)
╕╕2 3
;
╕╕3 4
}
╖╖ 	
private
╘╘ 
void
╘╘ 

UpdateTLAS
╘╘ 
(
╘╘  
)
╘╘  !
{
╙╙ 	.
 AccelerationStructureGeometryKHR
╚╚ ,
_asg
╚╚- 1
=
╚╚2 3
new
╚╚4 7.
 AccelerationStructureGeometryKHR
╚╚8 X
(
╚╚X Y
)
╚╚Y Z
{
╛╛ 
SType
╜╜ 
=
╜╜ 
StructureType
╜╜ %
.
╜╜% &.
 AccelerationStructureGeometryKhr
╜╜& F
,
╜╜F G
GeometryType
╝╝ 
=
╝╝ 
GeometryTypeKHR
╝╝ .
.
╝╝. /
InstancesKhr
╝╝/ ;
,
╝╝; <
Flags
╞╞ 
=
╞╞ 
GeometryFlagsKHR
╞╞ (
.
╞╞( )
OpaqueBitKhr
╞╞) 5
,
╞╞5 6
Geometry
╟╟ 
=
╟╟ 
{
╠╠ 
	Instances
╡╡ 
=
╡╡ 
{
ЁЁ 
SType
╢╢ 
=
╢╢ 
StructureType
╢╢  -
.
╢╢- .;
-AccelerationStructureGeometryInstancesDataKhr
╢╢. [
,
╢╢[ \
ArrayOfPointers
╣╣ '
=
╣╣( )
false
╣╣* /
,
╣╣/ 0
Data
╤╤ 
=
╤╤ 
_addressInstance
╤╤ /
}
╥╥ 
}
╦╦ 
}
╧╧ 
;
╧╧ 7
)AccelerationStructureBuildGeometryInfoKHR
╨╨ 5
	_asbgInfo
╨╨6 ?
=
╨╨@ A
new
╨╨B E7
)AccelerationStructureBuildGeometryInfoKHR
╨╨F o
(
╨╨o p
)
╨╨p q
{
╩╩ 
SType
╪╪ 
=
╪╪ 
StructureType
╪╪ %
.
╪╪% &7
)AccelerationStructureBuildGeometryInfoKhr
╪╪& O
,
╪╪O P
Type
╫╫ 
=
╫╫ *
AccelerationStructureTypeKHR
╫╫ 3
.
╫╫3 4
TopLevelKhr
╫╫4 ?
,
╫╫? @
Flags
╬╬ 
=
╬╬ 0
"BuildAccelerationStructureFlagsKHR
╬╬ :
.
╬╬: ;#
PreferFastTraceBitKhr
╬╬; P
|
╬╬Q R0
"BuildAccelerationStructureFlagsKHR
╬╬S u
.
╬╬u v 
AllowUpdateBitKhr╬╬v ┤
,╬╬┤ ┬
GeometryCount
©© 
=
©© 
$num
©©  !
,
©©! "
PGeometries
юю 
=
юю 
&
юю 
_asg
юю #
}
аа 
;
аа 
uint
бб 
primitive_count
бб  
=
бб! "
$num
бб# $
;
бб$ %4
&AccelerationStructureBuildSizesInfoKHR
цц 2
	_asbsInfo
цц3 <
=
цц= >
new
цц? B
(
ццB C
)
ццC D
{
дд 
SType
ее 
=
ее 
StructureType
ее %
.
ее% &4
&AccelerationStructureBuildSizesInfoKhr
ее& L
}
фф 
;
фф $
_accelerationStructure
гг "
.
гг" #0
"GetAccelerationStructureBuildSizes
гг# E
(
ггE F
_logicalDevice
ггF T
,
ггT U/
!AccelerationStructureBuildTypeKHR
ггV w
.
ггw x
	DeviceKhrггx │
,гг│ ┌
&гг┐ └
	_asbgInfoгг└ █
,гг█ ▌
primitive_countгг▐ ·
,гг· ÷
&гг═ ║
	_asbsInfoгг║ ╙
)гг╙ ╚
;гг╚ ╛&
PathtracingScratchBuffer
хх $
_scratchBuffer
хх% 3
=
хх4 5
new
хх6 9&
PathtracingScratchBuffer
хх: R
(
ххR S
)
ххS T
;
ххT U!
CreateScratchBuffer
ии 
(
ии  
	_asbsInfo
ии  )
.
ии) *
BuildScratchSize
ии* :
,
ии: ;
ref
ии< ?
_scratchBuffer
ии@ N
)
ииN O
;
ииO P7
)AccelerationStructureBuildGeometryInfoKHR
кк 5
_abgInfo
кк6 >
=
кк? @
new
ккA D7
)AccelerationStructureBuildGeometryInfoKHR
ккE n
(
ккn o
)
ккo p
{
лл 
SType
мм 
=
мм 
StructureType
мм %
.
мм% &7
)AccelerationStructureBuildGeometryInfoKhr
мм& O
,
ммO P
Type
нн 
=
нн *
AccelerationStructureTypeKHR
нн 3
.
нн3 4
TopLevelKhr
нн4 ?
,
нн? @
Flags
оо 
=
оо 0
"BuildAccelerationStructureFlagsKHR
оо :
.
оо: ;#
PreferFastTraceBitKhr
оо; P
|
ооQ R0
"BuildAccelerationStructureFlagsKHR
ооS u
.
ооu v 
AllowUpdateBitKhrооv ┤
,оо┤ ┬
Mode
пп 
=
пп /
!BuildAccelerationStructureModeKHR
пп 8
.
пп8 9
	UpdateKhr
пп9 B
,
ппB C&
SrcAccelerationStructure
яя (
=
яя) *
_TLAS
яя+ 0
.
яя0 1
_handle
яя1 8
,
яя8 9&
DstAccelerationStructure
рр (
=
рр) *
_TLAS
рр+ 0
.
рр0 1
_handle
рр1 8
,
рр8 9
GeometryCount
сс 
=
сс 
$num
сс  !
,
сс! "
PGeometries
тт 
=
тт 
&
тт 
_asg
тт #
,
тт# $
ScratchData
уу 
=
уу 
{
жж 
DeviceAddress
вв !
=
вв" #
_scratchBuffer
вв$ 2
.
вв2 3
_deviceAddress
вв3 A
}
ьь 
}
ыы 
;
ыы 4
&AccelerationStructureBuildRangeInfoKHR
зз 2
	_asbrInfo
зз3 <
=
зз= >
new
зз? B4
&AccelerationStructureBuildRangeInfoKHR
ззC i
(
ззi j
)
ззj k
{
шш 
PrimitiveCount
ээ 
=
ээ  
primitive_count
ээ! 0
,
ээ0 1
PrimitiveOffset
щщ 
=
щщ  !
$num
щщ" #
,
щщ# $
FirstVertex
чч 
=
чч 
$num
чч 
,
чч  
TransformOffset
ъъ 
=
ъъ  !
$num
ъъ" #
}
ЮЮ 
;
ЮЮ 
var
АА 
_buildRangeInfos
АА  
=
АА! "

stackalloc
АА# -
[
АА- .
]
АА. /
{
ББ 
	_asbrInfo
ЦЦ 
}
ДД 
;
ДД 
CommandBuffer
ФФ 
_commandBuffer
ФФ (
=
ФФ) *"
AVulkanBufferHandler
ФФ+ ?
.
ФФ? @%
BeginSingleTimeCommands
ФФ@ W
(
ФФW X
)
ФФX Y
;
ФФY Z$
_accelerationStructure
ГГ "
.
ГГ" #,
CmdBuildAccelerationStructures
ГГ# A
(
ГГA B
_commandBuffer
ГГB P
,
ГГP Q
$num
ГГR S
,
ГГS T
&
ГГU V
_abgInfo
ГГV ^
,
ГГ^ _
_buildRangeInfos
ГГ` p
)
ГГp q
;
ГГq r"
AVulkanBufferHandler
ХХ  
.
ХХ  !#
EndSingleTimeCommands
ХХ! 6
(
ХХ6 7
ref
ХХ7 :
_commandBuffer
ХХ; I
)
ХХI J
;
ХХJ K!
DeleteScratchBuffer
ИИ 
(
ИИ  
ref
ИИ  #
_scratchBuffer
ИИ$ 2
)
ИИ2 3
;
ИИ3 4
}
ЙЙ 	
private
ЛЛ 
void
ЛЛ /
!CreateAccelerationStructureBuffer
ЛЛ 6
(
ЛЛ6 7
ref
ЛЛ7 : 
AccelerationStruct
ЛЛ; M
_accelStructure
ЛЛN ]
,
ЛЛ] ^
ref
ЛЛ_ b5
&AccelerationStructureBuildSizesInfoKHRЛЛc ┴
_buildSizeInfoЛЛ┼ ≤
)ЛЛ≤ ≥
{
ММ 	
BufferCreateInfo
НН 
_bufferCreateInfo
НН .
=
НН/ 0
new
НН1 4
BufferCreateInfo
НН5 E
(
ННE F
)
ННF G
{
ОО 
SType
ПП 
=
ПП 
StructureType
ПП %
.
ПП% &
BufferCreateInfo
ПП& 6
,
ПП6 7
Size
ЯЯ 
=
ЯЯ 
_buildSizeInfo
ЯЯ %
.
ЯЯ% &'
AccelerationStructureSize
ЯЯ& ?
,
ЯЯ? @
Usage
РР 
=
РР 
BufferUsageFlags
РР (
.
РР( )0
"AccelerationStructureStorageBitKhr
РР) K
|
РРL M
BufferUsageFlags
РРN ^
.
РР^ _$
ShaderDeviceAddressBit
РР_ u
,
РРu v
}
СС 
;
СС 
fixed
ТТ 
(
ТТ 
Buffer
ТТ 
*
ТТ 

_bufferPtr
ТТ %
=
ТТ& '
&
ТТ( )
_accelStructure
ТТ) 8
.
ТТ8 9
_buffer
ТТ9 @
)
ТТ@ A
{
УУ 
_vulkan
ЖЖ 
.
ЖЖ 
CreateBuffer
ЖЖ $
(
ЖЖ$ %
_logicalDevice
ЖЖ% 3
,
ЖЖ3 4
_bufferCreateInfo
ЖЖ5 F
,
ЖЖF G
null
ЖЖH L
,
ЖЖL M

_bufferPtr
ЖЖN X
)
ЖЖX Y
;
ЖЖY Z
}
ВВ  
MemoryRequirements
ЫЫ 
_memReqs
ЫЫ '
=
ЫЫ( )
new
ЫЫ* - 
MemoryRequirements
ЫЫ. @
(
ЫЫ@ A
)
ЫЫA B
;
ЫЫB C
_vulkan
ЗЗ 
.
ЗЗ )
GetBufferMemoryRequirements
ЗЗ /
(
ЗЗ/ 0
_logicalDevice
ЗЗ0 >
,
ЗЗ> ?
_accelStructure
ЗЗ@ O
.
ЗЗO P
_buffer
ЗЗP W
,
ЗЗW X
out
ЗЗY \
_memReqs
ЗЗ] e
)
ЗЗe f
;
ЗЗf g%
MemoryAllocateFlagsInfo
ШШ #
	_memFlags
ШШ$ -
=
ШШ. /
new
ШШ0 3%
MemoryAllocateFlagsInfo
ШШ4 K
(
ШШK L
)
ШШL M
{
ЭЭ 
SType
ЩЩ 
=
ЩЩ 
StructureType
ЩЩ %
.
ЩЩ% &%
MemoryAllocateFlagsInfo
ЩЩ& =
,
ЩЩ= >
Flags
ЧЧ 
=
ЧЧ !
MemoryAllocateFlags
ЧЧ +
.
ЧЧ+ ,

AddressBit
ЧЧ, 6
}
ЪЪ 
;
ЪЪ  
MemoryAllocateInfo
── 
_memAllocInfo
── ,
=
──- .
new
──/ 2 
MemoryAllocateInfo
──3 E
(
──E F
)
──F G
{
││ 
SType
┌┌ 
=
┌┌ 
StructureType
┌┌ %
.
┌┌% & 
MemoryAllocateInfo
┌┌& 8
,
┌┌8 9
PNext
┐┐ 
=
┐┐ 
&
┐┐ 
	_memFlags
┐┐ "
,
┐┐" #
AllocationSize
└└ 
=
└└  
_memReqs
└└! )
.
└└) *
Size
└└* .
,
└└. /
MemoryTypeIndex
┘┘ 
=
┘┘  !"
AVulkanBufferHandler
┘┘" 6
.
┘┘6 7
FindMemoryType
┘┘7 E
(
┘┘E F
_memReqs
┘┘F N
.
┘┘N O
MemoryTypeBits
┘┘O ]
,
┘┘] ^!
MemoryPropertyFlags
┘┘_ r
.
┘┘r s
DeviceLocalBit┘┘s │
)┘┘│ ┌
}
├├ 
;
├├ 
fixed
┬┬ 
(
┬┬ 
DeviceMemory
┬┬ 
*
┬┬  
_bufferMemoryPtr
┬┬! 1
=
┬┬2 3
&
┬┬4 5
_accelStructure
┬┬5 D
.
┬┬D E
_memory
┬┬E L
)
┬┬L M
{
┴┴ 
if
┼┼ 
(
┼┼ 
_vulkan
┼┼ 
.
┼┼ 
AllocateMemory
┼┼ *
(
┼┼* +
_logicalDevice
┼┼+ 9
,
┼┼9 :
_memAllocInfo
┼┼; H
,
┼┼H I
null
┼┼J N
,
┼┼N O
_bufferMemoryPtr
┼┼P `
)
┼┼` a
!=
┼┼b d
Result
┼┼e k
.
┼┼k l
Success
┼┼l s
)
┼┼s t
{
▀▀ 
throw
▄▄ 
new
▄▄ 
	Exception
▄▄ '
(
▄▄' (
$str
▄▄( C
)
▄▄C D
;
▄▄D E
}
██ 
}
▌▌ 
_vulkan
▐▐ 
.
▐▐ 
BindBufferMemory
▐▐ $
(
▐▐$ %
_logicalDevice
▐▐% 3
,
▐▐3 4
_accelStructure
▐▐5 D
.
▐▐D E
_buffer
▐▐E L
,
▐▐L M
_accelStructure
▐▐N ]
.
▐▐] ^
_memory
▐▐^ e
,
▐▐e f
$num
▐▐g h
)
▐▐h i
;
▐▐i j
}
░░ 	
private
▓▓ 
void
▓▓ !
DeleteScratchBuffer
▓▓ (
(
▓▓( )
ref
▓▓) ,&
PathtracingScratchBuffer
▓▓- E
_sBuffer
▓▓F N
)
▓▓N O
{
⌠⌠ 	
if
■■ 
(
■■ 
_sBuffer
■■ 
.
■■ 
_memory
■■  
.
■■  !
Handle
■■! '
!=
■■( *
$num
■■+ ,
)
■■, -
{
∙∙ 
_vulkan
√√ 
.
√√ 

FreeMemory
√√ "
(
√√" #
_logicalDevice
√√# 1
,
√√1 2
_sBuffer
√√3 ;
.
√√; <
_memory
√√< C
,
√√C D
null
√√E I
)
√√I J
;
√√J K
}
≈≈ 
if
≤≤ 
(
≤≤ 
_sBuffer
≤≤ 
.
≤≤ 
_buffer
≤≤  
.
≤≤  !
Handle
≤≤! '
!=
≤≤( *
$num
≤≤+ ,
)
≤≤, -
{
≥≥ 
_vulkan
   
.
   
DestroyBuffer
   %
(
  % &
_logicalDevice
  & 4
,
  4 5
_sBuffer
  6 >
.
  > ?
_buffer
  ? F
,
  F G
null
  H L
)
  L M
;
  M N
}
⌡⌡ 
}
°° 	
private
·· 
void
·· !
CreateScratchBuffer
·· (
(
··( )
ulong
··) .
size
··/ 3
,
··3 4
ref
··5 8&
PathtracingScratchBuffer
··9 Q
_b
··R T
)
··T U
{
÷÷ 	
BufferCreateInfo
══ 
_bufferCreateInfo
══ .
=
══/ 0
new
══1 4
(
══4 5
)
══5 6
{
║║ 
SType
╒╒ 
=
╒╒ 
StructureType
╒╒ %
.
╒╒% &
BufferCreateInfo
╒╒& 6
,
╒╒6 7
Size
ёё 
=
ёё 
size
ёё 
,
ёё 
Usage
╓╓ 
=
╓╓ 
BufferUsageFlags
╓╓ (
.
╓╓( )
StorageBufferBit
╓╓) 9
|
╓╓: ;
BufferUsageFlags
╓╓< L
.
╓╓L M$
ShaderDeviceAddressBit
╓╓M c
}
╔╔ 
;
╔╔ 
fixed
╖╖ 
(
╖╖ 
Buffer
╖╖ 
*
╖╖ 

_bufferPtr
╖╖ %
=
╖╖& '
&
╖╖( )
_b
╖╖) +
.
╖╖+ ,
_buffer
╖╖, 3
)
╖╖3 4
{
╗╗ 
_vulkan
╘╘ 
.
╘╘ 
CreateBuffer
╘╘ $
(
╘╘$ %
_logicalDevice
╘╘% 3
,
╘╘3 4
_bufferCreateInfo
╘╘5 F
,
╘╘F G
null
╘╘H L
,
╘╘L M

_bufferPtr
╘╘N X
)
╘╘X Y
;
╘╘Y Z
}
╙╙  
MemoryRequirements
╚╚ 
_memReqs
╚╚ '
=
╚╚( )
new
╚╚* - 
MemoryRequirements
╚╚. @
(
╚╚@ A
)
╚╚A B
;
╚╚B C
_vulkan
╛╛ 
.
╛╛ )
GetBufferMemoryRequirements
╛╛ /
(
╛╛/ 0
_logicalDevice
╛╛0 >
,
╛╛> ?
_b
╛╛@ B
.
╛╛B C
_buffer
╛╛C J
,
╛╛J K
out
╛╛L O
_memReqs
╛╛P X
)
╛╛X Y
;
╛╛Y Z%
MemoryAllocateFlagsInfo
╜╜ #
	_memFlags
╜╜$ -
=
╜╜. /
new
╜╜0 3%
MemoryAllocateFlagsInfo
╜╜4 K
(
╜╜K L
)
╜╜L M
{
╝╝ 
SType
╞╞ 
=
╞╞ 
StructureType
╞╞ %
.
╞╞% &%
MemoryAllocateFlagsInfo
╞╞& =
,
╞╞= >
Flags
╟╟ 
=
╟╟ !
MemoryAllocateFlags
╟╟ +
.
╟╟+ ,

AddressBit
╟╟, 6
}
╠╠ 
;
╠╠  
MemoryAllocateInfo
╡╡ 
_memAllocInfo
╡╡ ,
=
╡╡- .
new
╡╡/ 2 
MemoryAllocateInfo
╡╡3 E
(
╡╡E F
)
╡╡F G
{
ЁЁ 
SType
╢╢ 
=
╢╢ 
StructureType
╢╢ %
.
╢╢% & 
MemoryAllocateInfo
╢╢& 8
,
╢╢8 9
PNext
╣╣ 
=
╣╣ 
&
╣╣ 
	_memFlags
╣╣ "
,
╣╣" #
AllocationSize
╤╤ 
=
╤╤  
_memReqs
╤╤! )
.
╤╤) *
Size
╤╤* .
,
╤╤. /
MemoryTypeIndex
╥╥ 
=
╥╥  !"
AVulkanBufferHandler
╥╥" 6
.
╥╥6 7
FindMemoryType
╥╥7 E
(
╥╥E F
_memReqs
╥╥F N
.
╥╥N O
MemoryTypeBits
╥╥O ]
,
╥╥] ^!
MemoryPropertyFlags
╥╥_ r
.
╥╥r s
DeviceLocalBit╥╥s │
)╥╥│ ┌
}
╦╦ 
;
╦╦ 
fixed
╨╨ 
(
╨╨ 
DeviceMemory
╨╨ 
*
╨╨  
_bufferMemoryPtr
╨╨! 1
=
╨╨2 3
&
╨╨4 5
_b
╨╨5 7
.
╨╨7 8
_memory
╨╨8 ?
)
╨╨? @
{
╩╩ 
_vulkan
╪╪ 
.
╪╪ 
AllocateMemory
╪╪ &
(
╪╪& '
_logicalDevice
╪╪' 5
,
╪╪5 6
_memAllocInfo
╪╪7 D
,
╪╪D E
null
╪╪F J
,
╪╪J K
_bufferMemoryPtr
╪╪L \
)
╪╪\ ]
;
╪╪] ^
}
╫╫ 
_vulkan
╬╬ 
.
╬╬ 
BindBufferMemory
╬╬ $
(
╬╬$ %
_logicalDevice
╬╬% 3
,
╬╬3 4
_b
╬╬5 7
.
╬╬7 8
_buffer
╬╬8 ?
,
╬╬? @
_b
╬╬A C
.
╬╬C D
_memory
╬╬D K
,
╬╬K L
$num
╬╬M N
)
╬╬N O
;
╬╬O P%
BufferDeviceAddressInfo
юю #&
_driverBufferAddressInfo
юю$ <
=
юю= >
new
юю? B%
BufferDeviceAddressInfo
ююC Z
(
ююZ [
)
юю[ \
{
аа 
SType
бб 
=
бб 
StructureType
бб %
.
бб% &(
BufferDeviceAddressInfoKhr
бб& @
,
бб@ A
Buffer
цц 
=
цц 
_b
цц 
.
цц 
_buffer
цц #
,
цц# $
}
дд 
;
дд 
_b
ее 
.
ее 
_deviceAddress
ее 
=
ее 
_vulkan
ее  '
.
ее' ($
GetBufferDeviceAddress
ее( >
(
ее> ?
_logicalDevice
ее? M
,
ееM N
&
ееO P&
_driverBufferAddressInfo
ееP h
)
ееh i
;
ееi j
}
фф 	
internal
хх 
override
хх 
void
хх  
FreeDescriptorSets
хх 1
(
хх1 2
)
хх2 3
{
ии 	
base
йй 
.
йй  
FreeDescriptorSets
йй #
(
йй# $
)
йй$ %
;
йй% &
if
кк 
(
кк 
_descriptorSets
кк 
!=
кк  "
null
кк# '
)
кк' (
VulkanRenderer
лл 
.
лл 
_vulkan
лл &
.
лл& ' 
FreeDescriptorSets
лл' 9
(
лл9 :
VulkanRenderer
лл: H
.
ллH I
_logicalDevice
ллI W
,
ллW X

Rasterizer
ллY c
.
ллc d
_descriptorPool
ллd s
,
ллs t
(
ллu v
uint
ллv z
)
ллz {
_descriptorSetsлл{ ┼
.лл┼ ▀
Lengthлл▀ ▒
,лл▒ ▓
_descriptorSetsлл⌠ ╒
)лл╒ ё
;ллё ╓
}
мм 	
internal
оо 
override
оо 
void
оо (
ReinstantiateDesriptorSets
оо 9
(
оо9 :
)
оо: ;
{
пп 	
base
яя 
.
яя (
ReinstantiateDesriptorSets
яя +
(
яя+ ,
)
яя, -
;
яя- .!
CreateDescriptorSet
рр 
(
рр  
)
рр  !
;
рр! "
}
сс 	
internal
уу 
override
уу 
void
уу !
CreateDescriptorSet
уу 2
(
уу2 3
)
уу3 4
{
жж 	!
DescriptorSetLayout
вв 
[
вв  
]
вв  !
_layouts
вв" *
=
вв+ ,
new
вв- 0!
DescriptorSetLayout
вв1 D
[
ввD E
_swapimageCount
ввE T
]
ввT U
;
ввU V
Array
ьь 
.
ьь 
Fill
ьь 
(
ьь 
_layouts
ьь 
,
ьь  "
_descriptorSetLayout
ьь! 5
)
ьь5 6
;
ьь6 7
fixed
зз 
(
зз !
DescriptorSetLayout
зз &
*
зз& '
_layoutsPtr
зз( 3
=
зз4 5
_layouts
зз6 >
)
зз> ?
{
шш '
DescriptorSetAllocateInfo
ээ )
_allocateInfo
ээ* 7
=
ээ8 9
new
ээ: ='
DescriptorSetAllocateInfo
ээ> W
(
ээW X
)
ээX Y
{
щщ 
SType
чч 
=
чч 
StructureType
чч )
.
чч) *'
DescriptorSetAllocateInfo
чч* C
,
ччC D
DescriptorPool
ъъ "
=
ъъ# $
_descriptorPool
ъъ% 4
,
ъъ4 5 
DescriptorSetCount
ЮЮ &
=
ЮЮ' (
(
ЮЮ) *
uint
ЮЮ* .
)
ЮЮ. /
_swapimageCount
ЮЮ/ >
,
ЮЮ> ?
PSetLayouts
АА 
=
АА  !
_layoutsPtr
АА" -
}
ББ 
;
ББ 
_descriptorSets
ДД 
=
ДД  !
new
ДД" %
DescriptorSet
ДД& 3
[
ДД3 4
_swapimageCount
ДД4 C
]
ДДC D
;
ДДD E
fixed
ЕЕ 
(
ЕЕ 
DescriptorSet
ЕЕ $
*
ЕЕ$ % 
_descriptorSetsPtr
ЕЕ& 8
=
ЕЕ9 :
_descriptorSets
ЕЕ; J
)
ЕЕJ K
{
ФФ 
Result
ГГ 
r
ГГ 
=
ГГ 
_vulkan
ГГ &
.
ГГ& '$
AllocateDescriptorSets
ГГ' =
(
ГГ= >
_logicalDevice
ГГ> L
,
ГГL M
_allocateInfo
ГГN [
,
ГГ[ \ 
_descriptorSetsPtr
ГГ] o
)
ГГo p
;
ГГp q
if
ХХ 
(
ХХ 
r
ХХ 
!=
ХХ 
Result
ХХ #
.
ХХ# $
Success
ХХ$ +
)
ХХ+ ,
{
ИИ 
throw
ЙЙ 
new
ЙЙ !
	Exception
ЙЙ" +
(
ЙЙ+ ,
$str
ЙЙ, a
+
ЙЙb c
r
ЙЙd e
)
ЙЙe f
;
ЙЙf g
}
КК 
}
ЛЛ 
}
ММ 
for
НН 
(
НН 
int
НН 
i
НН 
=
НН 
$num
НН 
;
НН 
i
НН 
<
НН 
_swapimageCount
НН  /
;
НН/ 0
i
НН1 2
++
НН2 4
)
НН4 5
{
ОО 
fixed
ПП 
(
ПП &
AccelerationStructureKHR
ПП /
*
ПП/ 0
_accelStrPtr
ПП1 =
=
ПП> ?
&
ПП@ A
_TLAS
ППA F
.
ППF G
_handle
ППG N
)
ППN O
{
ЯЯ 8
*WriteDescriptorSetAccelerationStructureKHR
РР >
_dasinfo
РР? G
=
РРH I
new
РРJ M
(
РРM N
)
РРN O
{
СС 
SType
ТТ 
=
ТТ 
StructureType
ТТ  -
.
ТТ- .8
*WriteDescriptorSetAccelerationStructureKhr
ТТ. X
,
ТТX Y(
AccelerationStructureCount
УУ 2
=
УУ3 4
$num
УУ5 6
,
УУ6 7%
PAccelerationStructures
ЖЖ /
=
ЖЖ0 1
_accelStrPtr
ЖЖ2 >
,
ЖЖ> ?
}
ВВ 
;
ВВ !
DescriptorImageInfo
ЬЬ '
_dImageInfo
ЬЬ( 3
=
ЬЬ4 5
new
ЬЬ6 9
(
ЬЬ9 :
)
ЬЬ: ;
{
ЫЫ 
ImageLayout
ЗЗ #
=
ЗЗ$ %
ImageLayout
ЗЗ& 1
.
ЗЗ1 2
General
ЗЗ2 9
,
ЗЗ9 :
	ImageView
ШШ !
=
ШШ" #
_storageImageView
ШШ$ 5
[
ШШ5 6
i
ШШ6 7
]
ШШ7 8
}
ЭЭ 
;
ЭЭ "
DescriptorBufferInfo
ЩЩ (!
_bufferInfoMatrices
ЩЩ) <
=
ЩЩ= >
new
ЩЩ? B"
DescriptorBufferInfo
ЩЩC W
(
ЩЩW X
)
ЩЩX Y
{
ЧЧ 
Buffer
ЪЪ 
=
ЪЪ  
_camera
ЪЪ! (
.
ЪЪ( )
_cameraBuffer
ЪЪ) 6
[
ЪЪ6 7
i
ЪЪ7 8
]
ЪЪ8 9
,
ЪЪ9 :
Offset
── 
=
──  
$num
──! "
,
──" #
Range
││ 
=
││ 
(
││  !
ulong
││! &
)
││& '
Unsafe
││' -
.
││- .
SizeOf
││. 4
<
││4 5
UBO
││5 8
>
││8 9
(
││9 :
)
││: ;
}
┌┌ 
;
┌┌ 
var
└└ "
_writeDescriptorSets
└└ ,
=
└└- .
new
└└/ 2 
WriteDescriptorSet
└└3 E
[
└└E F
]
└└F G
{
┘┘ 
new
├├  
WriteDescriptorSet
├├ .
{
┤┤ 
SType
┬┬ !
=
┬┬" #
StructureType
┬┬$ 1
.
┬┬1 2 
WriteDescriptorSet
┬┬2 D
,
┬┬D E
PNext
┴┴ !
=
┴┴" #
&
┴┴$ %
_dasinfo
┴┴% -
,
┴┴- .
DstSet
┼┼ "
=
┼┼# $
_descriptorSets
┼┼% 4
[
┼┼4 5
i
┼┼5 6
]
┼┼6 7
,
┼┼7 8

DstBinding
▀▀ &
=
▀▀' (
$num
▀▀) *
,
▀▀* +
DstArrayElement
▄▄ +
=
▄▄, -
$num
▄▄. /
,
▄▄/ 0
DescriptorCount
██ +
=
██, -
$num
██. /
,
██/ 0
DescriptorType
▌▌ *
=
▌▌+ ,
DescriptorType
▌▌- ;
.
▌▌; <&
AccelerationStructureKhr
▌▌< T
}
▐▐ 
,
▐▐ 
new
░░  
WriteDescriptorSet
░░ .
{
▒▒ 
SType
▓▓ !
=
▓▓" #
StructureType
▓▓$ 1
.
▓▓1 2 
WriteDescriptorSet
▓▓2 D
,
▓▓D E
DstSet
⌠⌠ "
=
⌠⌠# $
_descriptorSets
⌠⌠% 4
[
⌠⌠4 5
i
⌠⌠5 6
]
⌠⌠6 7
,
⌠⌠7 8

DstBinding
■■ &
=
■■' (
$num
■■) *
,
■■* +
DescriptorCount
∙∙ +
=
∙∙, -
$num
∙∙. /
,
∙∙/ 0
DstArrayElement
√√ +
=
√√, -
$num
√√. /
,
√√/ 0
DescriptorType
≈≈ *
=
≈≈+ ,
DescriptorType
≈≈- ;
.
≈≈; <
StorageImage
≈≈< H
,
≈≈H I

PImageInfo
≤≤ &
=
≤≤' (
&
≤≤) *
_dImageInfo
≤≤* 5
}
≥≥ 
,
≥≥ 
new
    
WriteDescriptorSet
   .
{
⌡⌡ 
SType
°° !
=
°°" #
StructureType
°°$ 1
.
°°1 2 
WriteDescriptorSet
°°2 D
,
°°D E
DstSet
²² "
=
²²# $
_descriptorSets
²²% 4
[
²²4 5
i
²²5 6
]
²²6 7
,
²²7 8

DstBinding
·· &
=
··' (
$num
··) *
,
··* +
DescriptorCount
÷÷ +
=
÷÷, -
$num
÷÷. /
,
÷÷/ 0
DstArrayElement
══ +
=
══, -
$num
══. /
,
══/ 0
DescriptorType
║║ *
=
║║+ ,
DescriptorType
║║- ;
.
║║; <
UniformBuffer
║║< I
,
║║I J
PBufferInfo
╒╒ '
=
╒╒( )
&
╒╒* +!
_bufferInfoMatrices
╒╒+ >
}
ёё 
}
╓╓ 
;
╓╓ 
fixed
╔╔ 
(
╔╔  
WriteDescriptorSet
╔╔ -
*
╔╔- .
_descPtr
╔╔/ 7
=
╔╔8 9"
_writeDescriptorSets
╔╔: N
)
╔╔N O
{
╕╕ 
_vulkan
╖╖ 
!
╖╖  
.
╖╖  !"
UpdateDescriptorSets
╖╖! 5
(
╖╖5 6
_logicalDevice
╖╖6 D
,
╖╖D E
(
╖╖F G
uint
╖╖G K
)
╖╖K L"
_writeDescriptorSets
╖╖L `
.
╖╖` a
Length
╖╖a g
,
╖╖g h
_descPtr
╖╖i q
,
╖╖q r
$num
╖╖s t
,
╖╖t u
null
╖╖v z
)
╖╖z {
;
╖╖{ |
}
╗╗ 
}
╘╘ 
}
╙╙ 
}
╚╚ 	
internal
╜╜ 
override
╜╜ 
void
╜╜ 
MakeInstanced
╜╜ ,
(
╜╜, -
ref
╜╜- 0
List
╜╜1 5
<
╜╜5 6
	Matrix4X4
╜╜6 ?
<
╜╜? @
float
╜╜@ E
>
╜╜E F
>
╜╜F G
	_matrices
╜╜H Q
)
╜╜Q R
{
╝╝ 	
base
╞╞ 
.
╞╞ 
MakeInstanced
╞╞ 
(
╞╞ 
ref
╞╞ "
	_matrices
╞╞# ,
)
╞╞, -
;
╞╞- .
}
╠╠ 	
internal
ЁЁ 
override
ЁЁ 
void
ЁЁ 
SingletonMatrix
ЁЁ .
(
ЁЁ. /
)
ЁЁ/ 0
{
╢╢ 	
base
╣╣ 
.
╣╣ 
SingletonMatrix
╣╣  
(
╣╣  !
)
╣╣! "
;
╣╣" #"
AVulkanBufferHandler
╤╤  
.
╤╤  !#
CreateTransformBuffer
╤╤! 6
(
╤╤6 7
ref
╤╤7 : 
_transformMatrices
╤╤; M
,
╤╤M N
ref
╤╤O R
_transformsBuffer
╤╤S d
,
╤╤d e
ref
╤╤f i&
_trasnformsBufferMemory╤╤j │
,╤╤│ ┌$
_aditionalUsageFlags╤╤┐ ≈
)╤╤≈ ≤
;╤╤≤ ≥
}
╥╥ 	
internal
╧╧ 
override
╧╧ 
void
╧╧ 
UpdateMatrices
╧╧ -
(
╧╧- .
)
╧╧. /
{
╨╨ 	

Quaternion
╩╩ 
<
╩╩ 
float
╩╩ 
>
╩╩ 
q
╩╩ 
=
╩╩  !

Quaternion
╩╩" ,
<
╩╩, -
float
╩╩- 2
>
╩╩2 3
.
╩╩3 4$
CreateFromYawPitchRoll
╩╩4 J
(
╩╩J K
$num
╩╩K N
*
╩╩O P
MathF
╩╩Q V
.
╩╩V W
PI
╩╩W Y
/
╩╩Z [
$num
╩╩\ `
,
╩╩` a
$num
╩╩b c
,
╩╩c d
$num
╩╩e f
)
╩╩f g
;
╩╩g h
	Matrix4X4
╪╪ 
<
╪╪ 
float
╪╪ 
>
╪╪ 

_transform
╪╪ '
=
╪╪( )
	Matrix4X4
╪╪* 3
<
╪╪3 4
float
╪╪4 9
>
╪╪9 :
.
╪╪: ;
Identity
╪╪; C
;
╪╪C D

_transform
╫╫ 
*=
╫╫ 
	Matrix4X4
╫╫ #
.
╫╫# $
CreateScale
╫╫$ /
(
╫╫/ 0
parent
╫╫0 6
.
╫╫6 7
	transform
╫╫7 @
.
╫╫@ A
scale
╫╫A F
)
╫╫F G
;
╫╫G H

_transform
╬╬ 
*=
╬╬ 
	Matrix4X4
╬╬ #
.
╬╬# $"
CreateFromQuaternion
╬╬$ 8
(
╬╬8 9
q
╬╬9 :
)
╬╬: ;
;
╬╬; <

_transform
©© 
*=
©© 
	Matrix4X4
©© #
.
©©# $
CreateTranslation
©©$ 5
(
©©5 6
parent
©©6 <
.
©©< =
	transform
©©= F
.
©©F G
position
©©G O
)
©©O P
;
©©P Q 
_transformMatrices
аа 
[
аа 
$num
аа  
]
аа  !
=
аа" #

_transform
аа$ .
;
аа. / 
TransformMatrixKHR
бб "
_fakeTransformMatrix
бб 3
=
бб4 5
new
бб6 9 
TransformMatrixKHR
бб: L
(
ббL M
)
ббM N
;
ббN O
Unsafe
цц 
.
цц 
	CopyBlock
цц 
(
цц "
_fakeTransformMatrix
цц 1
.
цц1 2
Matrix
цц2 8
,
цц8 9
Unsafe
цц: @
.
цц@ A
	AsPointer
ццA J
(
ццJ K
ref
ццK N

_transform
ццO Y
)
ццY Z
,
ццZ [
$num
цц\ ^
)
цц^ _
;
цц_ `#
_accelerationInstance
дд !
.
дд! "
	Transform
дд" +
=
дд, -"
_fakeTransformMatrix
дд. B
;
ддB C
void
фф 
*
фф 
_data
фф 
;
фф 
_vulkan
гг 
.
гг 
	MapMemory
гг 
(
гг 
_logicalDevice
гг ,
,
гг, -
_fakeInstanceDM
гг. =
,
гг= >
$num
гг? @
,
гг@ A
(
ггB C
ulong
ггC H
)
ггH I
sizeof
ггI O
(
ггO P.
 AccelerationStructureInstanceKHR
ггP p
)
ггp q
,
ггq r
$num
ггs t
,
ггt u
&
ггv w
_data
ггw |
)
гг| }
;
гг} ~
new
хх 
Span
хх 
<
хх .
 AccelerationStructureInstanceKHR
хх 5
>
хх5 6
(
хх6 7
_data
хх7 <
,
хх< =
$num
хх> ?
)
хх? @
[
хх@ A
$num
ххA B
]
ххB C
=
ххD E#
_accelerationInstance
ххF [
;
хх[ \
_vulkan
ии 
.
ии 
UnmapMemory
ии 
(
ии  
_logicalDevice
ии  .
,
ии. /
_fakeInstanceDM
ии0 ?
)
ии? @
;
ии@ A

UpdateTLAS
кк 
(
кк 
)
кк 
;
кк 
parent
лл 
.
лл 
	transform
лл 
.
лл 
_changed
лл %
=
лл& '
false
лл( -
;
лл- .
}
мм 	
internal
оо 
override
оо 
void
оо !
EnqueueDrawCommands
оо 2
(
оо2 3
ulong
оо3 8
[
оо8 9
]
оо9 :
_offset
оо; B
,
ооB C
int
ооD G

_loopIndex
ооH R
,
ооR S
ref
ооT W
CommandBuffer
ооX e
_commandBuffer
ооf t
)
ооt u
{
пп 	
if
яя 
(
яя 
_render
яя 
)
яя 
{
рр 
_vulkan
сс 
.
сс #
CmdBindDescriptorSets
сс -
(
сс- .
_commandBuffer
сс. <
,
сс< =
PipelineBindPoint
сс> O
.
ссO P
RayTracingKhr
ссP ]
,
сс] ^
_pipelineLayout
сс_ n
,
ссn o
$num
ссp q
,
ссq r
$num
ссs t
,
ссt u
_descriptorSetsссv ┘
[сс┘ ├

_loopIndexсс├ ░
]сс░ ▒
,сс▒ ▓
$numсс⌠ ■
,сс■ ∙
nullсс√  
)сс  ⌡
;сс⌡ °
}
тт 
}
уу 	
}
жж 
}вв лВ
pH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\MeshSubComponents\MCRaster.cs
	namespace		 	
ArctisAurora		
 
.		 

EngineWork		 !
.		! "
Renderer		" *
.		* +
MeshSubComponents		+ <
{

 
internal 
unsafe 
class 
MCRaster "
:# $
MeshComponent% 2
{ 
internal 
DescriptorSet 
[ 
]  !
_descriptorSetsShadow! 6
;6 7
internal 
Silk 
. 
NET 
. 
Vulkan  
.  !
Image! &
_textureImage' 4
;4 5
internal 
	ImageView 
_textureImageView ,
;, -
internal 
DeviceMemory  
_textureBufferMemory 2
;2 3
internal 
MCRaster 
( 
) 
{ 	 
AVulkanBufferHandler  
.  !
CreateVertexBuffer! 3
(3 4
ref4 7
_mesh8 =
.= >
	_vertices> G
,G H
refI L
_vertexBufferM Z
,Z [
ref\ _
_vertexBufferMemory` s
,s t!
_aditionalUsageFlags	u ┴
)
┴ ┼
;
┼ ▀ 
AVulkanBufferHandler  
.  !
CreateIndexBuffer! 2
(2 3
ref3 6
_mesh7 <
.< =
_indices= E
,E F
refG J
_indexBufferK W
,W X
refY \
_indexBufferMemory] o
,o p!
_aditionalUsageFlags	q ┘
)
┘ ├
;
├ ┤ 
AVulkanBufferHandler  
.  !
CreateTextureBuffer! 4
(4 5
ref5 8
_textureImage9 F
,F G
refH K 
_textureBufferMemoryL `
)` a
;a b 
AVulkanBufferHandler  
.  !
CreateImageView! 0
(0 1
ref1 4
_textureImage5 B
,B C
refD G
_textureImageViewH Y
)Y Z
;Z [
} 	
public 
override 
void 
OnStart $
($ %
)% &
{ 	
base 
. 
OnStart 
( 
) 
; 
CreateDescriptorSet 
(  
)  !
;! "
}   	
internal"" 
override"" 
void"" 
FreeDescriptorSets"" 1
(""1 2
)""2 3
{## 	
base$$ 
.$$ 
FreeDescriptorSets$$ #
($$# $
)$$$ %
;$$% &
if%% 
(%% 
_descriptorSets%% 
!=%%  "
null%%# '
)%%' (
VulkanRenderer&& 
.&& 
_vulkan&& &
.&&& '
FreeDescriptorSets&&' 9
(&&9 :
VulkanRenderer&&: H
.&&H I
_logicalDevice&&I W
,&&W X

Rasterizer&&Y c
.&&c d
_descriptorPool&&d s
,&&s t
(&&u v
uint&&v z
)&&z {
_descriptorSets	&&{ ┼
.
&&┼ ▀
Length
&&▀ ▒
,
&&▒ ▓
_descriptorSets
&&⌠ ╒
)
&&╒ ё
;
&&ё ╓
if'' 
('' !
_descriptorSetsShadow'' %
!=''& (
null'') -
)''- .
VulkanRenderer(( 
.(( 
_vulkan(( &
.((& '
FreeDescriptorSets((' 9
(((9 :
VulkanRenderer((: H
.((H I
_logicalDevice((I W
,((W X

Rasterizer((Y c
.((c d!
_descriptorPoolShadow((d y
,((y z
((({ |
uint	((| ─
)
((─ │#
_descriptorSetsShadow
((│ √
.
((√ ≈
Length
((≈ ²
,
((² ·#
_descriptorSetsShadow
((÷ ╢
)
((╢ ╣
;
((╣ ╤
})) 	
internal++ 
override++ 
void++ &
ReinstantiateDesriptorSets++ 9
(++9 :
)++: ;
{,, 	
base-- 
.-- &
ReinstantiateDesriptorSets-- +
(--+ ,
)--, -
;--- .
CreateDescriptorSet.. 
(..  
)..  !
;..! "
}// 	
internal11 
override11 
void11 
CreateDescriptorSet11 2
(112 3
)113 4
{22 	%
CreateRasterDescriptorSet33 %
(33% &
)33& '
;33' (%
CreateShadowDescriptorSet44 %
(44% &
)44& '
;44' (
}55 	
private77 
void77 %
CreateRasterDescriptorSet77 .
(77. /
)77/ 0
{88 	
DescriptorSetLayout99 
[99  
]99  !
_layouts99" *
=99+ ,
new99- 0
DescriptorSetLayout991 D
[99D E
VulkanRenderer99E S
.99S T
_swapimageCount99T c
]99c d
;99d e
Array:: 
.:: 
Fill:: 
(:: 
_layouts:: 
,::  

Rasterizer::! +
.::+ , 
_descriptorSetLayout::, @
)::@ A
;::A B
fixed<< 
(<< 
DescriptorSetLayout<< &
*<<& '
_layoutsPtr<<( 3
=<<4 5
_layouts<<6 >
)<<> ?
{== %
DescriptorSetAllocateInfo>> )
_allocateInfo>>* 7
=>>8 9
new>>: =%
DescriptorSetAllocateInfo>>> W
(>>W X
)>>X Y
{?? 
SType@@ 
=@@ 
StructureType@@ )
.@@) *%
DescriptorSetAllocateInfo@@* C
,@@C D
DescriptorPoolAA "
=AA# $
VulkanRendererAA% 3
.AA3 4
_descriptorPoolAA4 C
,AAC D
DescriptorSetCountBB &
=BB' (
(BB) *
uintBB* .
)BB. /
VulkanRendererBB/ =
.BB= >
_swapimageCountBB> M
,BBM N
PSetLayoutsCC 
=CC  !
_layoutsPtrCC" -
}DD 
;DD 
_descriptorSetsFF 
=FF  !
newFF" %
DescriptorSetFF& 3
[FF3 4
VulkanRendererFF4 B
.FFB C
_swapimageCountFFC R
]FFR S
;FFS T
fixedGG 
(GG 
DescriptorSetGG $
*GG$ %
_descriptorSetsPtrGG& 8
=GG9 :
_descriptorSetsGG; J
)GGJ K
{HH 
ResultII 
rII 
=II 
VulkanRendererII -
.II- .
_vulkanII. 5
.II5 6"
AllocateDescriptorSetsII6 L
(IIL M
VulkanRendererIIM [
.II[ \
_logicalDeviceII\ j
,IIj k
_allocateInfoIIl y
,IIy z
_descriptorSetsPtr	II{ █
)
II█ ▌
;
II▌ ▐
ifJJ 
(JJ 
rJJ 
!=JJ 
ResultJJ #
.JJ# $
SuccessJJ$ +
)JJ+ ,
{KK 
throwLL 
newLL !
	ExceptionLL" +
(LL+ ,
$strLL, a
+LLb c
rLLd e
)LLe f
;LLf g
}MM 
}NN 
}OO 
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ 
<QQ 
VulkanRendererQQ  .
.QQ. /
_swapimageCountQQ/ >
;QQ> ?
iQQ@ A
++QQA C
)QQC D
{RR  
DescriptorBufferInfoSS $
_bufferInfoUniformSS% 7
=SS8 9
newSS: = 
DescriptorBufferInfoSS> R
(SSR S
)SSS T
{TT 
BufferUU 
=UU 
VulkanRendererUU +
.UU+ ,
_cameraUU, 3
.UU3 4
_cameraBufferUU4 A
[UUA B
iUUB C
]UUC D
,UUD E
OffsetVV 
=VV 
$numVV 
,VV 
RangeWW 
=WW 
(WW 
ulongWW "
)WW" #
UnsafeWW# )
.WW) *
SizeOfWW* 0
<WW0 1
UBOWW1 4
>WW4 5
(WW5 6
)WW6 7
}XX 
;XX  
DescriptorBufferInfoZZ $
_bufferInfoMatricesZZ% 8
=ZZ9 :
newZZ; > 
DescriptorBufferInfoZZ? S
(ZZS T
)ZZT U
{[[ 
Buffer\\ 
=\\ 
_transformsBuffer\\ .
,\\. /
Offset]] 
=]] 
$num]] 
,]] 
Range^^ 
=^^ 
Vk^^ 
.^^ 
	WholeSize^^ (
}__ 
;__  
DescriptorBufferInfoaa $
_lightBufferUniformaa% 8
=aa9 :
newaa; > 
DescriptorBufferInfoaa? S
(aaS T
)aaT U
{bb 
Buffercc 
=cc 

Rasterizercc '
.cc' (
_lightBuffercc( 4
,cc4 5
Offsetdd 
=dd 
$numdd 
,dd 
Rangeee 
=ee 
(ee 
ulongee "
)ee" #
(ee# $
sizeofee$ *
(ee* +
	LightDataee+ 4
)ee4 5
*ee6 7
VulkanRendereree8 F
.eeF G
_lightsToRendereeG V
.eeV W
CounteeW \
+ee] ^
sizeofee_ e
(eee f
inteef i
)eei j
)eej k
}ff 
;ff 
DescriptorImageInfohh #

_imageInfohh$ .
=hh/ 0
newhh1 4
DescriptorImageInfohh5 H
(hhH I
)hhI J
{ii 
ImageLayoutjj 
=jj  !
ImageLayoutjj" -
.jj- .!
ShaderReadOnlyOptimaljj. C
,jjC D
	ImageViewkk 
=kk 
_textureImageViewkk  1
,kk1 2
Samplerll 
=ll 

Rasterizerll (
.ll( )
_textureSamplerll) 8
}mm 
;mm 
DescriptorImageInfooo #
_shadowmapInfooo$ 2
=oo3 4
newoo5 8
DescriptorImageInfooo9 L
(ooL M
)ooM N
{pp 
ImageLayoutqq 
=qq  !
ImageLayoutqq" -
.qq- .'
DepthStencilReadOnlyOptimalqq. I
,qqI J
	ImageViewrr 
=rr 
VulkanRendererrr  .
.rr. /
_lightsToRenderrr/ >
[rr> ?
$numrr? @
]rr@ A
.rrA B
GetComponentrrB N
<rrN O 
LightsourceComponentrrO c
>rrc d
(rrd e
)rre f
.rrf g
_depthImageViewrrg v
,rrv w
Samplerss 
=ss 

Rasterizerss (
.ss( )
_shadowmapSamplerss) :
}tt 
;tt 
varvv  
_writeDescriptorSetsvv (
=vv) *
newvv+ .
WriteDescriptorSetvv/ A
[vvA B
]vvB C
{ww 
newxx 
WriteDescriptorSetxx *
(xx* +
)xx+ ,
{yy 
STypezz 
=zz 
StructureTypezz  -
.zz- .
WriteDescriptorSetzz. @
,zz@ A
DstSet{{ 
={{  
_descriptorSets{{! 0
[{{0 1
i{{1 2
]{{2 3
,{{3 4

DstBinding|| "
=||# $
$num||% &
,||& '
DstArrayElement}} '
=}}( )
$num}}* +
,}}+ ,
DescriptorType~~ &
=~~' (
DescriptorType~~) 7
.~~7 8
UniformBuffer~~8 E
,~~E F
DescriptorCount '
=( )
$num* +
,+ ,
PBufferInfo
── #
=
──$ %
&
──& ' 
_bufferInfoUniform
──' 9
}
││ 
,
││ 
new
┌┌  
WriteDescriptorSet
┌┌ *
(
┌┌* +
)
┌┌+ ,
{
┐┐ 
SType
└└ 
=
└└ 
StructureType
└└  -
.
└└- . 
WriteDescriptorSet
└└. @
,
└└@ A
DstSet
┘┘ 
=
┘┘  
_descriptorSets
┘┘! 0
[
┘┘0 1
i
┘┘1 2
]
┘┘2 3
,
┘┘3 4

DstBinding
├├ "
=
├├# $
$num
├├% &
,
├├& '
DstArrayElement
┤┤ '
=
┤┤( )
$num
┤┤* +
,
┤┤+ ,
DescriptorType
┬┬ &
=
┬┬' (
DescriptorType
┬┬) 7
.
┬┬7 8
StorageBuffer
┬┬8 E
,
┬┬E F
DescriptorCount
┴┴ '
=
┴┴( )
$num
┴┴* +
,
┴┴+ ,
PBufferInfo
┼┼ #
=
┼┼$ %
&
┼┼& '!
_bufferInfoMatrices
┼┼' :
}
▀▀ 
,
▀▀ 
new
▄▄  
WriteDescriptorSet
▄▄ *
(
▄▄* +
)
▄▄+ ,
{
██ 
SType
▌▌ 
=
▌▌ 
StructureType
▌▌  -
.
▌▌- . 
WriteDescriptorSet
▌▌. @
,
▌▌@ A
DstSet
▐▐ 
=
▐▐  
_descriptorSets
▐▐! 0
[
▐▐0 1
i
▐▐1 2
]
▐▐2 3
,
▐▐3 4

DstBinding
░░ "
=
░░# $
$num
░░% &
,
░░& '
DstArrayElement
▒▒ '
=
▒▒( )
$num
▒▒* +
,
▒▒+ ,
DescriptorType
▓▓ &
=
▓▓' (
DescriptorType
▓▓) 7
.
▓▓7 8
StorageBuffer
▓▓8 E
,
▓▓E F
DescriptorCount
⌠⌠ '
=
⌠⌠( )
$num
⌠⌠* +
,
⌠⌠+ ,
PBufferInfo
■■ #
=
■■$ %
&
■■& '!
_lightBufferUniform
■■' :
}
∙∙ 
,
∙∙ 
new
√√  
WriteDescriptorSet
√√ *
(
√√* +
)
√√+ ,
{
≈≈ 
SType
≤≤ 
=
≤≤ 
StructureType
≤≤  -
.
≤≤- . 
WriteDescriptorSet
≤≤. @
,
≤≤@ A
DstSet
≥≥ 
=
≥≥  
_descriptorSets
≥≥! 0
[
≥≥0 1
i
≥≥1 2
]
≥≥2 3
,
≥≥3 4

DstBinding
   "
=
  # $
$num
  % &
,
  & '
DstArrayElement
⌡⌡ '
=
⌡⌡( )
$num
⌡⌡* +
,
⌡⌡+ ,
DescriptorType
°° &
=
°°' (
DescriptorType
°°) 7
.
°°7 8"
CombinedImageSampler
°°8 L
,
°°L M
DescriptorCount
²² '
=
²²( )
$num
²²* +
,
²²+ ,

PImageInfo
·· "
=
··# $
&
··% &

_imageInfo
··& 0
}
÷÷ 
,
÷÷ 
new
══  
WriteDescriptorSet
══ *
(
══* +
)
══+ ,
{
║║ 
SType
╒╒ 
=
╒╒ 
StructureType
╒╒  -
.
╒╒- . 
WriteDescriptorSet
╒╒. @
,
╒╒@ A
DstSet
ёё 
=
ёё  
_descriptorSets
ёё! 0
[
ёё0 1
i
ёё1 2
]
ёё2 3
,
ёё3 4

DstBinding
╓╓ "
=
╓╓# $
$num
╓╓% &
,
╓╓& '
DstArrayElement
╔╔ '
=
╔╔( )
$num
╔╔* +
,
╔╔+ ,
DescriptorType
╕╕ &
=
╕╕' (
DescriptorType
╕╕) 7
.
╕╕7 8"
CombinedImageSampler
╕╕8 L
,
╕╕L M
DescriptorCount
╖╖ '
=
╖╖( )
$num
╖╖* +
,
╖╖+ ,

PImageInfo
╗╗ "
=
╗╗# $
&
╗╗% &
_shadowmapInfo
╗╗& 4
}
╘╘ 
}
╙╙ 
;
╙╙ 
fixed
╚╚ 
(
╚╚  
WriteDescriptorSet
╚╚ )
*
╚╚) *
_descPtr
╚╚+ 3
=
╚╚4 5"
_writeDescriptorSets
╚╚6 J
)
╚╚J K
{
╛╛ 
VulkanRenderer
╜╜ "
.
╜╜" #
_vulkan
╜╜# *
!
╜╜* +
.
╜╜+ ,"
UpdateDescriptorSets
╜╜, @
(
╜╜@ A
VulkanRenderer
╜╜A O
.
╜╜O P
_logicalDevice
╜╜P ^
,
╜╜^ _
(
╜╜` a
uint
╜╜a e
)
╜╜e f"
_writeDescriptorSets
╜╜f z
.
╜╜z {
Length╜╜{ │
,╜╜│ ┌
_descPtr╜╜┐ ▀
,╜╜▀ ▄
$num╜╜█ ▌
,╜╜▌ ▐
null╜╜░ ■
)╜╜■ ∙
;╜╜∙ √
}
╝╝ 
}
╞╞ 
}
╟╟ 	
private
╡╡ 
void
╡╡ '
CreateShadowDescriptorSet
╡╡ .
(
╡╡. /
)
╡╡/ 0
{
ЁЁ 	!
DescriptorSetLayout
╢╢ 
[
╢╢  
]
╢╢  !
_layouts
╢╢" *
=
╢╢+ ,
new
╢╢- 0!
DescriptorSetLayout
╢╢1 D
[
╢╢D E

Rasterizer
╢╢E O
.
╢╢O P

_swapchain
╢╢P Z
!
╢╢Z [
.
╢╢[ \
_swapchainImages
╢╢\ l
.
╢╢l m
Length
╢╢m s
]
╢╢s t
;
╢╢t u
Array
╣╣ 
.
╣╣ 
Fill
╣╣ 
(
╣╣ 
_layouts
╣╣ 
,
╣╣  

Rasterizer
╣╣! +
.
╣╣+ ,(
_descriptorSetLayoutShadow
╣╣, F
)
╣╣F G
;
╣╣G H
fixed
╥╥ 
(
╥╥ !
DescriptorSetLayout
╥╥ &
*
╥╥& '
_layoutsPtr
╥╥( 3
=
╥╥4 5
_layouts
╥╥6 >
)
╥╥> ?
{
╦╦ '
DescriptorSetAllocateInfo
╧╧ )
_allocateInfo
╧╧* 7
=
╧╧8 9
new
╧╧: ='
DescriptorSetAllocateInfo
╧╧> W
(
╧╧W X
)
╧╧X Y
{
╨╨ 
SType
╩╩ 
=
╩╩ 
StructureType
╩╩ )
.
╩╩) *'
DescriptorSetAllocateInfo
╩╩* C
,
╩╩C D
DescriptorPool
╪╪ "
=
╪╪# $

Rasterizer
╪╪% /
.
╪╪/ 0#
_descriptorPoolShadow
╪╪0 E
,
╪╪E F 
DescriptorSetCount
╫╫ &
=
╫╫' (
(
╫╫) *
uint
╫╫* .
)
╫╫. /

Rasterizer
╫╫/ 9
.
╫╫9 :

_swapchain
╫╫: D
!
╫╫D E
.
╫╫E F
_swapchainImages
╫╫F V
.
╫╫V W
Length
╫╫W ]
,
╫╫] ^
PSetLayouts
╬╬ 
=
╬╬  !
_layoutsPtr
╬╬" -
}
©© 
;
©© #
_descriptorSetsShadow
аа %
=
аа& '
new
аа( +
DescriptorSet
аа, 9
[
аа9 :

Rasterizer
аа: D
.
ааD E

_swapchain
ааE O
!
ааO P
.
ааP Q
_swapchainImages
ааQ a
.
ааa b
Length
ааb h
]
ааh i
;
ааi j
fixed
бб 
(
бб 
DescriptorSet
бб $
*
бб$ % 
_descriptorSetsPtr
бб& 8
=
бб9 :#
_descriptorSetsShadow
бб; P
)
ббP Q
{
цц 
Result
дд 
r
дд 
=
дд 

Rasterizer
дд )
.
дд) *
_vulkan
дд* 1
.
дд1 2$
AllocateDescriptorSets
дд2 H
(
ддH I

Rasterizer
ддI S
.
ддS T
_logicalDevice
ддT b
,
ддb c
_allocateInfo
ддd q
,
ддq r!
_descriptorSetsPtrддs ┘
)дд┘ ├
;дд├ ┤
if
ее 
(
ее 
r
ее 
!=
ее 
Result
ее #
.
ее# $
Success
ее$ +
)
ее+ ,
{
фф 
throw
гг 
new
гг !
	Exception
гг" +
(
гг+ ,
$str
гг, a
+
ггb c
r
ггd e
)
ггe f
;
ггf g
}
хх 
}
ии 
}
йй 
for
кк 
(
кк 
int
кк 
i
кк 
=
кк 
$num
кк 
;
кк 
i
кк 
<
кк 

Rasterizer
кк  *
.
кк* +

_swapchain
кк+ 5
.
кк5 6
_swapchainImages
кк6 F
.
ккF G
Length
ккG M
;
ккM N
i
ккO P
++
ккP R
)
ккR S
{
лл "
DescriptorBufferInfo
мм $ 
_bufferInfoUniform
мм% 7
=
мм8 9
new
мм: ="
DescriptorBufferInfo
мм> R
(
ммR S
)
ммS T
{
нн 
Buffer
оо 
=
оо 

Rasterizer
оо '
.
оо' (
	_lightUBO
оо( 1
[
оо1 2
i
оо2 3
]
оо3 4
,
оо4 5
Offset
пп 
=
пп 
$num
пп 
,
пп 
Range
яя 
=
яя 
Vk
яя 
.
яя 
	WholeSize
яя (
}
рр 
;
рр "
DescriptorBufferInfo
тт $!
_bufferInfoMatrices
тт% 8
=
тт9 :
new
тт; >"
DescriptorBufferInfo
тт? S
(
ттS T
)
ттT U
{
уу 
Buffer
жж 
=
жж 
_transformsBuffer
жж .
,
жж. /
Offset
вв 
=
вв 
$num
вв 
,
вв 
Range
ьь 
=
ьь 
Vk
ьь 
.
ьь 
	WholeSize
ьь (
}
ыы 
;
ыы 
var
шш "
_writeDescriptorSets
шш (
=
шш) *
new
шш+ . 
WriteDescriptorSet
шш/ A
[
шшA B
]
шшB C
{
ээ 
new
щщ  
WriteDescriptorSet
щщ *
(
щщ* +
)
щщ+ ,
{
чч 
SType
ъъ 
=
ъъ 
StructureType
ъъ  -
.
ъъ- . 
WriteDescriptorSet
ъъ. @
,
ъъ@ A
DstSet
ЮЮ 
=
ЮЮ  #
_descriptorSetsShadow
ЮЮ! 6
[
ЮЮ6 7
i
ЮЮ7 8
]
ЮЮ8 9
,
ЮЮ9 :

DstBinding
АА "
=
АА# $
$num
АА% &
,
АА& '
DstArrayElement
ББ '
=
ББ( )
$num
ББ* +
,
ББ+ ,
DescriptorType
ЦЦ &
=
ЦЦ' (
DescriptorType
ЦЦ) 7
.
ЦЦ7 8
StorageBuffer
ЦЦ8 E
,
ЦЦE F
DescriptorCount
ДД '
=
ДД( )
$num
ДД* +
,
ДД+ ,
PBufferInfo
ЕЕ #
=
ЕЕ$ %
&
ЕЕ& ' 
_bufferInfoUniform
ЕЕ' 9
}
ФФ 
,
ФФ 
new
ГГ  
WriteDescriptorSet
ГГ *
(
ГГ* +
)
ГГ+ ,
{
ХХ 
SType
ИИ 
=
ИИ 
StructureType
ИИ  -
.
ИИ- . 
WriteDescriptorSet
ИИ. @
,
ИИ@ A
DstSet
ЙЙ 
=
ЙЙ  #
_descriptorSetsShadow
ЙЙ! 6
[
ЙЙ6 7
i
ЙЙ7 8
]
ЙЙ8 9
,
ЙЙ9 :

DstBinding
КК "
=
КК# $
$num
КК% &
,
КК& '
DstArrayElement
ЛЛ '
=
ЛЛ( )
$num
ЛЛ* +
,
ЛЛ+ ,
DescriptorType
ММ &
=
ММ' (
DescriptorType
ММ) 7
.
ММ7 8
StorageBuffer
ММ8 E
,
ММE F
DescriptorCount
НН '
=
НН( )
$num
НН* +
,
НН+ ,
PBufferInfo
ОО #
=
ОО$ %
&
ОО& '!
_bufferInfoMatrices
ОО' :
}
ПП 
}
ЯЯ 
;
ЯЯ 
fixed
РР 
(
РР  
WriteDescriptorSet
РР )
*
РР) *
_descPtr
РР+ 3
=
РР4 5"
_writeDescriptorSets
РР6 J
)
РРJ K
{
СС 
VulkanRenderer
ТТ "
.
ТТ" #
_vulkan
ТТ# *
!
ТТ* +
.
ТТ+ ,"
UpdateDescriptorSets
ТТ, @
(
ТТ@ A
VulkanRenderer
ТТA O
.
ТТO P
_logicalDevice
ТТP ^
,
ТТ^ _
(
ТТ` a
uint
ТТa e
)
ТТe f"
_writeDescriptorSets
ТТf z
.
ТТz {
LengthТТ{ │
,ТТ│ ┌
_descPtrТТ┐ ▀
,ТТ▀ ▄
$numТТ█ ▌
,ТТ▌ ▐
nullТТ░ ■
)ТТ■ ∙
;ТТ∙ √
}
УУ 
}
ЖЖ 
}
ВВ 	
internal
ЫЫ 
override
ЫЫ 
void
ЫЫ 
MakeInstanced
ЫЫ ,
(
ЫЫ, -
ref
ЫЫ- 0
List
ЫЫ1 5
<
ЫЫ5 6
	Matrix4X4
ЫЫ6 ?
<
ЫЫ? @
float
ЫЫ@ E
>
ЫЫE F
>
ЫЫF G
	_matrices
ЫЫH Q
)
ЫЫQ R
{
ЗЗ 	
base
ШШ 
.
ШШ 
MakeInstanced
ШШ 
(
ШШ 
ref
ШШ "
	_matrices
ШШ# ,
)
ШШ, -
;
ШШ- .

_instances
ЭЭ 
=
ЭЭ 
	_matrices
ЭЭ "
.
ЭЭ" #
Count
ЭЭ# (
;
ЭЭ( ) 
_transformMatrices
ЩЩ 
=
ЩЩ  
	_matrices
ЩЩ! *
;
ЩЩ* +"
AVulkanBufferHandler
ЪЪ  
.
ЪЪ  !#
CreateTransformBuffer
ЪЪ! 6
(
ЪЪ6 7
ref
ЪЪ7 : 
_transformMatrices
ЪЪ; M
,
ЪЪM N
ref
ЪЪO R
_transformsBuffer
ЪЪS d
,
ЪЪd e
ref
ЪЪf i&
_trasnformsBufferMemoryЪЪj │
,ЪЪ│ ┌$
_aditionalUsageFlagsЪЪ┐ ≈
)ЪЪ≈ ≤
;ЪЪ≤ ≥
VulkanRenderer
── 
.
── 
_vulkan
── "
.
──" # 
FreeDescriptorSets
──# 5
(
──5 6
VulkanRenderer
──6 D
.
──D E
_logicalDevice
──E S
,
──S T

Rasterizer
──U _
.
──_ `
_descriptorPool
──` o
,
──o p
(
──q r
uint
──r v
)
──v w
_descriptorSets──w ├
.──├ ┤
Length──┤ █
,──█ ▌
_descriptorSets──▐ ·
)──· ÷
;──÷ ═
VulkanRenderer
││ 
.
││ 
_vulkan
││ "
.
││" # 
FreeDescriptorSets
││# 5
(
││5 6
VulkanRenderer
││6 D
.
││D E
_logicalDevice
││E S
,
││S T

Rasterizer
││U _
.
││_ `#
_descriptorPoolShadow
││` u
,
││u v
(
││w x
uint
││x |
)
││| }$
_descriptorSetsShadow││} ▓
.││▓ ⌠
Length││⌠ ≥
,││≥  %
_descriptorSetsShadow││⌡ ╟
)││╟ ╠
;││╠ ╡!
CreateDescriptorSet
┌┌ 
(
┌┌  
)
┌┌  !
;
┌┌! "
VulkanRenderer
┐┐ 
.
┐┐ 
_rendererInstance
┐┐ ,
.
┐┐, -$
RecreateCommandBuffers
┐┐- C
(
┐┐C D
)
┐┐D E
;
┐┐E F
}
└└ 	
internal
├├ 
override
├├ 
void
├├ 
SingletonMatrix
├├ .
(
├├. /
)
├├/ 0
{
┤┤ 	
base
┬┬ 
.
┬┬ 
SingletonMatrix
┬┬  
(
┬┬  !
)
┬┬! "
;
┬┬" #"
AVulkanBufferHandler
┴┴  
.
┴┴  !#
CreateTransformBuffer
┴┴! 6
(
┴┴6 7
ref
┴┴7 : 
_transformMatrices
┴┴; M
,
┴┴M N
ref
┴┴O R
_transformsBuffer
┴┴S d
,
┴┴d e
ref
┴┴f i&
_trasnformsBufferMemory┴┴j │
,┴┴│ ┌$
_aditionalUsageFlags┴┴┐ ≈
)┴┴≈ ≤
;┴┴≤ ≥
}
┼┼ 	
internal
▄▄ 
override
▄▄ 
void
▄▄ 
UpdateMatrices
▄▄ -
(
▄▄- .
)
▄▄. /
{
██ 	
base
▌▌ 
.
▌▌ 
UpdateMatrices
▌▌ 
(
▌▌  
)
▌▌  !
;
▌▌! "
}
▐▐ 	
internal
▒▒ 
override
▒▒ 
void
▒▒ !
EnqueueDrawCommands
▒▒ 2
(
▒▒2 3
ulong
▒▒3 8
[
▒▒8 9
]
▒▒9 :
_offset
▒▒; B
,
▒▒B C
int
▒▒D G

_loopIndex
▒▒H R
,
▒▒R S
ref
▒▒T W
CommandBuffer
▒▒X e
_commandBuffer
▒▒f t
)
▒▒t u
{
▓▓ 	
base
⌠⌠ 
.
⌠⌠ !
EnqueueDrawCommands
⌠⌠ $
(
⌠⌠$ %
_offset
⌠⌠% ,
,
⌠⌠, -

_loopIndex
⌠⌠. 8
,
⌠⌠8 9
ref
⌠⌠: =
_commandBuffer
⌠⌠> L
)
⌠⌠L M
;
⌠⌠M N
}
■■ 	
internal
√√ 
void
√√ &
EnqueuShadowDrawCommands
√√ .
(
√√. /
ulong
√√/ 4
[
√√4 5
]
√√5 6
_offset
√√7 >
,
√√> ?
int
√√@ C
descriptorIndex
√√D S
,
√√S T
ref
√√U X
CommandBuffer
√√Y f
_commandBuffer
√√g u
,
√√u v
int
√√w z

lightIndex√√{ ┘
)√√┘ ├
{
≈≈ 	
if
≤≤ 
(
≤≤ 
_render
≤≤ 
)
≤≤ 
{
≥≥ 
Buffer
   
[
   
]
   
_vertBuffer
   $
=
  % &
new
  ' *
Buffer
  + 1
[
  1 2
]
  2 3
{
  4 5
_vertexBuffer
  6 C
}
  D E
;
  E F
fixed
⌡⌡ 
(
⌡⌡ 
ulong
⌡⌡ 
*
⌡⌡ 
_offsetsPtr
⌡⌡ )
=
⌡⌡* +
_offset
⌡⌡, 3
)
⌡⌡3 4
fixed
°° 
(
°° 
Buffer
°° 
*
°° 
_vertBuffersPtr
°° .
=
°°/ 0
_vertBuffer
°°1 <
)
°°< =
{
²² 
VulkanRenderer
·· "
.
··" #
_vulkan
··# *
.
··* +"
CmdBindVertexBuffers
··+ ?
(
··? @
_commandBuffer
··@ N
,
··N O
$num
··P Q
,
··Q R
$num
··S T
,
··T U
_vertBuffersPtr
··V e
,
··e f
_offsetsPtr
··g r
)
··r s
;
··s t
}
÷÷ 
VulkanRenderer
══ 
.
══ 
_vulkan
══ &
.
══& ' 
CmdBindIndexBuffer
══' 9
(
══9 :
_commandBuffer
══: H
,
══H I
_indexBuffer
══J V
,
══V W
$num
══X Y
,
══Y Z
	IndexType
══[ d
.
══d e
Uint16
══e k
)
══k l
;
══l m
VulkanRenderer
║║ 
.
║║ 
_vulkan
║║ &
.
║║& '#
CmdBindDescriptorSets
║║' <
(
║║< =
_commandBuffer
║║= K
,
║║K L
PipelineBindPoint
║║M ^
.
║║^ _
Graphics
║║_ g
,
║║g h

Rasterizer
║║i s
.
║║s t
	_pipeline
║║t }
.
║║} ~
_shadowLayout║║~ ▀
,║║▀ ▄
$num║║█ ▌
,║║▌ ▐
$num║║░ ▒
,║║▒ ▓%
_descriptorSetsShadow║║⌠ ╗
[║║╗ ╘
descriptorIndex║║╘ ╦
]║║╦ ╧
,║║╧ ╨
$num║║╩ ╪
,║║╪ ╫
null║║╬ б
)║║б ц
;║║ц д
VulkanRenderer
ёё 
.
ёё 
_vulkan
ёё &
.
ёё& '
CmdPushConstants
ёё' 7
(
ёё7 8
_commandBuffer
ёё8 F
,
ёёF G

Rasterizer
ёёH R
.
ёёR S
	_pipeline
ёёS \
.
ёё\ ]
_shadowLayout
ёё] j
,
ёёj k
ShaderStageFlags
ёёl |
.
ёё| }
	VertexBitёё} ├
,ёё├ ┤
$numёё┬ ┴
,ёё┴ ┼
sizeofёё▀ ▒
(ёё▒ ▓
intёё▓ ∙
)ёё∙ √
,ёё√ ≈
&ёё≤ ≥

lightIndexёё≥ ё
)ёёё ╓
;ёё╓ ╔
VulkanRenderer
╓╓ 
.
╓╓ 
_vulkan
╓╓ &
.
╓╓& '
CmdDrawIndexed
╓╓' 5
(
╓╓5 6
_commandBuffer
╓╓6 D
,
╓╓D E
(
╓╓F G
uint
╓╓G K
)
╓╓K L
_mesh
╓╓L Q
.
╓╓Q R
_indices
╓╓R Z
.
╓╓Z [
Length
╓╓[ a
,
╓╓a b
(
╓╓c d
uint
╓╓d h
)
╓╓h i

_instances
╓╓i s
,
╓╓s t
$num
╓╓u v
,
╓╓v w
$num
╓╓x y
,
╓╓y z
$num
╓╓{ |
)
╓╓| }
;
╓╓} ~
}
╔╔ 
}
╕╕ 	
}
╖╖ 
}╗╗ з▐
kH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\Helpers\AVulkanHelper.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
.* +
Helpers+ 2
{ 
internal 
unsafe 
static 
class  
AVulkanHelper! .
{ 
internal		 
struct		 
QueueFamilyIndices		 *
{

 	
public 
uint 
? 
GraphicsFamily '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
uint 
? 
PresentFamily &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
bool 

IsComplete "
(" #
)# $
{ 
return 
GraphicsFamily %
.% &
HasValue& .
&&/ 1
PresentFamily2 ?
.? @
HasValue@ H
;H I
} 
} 	
internal 
static 
uint 
Version $
($ %
uint% )
major* /
,/ 0
uint1 5
minor6 ;
,; <
uint= A
patchB G
)G H
{ 	
return 
major 
<< 
$num 
|  
minor! &
<<' )
$num* ,
|- .
patch/ 4
;4 5
} 	
internal 
static 
int  
FindQueueFamilyIndex 0
(0 1
ref1 4
PhysicalDevice5 C
_gpuD H
,H I
refJ M!
QueueFamilyPropertiesN c
[c d
]d e
_qfmf j
,j k

QueueFlagsl v
_qTypew }
)} ~
{ 	
uint 
_propertyCount 
=  !
$num" #
;# $
VulkanRenderer 
. 
_vulkan "
." #2
&GetPhysicalDeviceQueueFamilyProperties# I
(I J
_gpuJ N
,N O
&P Q
_propertyCountQ _
,_ `
nulla e
)e f
;f g
_qfm 
= 
new !
QueueFamilyProperties ,
[, -
_propertyCount- ;
]; <
;< =

Rasterizer 
. 
_vulkan 
. 2
&GetPhysicalDeviceQueueFamilyProperties E
(E F
_gpuF J
,J K
&L M
_propertyCountM [
,[ \
_qfm] a
)a b
;b c
for   
(   
int   
i   
=   
$num   
;   
i   
<   
_propertyCount    .
;  . /
i  0 1
++  1 3
)  3 4
if!! 
(!! 
(!! 
_qfm!! 
[!! 
i!! 
]!! 
.!! 

QueueFlags!! '
&!!( )
_qType!!* 0
)!!0 1
==!!2 4
_qType!!5 ;
)!!; <
return"" 
i"" 
;"" 
return$$ 
int$$ 
.$$ 
MaxValue$$ 
;$$  
}%% 	
internal'' 
static'' 
Format'' 
GetDepthFormat'' -
(''- .
)''. /
{(( 	
return)) 
FindSupportedFormat)) &
())& '
new))' *
[))* +
]))+ ,
{))- .
Format))/ 5
.))5 6
	D32Sfloat))6 ?
,))? @
Format))A G
.))G H
D32SfloatS8Uint))H W
,))W X
Format))Y _
.))_ `
D24UnormS8Uint))` n
}))o p
,))p q
ImageTiling))r }
.))} ~
Optimal	))~ ┘
,
))┘ ├ 
FormatFeatureFlags
))┤ ≥
.
))≥  '
DepthStencilAttachmentBit
))  Ё
)
))Ё ╢
;
))╢ ╣
}** 	
internal,, 
static,, 
Format,, 
FindSupportedFormat,, 2
(,,2 3
IEnumerable,,3 >
<,,> ?
Format,,? E
>,,E F
_formats,,G O
,,,O P
ImageTiling,,Q \
_tiling,,] d
,,,d e
FormatFeatureFlags,,f x
	_features	,,y ┌
)
,,┌ ┐
{-- 	
foreach.. 
(.. 
Format.. 
_f.. 
in.. !
_formats.." *
)..* +
{// 

Rasterizer00 
.00 
_vulkan00 "
.00" #-
!GetPhysicalDeviceFormatProperties00# D
(00D E

Rasterizer00E O
.00O P
_gpu00P T
,00T U
_f00V X
,00X Y
out00Z ]
FormatProperties00^ n
_fp00o r
)00r s
;00s t
if11 
(11 
_tiling11 
==11 
ImageTiling11 *
.11* +
Linear11+ 1
&&112 4
(115 6
_fp116 9
.119 : 
LinearTilingFeatures11: N
&11O P
	_features11Q Z
)11Z [
==11\ ^
	_features11_ h
)11h i
{22 
return33 
_f33 
;33 
}44 
else55 
if55 
(55 
_tiling55  
==55! #
ImageTiling55$ /
.55/ 0
Optimal550 7
&&558 :
(55; <
_fp55< ?
.55? @!
OptimalTilingFeatures55@ U
&55V W
	_features55X a
)55a b
==55c e
	_features55f o
)55o p
{66 
return77 
_f77 
;77 
}88 
}99 
throw:: 
new:: 
	Exception:: 
(::  
$str::  A
)::A B
;::B C
};; 	
internal== 
static== 
QueueFamilyIndices== *
FindQueueFamilies==+ <
(==< =
ref=== @

KhrSurface==A K
_driverSurface==L Z
,==Z [
ref==\ _

SurfaceKHR==` j
_surface==k s
)==s t
{>> 	
QueueFamilyIndices?? 
_qfi?? #
=??$ %
new??& )
QueueFamilyIndices??* <
(??< =
)??= >
;??> ?
uintAA 
_qfcAA 
=AA 
$numAA 
;AA 
VulkanRendererBB 
.BB 
_vulkanBB "
.BB" #2
&GetPhysicalDeviceQueueFamilyPropertiesBB# I
(BBI J
VulkanRendererBBJ X
.BBX Y
_gpuBBY ]
,BB] ^
refBB_ b
_qfcBBc g
,BBg h
nullBBi m
)BBm n
;BBn o
varDD 
_qfpDD 
=DD 
newDD !
QueueFamilyPropertiesDD 0
[DD0 1
_qfcDD1 5
]DD5 6
;DD6 7
fixedEE 
(EE !
QueueFamilyPropertiesEE (
*EE( )
_qfpPtrEE* 1
=EE2 3
_qfpEE4 8
)EE8 9
{FF 
VulkanRendererGG 
.GG 
_vulkanGG &
.GG& '2
&GetPhysicalDeviceQueueFamilyPropertiesGG' M
(GGM N
VulkanRendererGGN \
.GG\ ]
_gpuGG] a
,GGa b
refGGc f
_qfcGGg k
,GGk l
_qfpPtrGGm t
)GGt u
;GGu v
}HH 
uintJJ 
iJJ 
=JJ 
$numJJ 
;JJ 
foreachKK 
(KK 
varKK 
_qfKK 
inKK 
_qfpKK  $
)KK$ %
{LL 
ifMM 
(MM 
_qfMM 
.MM 

QueueFlagsMM "
.MM" #
HasFlagMM# *
(MM* +

QueueFlagsMM+ 5
.MM5 6
GraphicsBitMM6 A
)MMA B
)MMB C
{NN 
_qfiOO 
.OO 
GraphicsFamilyOO '
=OO( )
iOO* +
;OO+ ,
}PP 
_driverSurfaceQQ 
.QQ +
GetPhysicalDeviceSurfaceSupportQQ >
(QQ> ?
VulkanRendererQQ? M
.QQM N
_gpuQQN R
,QQR S
iQQT U
,QQU V
_surfaceQQW _
,QQ_ `
outQQa d
varQQe h
_presentSupportQQi x
)QQx y
;QQy z
ifSS 
(SS 
_presentSupportSS #
)SS# $
{TT 
_qfiUU 
.UU 
PresentFamilyUU &
=UU' (
iUU) *
;UU* +
}VV 
ifWW 
(WW 
_qfiWW 
.WW 

IsCompleteWW #
(WW# $
)WW$ %
)WW% &
{XX 
breakYY 
;YY 
}ZZ 
i[[ 
++[[ 
;[[ 
}\\ 
return]] 
_qfi]] 
;]] 
}^^ 	
internal`` 
static`` #
SwapChainSupportDetails`` /
GetSupportDetails``0 A
(``A B
ref``B E

KhrSurface``F P
_driverSurface``Q _
,``_ `
ref``a d

SurfaceKHR``e o
_surface``p x
)``x y
{aa 	
varbb 
_detailsbb 
=bb 
newbb #
SwapChainSupportDetailsbb 6
(bb6 7
)bb7 8
;bb8 9
_driverSurfacedd 
!dd 
.dd 0
$GetPhysicalDeviceSurfaceCapabilitiesdd @
(dd@ A

RasterizerddA K
.ddK L
_gpuddL P
,ddP Q
_surfaceddR Z
,ddZ [
outdd\ _
_detailsdd` h
.ddh i
Capabilitiesddi u
)ddu v
;ddv w
uintgg 
_formatCountgg 
=gg 
$numgg  !
;gg! "
_driverSurfacehh 
.hh +
GetPhysicalDeviceSurfaceFormatshh :
(hh: ;

Rasterizerhh; E
.hhE F
_gpuhhF J
,hhJ K
_surfacehhL T
,hhT U
refhhV Y
_formatCounthhZ f
,hhf g
nullhhh l
)hhl m
;hhm n
ifii 
(ii 
_formatCountii 
!=ii 
$numii  !
)ii! "
{jj 
_detailskk 
.kk 
Formatskk  
=kk! "
newkk# &
SurfaceFormatKHRkk' 7
[kk7 8
_formatCountkk8 D
]kkD E
;kkE F
fixedll 
(ll 
SurfaceFormatKHRll '
*ll' (
_fPtrll) .
=ll/ 0
_detailsll1 9
.ll9 :
Formatsll: A
)llA B
{mm 
_driverSurfacenn "
.nn" #+
GetPhysicalDeviceSurfaceFormatsnn# B
(nnB C

RasterizernnC M
.nnM N
_gpunnN R
,nnR S
_surfacennT \
,nn\ ]
refnn^ a
_formatCountnnb n
,nnn o
_fPtrnnp u
)nnu v
;nnv w
}oo 
}pp 
elseqq 
_detailsqq 
.qq 
Formatsqq !
=qq" #
Arrayqq$ )
.qq) *
Emptyqq* /
<qq/ 0
SurfaceFormatKHRqq0 @
>qq@ A
(qqA B
)qqB C
;qqC D
uinttt 
_presentModeCounttt "
=tt# $
$numtt% &
;tt& '
_driverSurfaceuu 
.uu 0
$GetPhysicalDeviceSurfacePresentModesuu ?
(uu? @

Rasterizeruu@ J
.uuJ K
_gpuuuK O
,uuO P
_surfaceuuQ Y
,uuY Z
refuu[ ^
_presentModeCountuu_ p
,uup q
nulluur v
)uuv w
;uuw x
ifvv 
(vv 
_presentModeCountvv !
!=vv" $
$numvv% &
)vv& '
{ww 
_detailsxx 
.xx 
PresentModesxx %
=xx& '
newxx( +
PresentModeKHRxx, :
[xx: ;
_presentModeCountxx; L
]xxL M
;xxM N
fixedyy 
(yy 
PresentModeKHRyy %
*yy% &
_formatsPtryy' 2
=yy3 4
_detailsyy5 =
.yy= >
PresentModesyy> J
)yyJ K
{zz 
_driverSurface{{ "
.{{" #0
$GetPhysicalDeviceSurfacePresentModes{{# G
({{G H

Rasterizer{{H R
.{{R S
_gpu{{S W
,{{W X
_surface{{Y a
,{{a b
ref{{c f
_presentModeCount{{g x
,{{x y
_formatsPtr	{{z ┘
)
{{┘ ├
;
{{├ ┤
}|| 
}}} 
else~~ 
_details~~ 
.~~ 
PresentModes~~ &
=~~' (
Array~~) .
.~~. /
Empty~~/ 4
<~~4 5
PresentModeKHR~~5 C
>~~C D
(~~D E
)~~E F
;~~F G
return
── 
_details
── 
;
── 
}
││ 	
internal
┐┐ 
static
┐┐ 
PresentModeKHR
┐┐ &
GetPresentMode
┐┐' 5
(
┐┐5 6
IReadOnlyList
┐┐6 C
<
┐┐C D
PresentModeKHR
┐┐D R
>
┐┐R S
_presentModes
┐┐T a
)
┐┐a b
{
└└ 	
foreach
┘┘ 
(
┘┘ 
var
┘┘ #
_availablePresentMode
┘┘ .
in
┘┘/ 1
_presentModes
┘┘2 ?
)
┘┘? @
{
├├ 
if
┤┤ 
(
┤┤ #
_availablePresentMode
┤┤ )
==
┤┤* ,
PresentModeKHR
┤┤- ;
.
┤┤; <

MailboxKhr
┤┤< F
)
┤┤F G
{
┬┬ 
return
┴┴ #
_availablePresentMode
┴┴ 0
;
┴┴0 1
}
┼┼ 
}
▀▀ 
return
▄▄ 
PresentModeKHR
▄▄ !
.
▄▄! "
FifoKhr
▄▄" )
;
▄▄) *
}
██ 	
internal
▐▐ 
static
▐▐ 
SurfaceFormatKHR
▐▐ ('
GetSwapchainSurfaceFormat
▐▐) B
(
▐▐B C
IReadOnlyList
▐▐C P
<
▐▐P Q
SurfaceFormatKHR
▐▐Q a
>
▐▐a b
_formats
▐▐c k
)
▐▐k l
{
░░ 	
foreach
▒▒ 
(
▒▒ 
var
▒▒ 
_availableFormat
▒▒ )
in
▒▒* ,
_formats
▒▒- 5
)
▒▒5 6
{
▓▓ 
if
⌠⌠ 
(
⌠⌠ 
_availableFormat
⌠⌠ $
.
⌠⌠$ %
Format
⌠⌠% +
==
⌠⌠, .
Format
⌠⌠/ 5
.
⌠⌠5 6
R8G8B8A8Unorm
⌠⌠6 C
&&
⌠⌠D F
_availableFormat
⌠⌠G W
.
⌠⌠W X

ColorSpace
⌠⌠X b
==
⌠⌠c e
ColorSpaceKHR
⌠⌠f s
.
⌠⌠s t$
SpaceSrgbNonlinearKhr⌠⌠t ┴
)⌠⌠┴ ┼
{
■■ 
return
∙∙ 
_availableFormat
∙∙ +
;
∙∙+ ,
}
√√ 
}
≈≈ 
return
≤≤ 
_formats
≤≤ 
[
≤≤ 
$num
≤≤ 
]
≤≤ 
;
≤≤ 
}
≥≥ 	
internal
⌡⌡ 
static
⌡⌡ 
uint
⌡⌡ %
FindPresentSupportIndex
⌡⌡ 4
(
⌡⌡4 5
ref
⌡⌡5 8#
QueueFamilyProperties
⌡⌡9 N
[
⌡⌡N O
]
⌡⌡O P
_qfm
⌡⌡Q U
,
⌡⌡U V
ref
⌡⌡W Z

KhrSurface
⌡⌡[ e
_driverSurface
⌡⌡f t
,
⌡⌡t u
ref
⌡⌡v y

SurfaceKHR⌡⌡z └
_surface⌡⌡┘ █
)⌡⌡█ ▌
{
°° 	
uint
²² 
i
²² 
=
²² 
$num
²² 
;
²² 
foreach
·· 
(
·· 
var
·· 
_qf
·· 
in
·· 
_qfm
··  $
)
··$ %
{
÷÷ 
if
══ 
(
══ 
_qf
══ 
.
══ 

QueueFlags
══ "
.
══" #
HasFlag
══# *
(
══* +

QueueFlags
══+ 5
.
══5 6
GraphicsBit
══6 A
)
══A B
)
══B C
{
║║ 
_driverSurface
╒╒ "
.
╒╒" #-
GetPhysicalDeviceSurfaceSupport
╒╒# B
(
╒╒B C

Rasterizer
╒╒C M
.
╒╒M N
_gpu
╒╒N R
,
╒╒R S
i
╒╒T U
,
╒╒U V
_surface
╒╒W _
,
╒╒_ `
out
╒╒a d
var
╒╒e h
_presentSupport
╒╒i x
)
╒╒x y
;
╒╒y z
if
ёё 
(
ёё 
_presentSupport
ёё '
)
ёё' (
{
╓╓ 
return
╔╔ 
i
╔╔  
;
╔╔  !
}
╕╕ 
}
╖╖ 
i
╗╗ 
++
╗╗ 
;
╗╗ 
}
╘╘ 
return
╙╙ 
int
╙╙ 
.
╙╙ 
MaxValue
╙╙ 
;
╙╙  
}
╚╚ 	
internal
╜╜ 
static
╜╜ 
ulong
╜╜ 
GetBufferAdress
╜╜ -
(
╜╜- .
ref
╜╜. 1
Buffer
╜╜2 8
_b
╜╜9 ;
)
╜╜; <
{
╝╝ 	%
BufferDeviceAddressInfo
╞╞ #
_addressInfo
╞╞$ 0
=
╞╞1 2
new
╞╞3 6%
BufferDeviceAddressInfo
╞╞7 N
(
╞╞N O
)
╞╞O P
{
╟╟ 
SType
╠╠ 
=
╠╠ 
StructureType
╠╠ %
.
╠╠% &%
BufferDeviceAddressInfo
╠╠& =
,
╠╠= >
Buffer
╡╡ 
=
╡╡ 
_b
╡╡ 
,
╡╡ 
}
ЁЁ 
;
ЁЁ 
return
╢╢ 
VulkanRenderer
╢╢ !
.
╢╢! "
_vulkan
╢╢" )
.
╢╢) *$
GetBufferDeviceAddress
╢╢* @
(
╢╢@ A
VulkanRenderer
╢╢A O
.
╢╢O P
_logicalDevice
╢╢P ^
,
╢╢^ _
_addressInfo
╢╢` l
)
╢╢l m
;
╢╢m n
}
╣╣ 	
internal
╥╥ 
static
╥╥ 
uint
╥╥ 
AlignedSize
╥╥ (
(
╥╥( )
uint
╥╥) -
_value
╥╥. 4
,
╥╥4 5
uint
╥╥6 :

_alignment
╥╥; E
)
╥╥E F
{
╦╦ 	
uint
╧╧ 
a
╧╧ 
=
╧╧ 
(
╧╧ 
_value
╧╧ 
+
╧╧ 

_alignment
╧╧ )
-
╧╧* +
$num
╧╧, -
)
╧╧- .
&
╧╧/ 0
~
╧╧1 2
(
╧╧2 3

_alignment
╧╧3 =
-
╧╧> ?
$num
╧╧@ A
)
╧╧A B
;
╧╧B C
return
╨╨ 
a
╨╨ 
;
╨╨ 
}
╩╩ 	
}
╪╪ 
}╫╫ ╬б
rH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\Helpers\AVulkanBufferHandler.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
.* +
Helpers+ 2
{ 
internal 
struct 
UBO 
{ 
public 
	Matrix4X4 
< 
float 
> 
_view  %
;% &
public 
	Matrix4X4 
< 
float 
> 
_projection  +
;+ ,
} 
internal 
static 
unsafe 
class   
AVulkanBufferHandler! 5
{ 
internal 
static 
void 
CreateVertexBuffer /
(/ 0
ref0 3
Vertex4 :
[: ;
]; <
	_vertices= F
,F G
refH K
BufferL R
_vertexBufferS `
,` a
refb e
DeviceMemoryf r 
_vertexBufferMemory	s ├
,
├ ┤
BufferUsageFlags
┬ ≤
_additionalFlags
≥ ╘
)
╘ ╙
{ 	
ulong 
_bufferSize 
= 
(  !
ulong! &
)& '
(' (
Unsafe( .
.. /
SizeOf/ 5
<5 6
Vertex6 <
>< =
(= >
)> ?
*@ A
	_verticesB K
.K L
LengthL R
)R S
;S T
Buffer 
_stagingBuffer !
=" #
default$ +
;+ ,
DeviceMemory  
_stagingBufferMemory -
=. /
default0 7
;7 8
CreateBuffer 
( 
_bufferSize $
,$ %
BufferUsageFlags& 6
.6 7
TransferSrcBit7 E
,E F
MemoryPropertyFlagsG Z
.Z [
HostVisibleBit[ i
|j k
MemoryPropertyFlagsl 
.	 ─
HostCachedBit
─ █
,
█ ▌
ref
▐ ▓
_stagingBuffer
⌠ ║
,
║ ╒
ref
ё ╕"
_stagingBufferMemory
╖ ╩
)
╩ ╪
;
╪ ╫
void 
* 
_data 
; 
VulkanRenderer   
.   
_vulkan   "
.  " #
	MapMemory  # ,
(  , -
VulkanRenderer  - ;
.  ; <
_logicalDevice  < J
,  J K 
_stagingBufferMemory  L `
,  ` a
$num  b c
,  c d
_bufferSize  e p
,  p q
$num  r s
,  s t
&  u v
_data  v {
)  { |
;  | }
	_vertices!! 
.!! 
AsSpan!! 
(!! 
)!! 
.!! 
CopyTo!! %
(!!% &
new!!& )
Span!!* .
<!!. /
Vertex!!/ 5
>!!5 6
(!!6 7
_data!!7 <
,!!< =
	_vertices!!> G
.!!G H
Length!!H N
)!!N O
)!!O P
;!!P Q
VulkanRenderer"" 
."" 
_vulkan"" "
.""" #
UnmapMemory""# .
("". /
VulkanRenderer""/ =
.""= >
_logicalDevice""> L
,""L M 
_stagingBufferMemory""N b
)""b c
;""c d
CreateBuffer$$ 
($$ 
_bufferSize$$ $
,$$$ %
BufferUsageFlags$$& 6
.$$6 7
TransferDstBit$$7 E
|$$F G
BufferUsageFlags$$H X
.$$X Y
VertexBufferBit$$Y h
|$$i j
_additionalFlags$$k {
,$${ | 
MemoryPropertyFlags	$$} ░
.
$$░ ▒
DeviceLocalBit
$$▒ ÷
,
$$÷ ═
ref
$$║ ╓
_vertexBuffer
$$╔ ╡
,
$$╡ Ё
ref
$$╢ ╥!
_vertexBufferMemory
$$╦ к
)
$$к л
;
$$л м

CopyBuffer&& 
(&& 
ref&& 
_stagingBuffer&& )
,&&) *
ref&&+ .
_vertexBuffer&&/ <
,&&< =
_bufferSize&&> I
)&&I J
;&&J K
VulkanRenderer'' 
.'' 
_vulkan'' "
.''" #
DestroyBuffer''# 0
(''0 1
VulkanRenderer''1 ?
.''? @
_logicalDevice''@ N
,''N O
_stagingBuffer''P ^
,''^ _
null''` d
)''d e
;''e f
VulkanRenderer(( 
.(( 
_vulkan(( "
.((" #

FreeMemory((# -
(((- .
VulkanRenderer((. <
.((< =
_logicalDevice((= K
,((K L 
_stagingBufferMemory((M a
,((a b
null((c g
)((g h
;((h i
})) 	
internal++ 
static++ 
void++ 
CreateIndexBuffer++ .
(++. /
ref++/ 2
ushort++3 9
[++9 :
]++: ;
_meshIndices++< H
,++H I
ref++J M
Buffer++N T
_indexBuffer++U a
,++a b
ref++c f
DeviceMemory++g s
_indexBufferMemory	++t ├
,
++├ ┤
BufferUsageFlags
++┬ ≤
_additionalFlags
++≥ ╘
)
++╘ ╙
{,, 	
ulong-- 
_bufferSize-- 
=-- 
(--  !
ulong--! &
)--& '
(--' (
Unsafe--( .
.--. /
SizeOf--/ 5
<--5 6
ushort--6 <
>--< =
(--= >
)--> ?
*--@ A
_meshIndices--B N
.--N O
Length--O U
)--U V
;--V W
Buffer.. 
_stagingBuffer.. !
=.." #
default..$ +
;..+ ,
DeviceMemory//  
_stagingBufferMemory// -
=//. /
default//0 7
;//7 8
CreateBuffer00 
(00 
_bufferSize00 $
,00$ %
BufferUsageFlags00& 6
.006 7
TransferSrcBit007 E
,00E F
MemoryPropertyFlags00G Z
.00Z [
HostVisibleBit00[ i
|00j k
MemoryPropertyFlags00l 
.	00 ─
HostCoherentBit
00─ ▐
,
00▐ ░
ref
00▒ ■
_stagingBuffer
00∙ ё
,
00ё ╓
ref
00╔ ╗"
_stagingBufferMemory
00╘ ╫
)
00╫ ╬
;
00╬ ©
void22 
*22 
_data22 
;22 
VulkanRenderer33 
.33 
_vulkan33 "
.33" #
	MapMemory33# ,
(33, -
VulkanRenderer33- ;
.33; <
_logicalDevice33< J
,33J K 
_stagingBufferMemory33L `
,33` a
$num33b c
,33c d
_bufferSize33e p
,33p q
$num33r s
,33s t
&33u v
_data33v {
)33{ |
;33| }
_meshIndices44 
.44 
AsSpan44 
(44  
)44  !
.44! "
CopyTo44" (
(44( )
new44) ,
Span44- 1
<441 2
ushort442 8
>448 9
(449 :
_data44: ?
,44? @
_meshIndices44A M
.44M N
Length44N T
)44T U
)44U V
;44V W
VulkanRenderer55 
.55 
_vulkan55 "
.55" #
UnmapMemory55# .
(55. /
VulkanRenderer55/ =
.55= >
_logicalDevice55> L
,55L M 
_stagingBufferMemory55N b
)55b c
;55c d
CreateBuffer77 
(77 
_bufferSize77 $
,77$ %
BufferUsageFlags77& 6
.776 7
TransferDstBit777 E
|77F G
BufferUsageFlags77H X
.77X Y
IndexBufferBit77Y g
|77h i
_additionalFlags77j z
,77z { 
MemoryPropertyFlags	77| ▐
.
77▐ ░
DeviceLocalBit
77░ ·
,
77· ÷
ref
77═ ё
_indexBuffer
77╓ ╟
,
77╟ ╠
ref
77╡ ╣ 
_indexBufferMemory
77╤ х
)
77х и
;
77и й
;
77к л

CopyBuffer88 
(88 
ref88 
_stagingBuffer88 )
,88) *
ref88+ .
_indexBuffer88/ ;
,88; <
_bufferSize88= H
)88H I
;88I J
VulkanRenderer:: 
.:: 
_vulkan:: "
.::" #
DestroyBuffer::# 0
(::0 1
VulkanRenderer::1 ?
.::? @
_logicalDevice::@ N
,::N O
_stagingBuffer::P ^
,::^ _
null::` d
)::d e
;::e f
VulkanRenderer;; 
.;; 
_vulkan;; "
.;;" #

FreeMemory;;# -
(;;- .
VulkanRenderer;;. <
.;;< =
_logicalDevice;;= K
,;;K L 
_stagingBufferMemory;;M a
,;;a b
null;;c g
);;g h
;;;h i
}<< 	
internal>> 
static>> 
void>> 
CreateUniformBuffer>> 0
(>>0 1
ref>>1 4
Buffer>>5 ;
[>>; <
]>>< =
?>>= >
_uniformBuffers>>? N
,>>N O
ref>>P S
DeviceMemory>>T `
[>>` a
]>>a b
?>>b c!
_uniformBuffersMemory>>d y
)>>y z
{?? 	
ulong@@ 
_bufferSize@@ 
=@@ 
(@@  !
ulong@@! &
)@@& '
Unsafe@@' -
.@@- .
SizeOf@@. 4
<@@4 5
UBO@@5 8
>@@8 9
(@@9 :
)@@: ;
;@@; <
_uniformBuffersAA 
=AA 
newAA !
BufferAA" (
[AA( )
VulkanRendererAA) 7
.AA7 8
_swapimageCountAA8 G
]AAG H
;AAH I!
_uniformBuffersMemoryBB !
=BB" #
newBB$ '
DeviceMemoryBB( 4
[BB4 5
VulkanRendererBB5 C
.BBC D
_swapimageCountBBD S
]BBS T
;BBT U
forDD 
(DD 
intDD 
iDD 
=DD 
$numDD 
;DD 
iDD 
<DD 
VulkanRendererDD  .
.DD. /
_swapimageCountDD/ >
;DD> ?
iDD@ A
++DDA C
)DDC D
{EE 
CreateBufferFF 
(FF 
_bufferSizeFF (
,FF( )
BufferUsageFlagsFF* :
.FF: ;
UniformBufferBitFF; K
,FFL M
MemoryPropertyFlagsFFN a
.FFa b
HostVisibleBitFFb p
|FFq r 
MemoryPropertyFlags	FFs ├
.
FF├ ┤
HostCoherentBit
FF┤ √
,
FF√ ≈
ref
FF≤ ⌡
_uniformBuffers
FF° ╚
[
FF╚ ╛
i
FF╛ ╜
]
FF╜ ╝
,
FF╝ ╞
ref
FF╟ Ё#
_uniformBuffersMemory
FF╢ и
[
FFи й
i
FFй к
]
FFк л
)
FFл м
;
FFм н
}GG 
}HH 	
internalJJ 
staticJJ 
voidJJ 
CreateLightUBOJJ +
(JJ+ ,
refJJ, /
BufferJJ0 6
[JJ6 7
]JJ7 8
_uniformBuffersJJ9 H
,JJH I
refJJJ M
DeviceMemoryJJN Z
[JJZ [
]JJ[ \!
_uniformBuffersMemoryJJ] r
,JJr s
intJJt w
_lightCount	JJx ┐
)
JJ┐ └
{KK 	
ulongLL 
_bufferSizeLL 
=LL 
(LL  !
ulongLL! &
)LL& '
(LL' (
sizeofLL( .
(LL. /
UBOLL/ 2
)LL2 3
*LL4 5
_lightCountLL6 A
)LLA B
;LLB C
_uniformBuffersMM 
=MM 
newMM !
BufferMM" (
[MM( )

RasterizerMM) 3
.MM3 4

_swapchainMM4 >
.MM> ?
_swapchainImagesMM? O
.MMO P
LengthMMP V
]MMV W
;MMW X!
_uniformBuffersMemoryNN !
=NN" #
newNN$ '
DeviceMemoryNN( 4
[NN4 5

RasterizerNN5 ?
.NN? @

_swapchainNN@ J
.NNJ K
_swapchainImagesNNK [
.NN[ \
LengthNN\ b
]NNb c
;NNc d
forPP 
(PP 
intPP 
iPP 
=PP 
$numPP 
;PP 
iPP 
<PP 

RasterizerPP  *
.PP* +

_swapchainPP+ 5
.PP5 6
_swapchainImagesPP6 F
.PPF G
LengthPPG M
;PPM N
iPPO P
++PPP R
)PPR S
{QQ 
CreateBufferRR 
(RR 
_bufferSizeRR (
,RR( )
BufferUsageFlagsRR* :
.RR: ;
StorageBufferBitRR; K
,RRK L
MemoryPropertyFlagsRRM `
.RR` a
HostVisibleBitRRa o
|RRp q 
MemoryPropertyFlags	RRr ┘
.
RR┘ ├
HostCoherentBit
RR├ ∙
,
RR∙ √
ref
RR≈  
_uniformBuffers
RR⌡ ╙
[
RR╙ ╚
i
RR╚ ╛
]
RR╛ ╜
,
RR╜ ╝
ref
RR╞ ╡#
_uniformBuffersMemory
RRЁ х
[
RRх и
i
RRи й
]
RRй к
)
RRк л
;
RRл м
}SS 
}TT 	
internalVV 
staticVV 
voidVV 
CreateTextureBufferVV 0
(VV0 1
refVV1 4
SilkVV5 9
.VV9 :
NETVV: =
.VV= >
VulkanVV> D
.VVD E
ImageVVE J
_textureImageVVK X
,VVX Y
refVVZ ]
DeviceMemoryVV^ j 
_textureBufferMemoryVVk 
)	VV ─
{WW 	
usingXX 
varXX 
_imageXX 
=XX 
ImageXX $
.XX$ %
LoadXX% )
<XX) *
	SixLaborsXX* 3
.XX3 4

ImageSharpXX4 >
.XX> ?
PixelFormatsXX? K
.XXK L
Rgba32XXL R
>XXR S
(XXS T
$strXXT q
)XXq r
;XXr s
ulongYY 

_imageSizeYY 
=YY 
(YY  
ulongYY  %
)YY% &
(YY& '
_imageYY' -
.YY- .
WidthYY. 3
*YY4 5
_imageYY6 <
.YY< =
HeightYY= C
*YYD E
_imageYYF L
.YYL M
	PixelTypeYYM V
.YYV W
BitsPerPixelYYW c
/YYd e
$numYYf g
)YYg h
;YYh i
Buffer[[ 
_stagingBuffer[[ !
=[[" #
default[[$ +
;[[+ ,
DeviceMemory\\  
_stagingBufferMemory\\ -
=\\. /
default\\0 7
;\\7 8
CreateBuffer]] 
(]] 

_imageSize]] #
,]]# $
BufferUsageFlags]]% 5
.]]5 6
TransferSrcBit]]6 D
,]]D E
MemoryPropertyFlags]]F Y
.]]Y Z
HostVisibleBit]]Z h
|]]i j
MemoryPropertyFlags]]k ~
.]]~ 
HostCoherentBit	]] ▌
,
]]▌ ▐
ref
]]░ ⌠
_stagingBuffer
]]■ ╒
,
]]╒ ё
ref
]]╓ ╖"
_stagingBufferMemory
]]╗ ╪
)
]]╪ ╫
;
]]╫ ╬
void__ 
*__ 
_data__ 
;__ 
VulkanRenderer`` 
.`` 
_vulkan`` "
.``" #
	MapMemory``# ,
(``, -
VulkanRenderer``- ;
.``; <
_logicalDevice``< J
,``J K 
_stagingBufferMemory``L `
,``` a
$num``b c
,``c d

_imageSize``e o
,``o p
$num``q r
,``r s
&``t u
_data``u z
)``z {
;``{ |
_imageaa 
.aa 
CopyPixelDataToaa "
(aa" #
newaa# &
Spanaa' +
<aa+ ,
byteaa, 0
>aa0 1
(aa1 2
_dataaa2 7
,aa7 8
(aa9 :
intaa: =
)aa= >

_imageSizeaa> H
)aaH I
)aaI J
;aaJ K
VulkanRendererbb 
.bb 
_vulkanbb "
.bb" #
UnmapMemorybb# .
(bb. /
VulkanRendererbb/ =
.bb= >
_logicalDevicebb> L
,bbL M 
_stagingBufferMemorybbN b
)bbb c
;bbc d
CreateImagedd 
(dd 
(dd 
uintdd 
)dd 
_imagedd $
.dd$ %
Widthdd% *
,dd* +
(dd, -
uintdd- 1
)dd1 2
_imagedd2 8
.dd8 9
Heightdd9 ?
,dd? @
FormatddA G
.ddG H
R8G8B8A8SrgbddH T
,ddT U
ImageTilingddV a
.dda b
Optimalddb i
,ddi j
ImageUsageFlagsddk z
.ddz {
TransferDstBit	dd{ ┴
|
dd┼ ▀
ImageUsageFlags
dd▄ ⌡
.
dd⌡ °

SampledBit
dd° ╕
,
dd╕ ╖!
MemoryPropertyFlags
dd╗ ╩
.
dd╩ ╪
DeviceLocalBit
dd╪ й
,
ddй к
ref
ddл о
_textureImage
ddп щ
,
ddщ ч
ref
ddъ Б"
_textureBufferMemory
ddЦ В
)
ddВ Ь
;
ddЬ Ы!
TransitionImageLayoutff !
(ff! "
_textureImageff" /
,ff/ 0
ImageLayoutff1 <
.ff< =
	Undefinedff= F
,ffF G
ImageLayoutffH S
.ffS T
TransferDstOptimalffT f
)fff g
;ffg h
CopyBufferToImagegg 
(gg 
_stagingBuffergg ,
,gg, -
_textureImagegg. ;
,gg; <
(gg= >
uintgg> B
)ggB C
_imageggC I
.ggI J
WidthggJ O
,ggO P
(ggQ R
uintggR V
)ggV W
_imageggW ]
.gg] ^
Heightgg^ d
)ggd e
;gge f!
TransitionImageLayouthh !
(hh! "
_textureImagehh" /
,hh/ 0
ImageLayouthh1 <
.hh< =
TransferDstOptimalhh= O
,hhO P
ImageLayouthhQ \
.hh\ ]!
ShaderReadOnlyOptimalhh] r
)hhr s
;hhs t
VulkanRendererjj 
.jj 
_vulkanjj "
.jj" #
DestroyBufferjj# 0
(jj0 1
VulkanRendererjj1 ?
.jj? @
_logicalDevicejj@ N
,jjN O
_stagingBufferjjP ^
,jj^ _
nulljj` d
)jjd e
;jje f
VulkanRendererkk 
.kk 
_vulkankk "
.kk" #

FreeMemorykk# -
(kk- .
VulkanRendererkk. <
.kk< =
_logicalDevicekk= K
,kkK L 
_stagingBufferMemorykkM a
,kka b
nullkkc g
)kkg h
;kkh i
}ll 	
internalnn 
staticnn 
voidnn !
CreateTransformBuffernn 2
(nn2 3
refnn3 6
Listnn7 ;
<nn; <
	Matrix4X4nn< E
<nnE F
floatnnF K
>nnK L
>nnL M

_instancesnnN X
,nnX Y
refnnZ ]
Buffernn^ d
_instanceBuffernne t
,nnt u
refnnv y
DeviceMemory	nnz ├
_instanceMemory
nn┤ √
,
nn√ ≈
BufferUsageFlags
nn≤ ╗
_additionalFlags
nn╘ ╧
)
nn╧ ╨
{oo 	
ulongpp 
_bufferSizepp 
=pp 
(pp  !
ulongpp! &
)pp& '
(pp' (
sizeofpp( .
(pp. /
	Matrix4X4pp/ 8
<pp8 9
floatpp9 >
>pp> ?
)pp? @
*ppA B

_instancesppC M
.ppM N
CountppN S
)ppS T
;ppT U
CreateBufferqq 
(qq 
_bufferSizeqq $
,qq$ %
BufferUsageFlagsqq& 6
.qq6 7
StorageBufferBitqq7 G
|qqH I
BufferUsageFlagsqqJ Z
.qqZ ["
ShaderDeviceAddressBitqq[ q
|qqr s
_additionalFlags	qqt └
,
qq└ ┘!
MemoryPropertyFlags
qq├ ≥
.
qq≥  
HostVisibleBit
qq  ╗
|
qq╘ ╙!
MemoryPropertyFlags
qq╚ ╬
.
qq╬ ©
HostCoherentBit
qq© н
,
qqо п
ref
qqя т
_instanceBuffer
qqу Д
,
qqД Е
ref
qqФ И
_instanceMemory
qqЙ Ы
)
qqЫ З
;
qqЗ Ш
voidss 
*ss 
_datass 
;ss 
VulkanRenderertt 
.tt 
_vulkantt "
.tt" #
	MapMemorytt# ,
(tt, -
VulkanRenderertt- ;
.tt; <
_logicalDevicett< J
,ttJ K
_instanceMemoryttL [
,tt[ \
$numtt] ^
,tt^ _
_bufferSizett` k
,ttk l
$numttm n
,ttn o
&ttp q
_datattq v
)ttv w
;ttw x
Spanuu 
<uu 
	Matrix4X4uu 
<uu 
floatuu  
>uu  !
>uu! "
_spanuu# (
=uu) *
newuu+ .
Spanuu/ 3
<uu3 4
	Matrix4X4uu4 =
<uu= >
floatuu> C
>uuC D
>uuD E
(uuE F
_datauuF K
,uuK L

_instancesuuM W
.uuW X
CountuuX ]
)uu] ^
;uu^ _
forvv 
(vv 
intvv 
ivv 
=vv 
$numvv 
;vv 
ivv 
<vv 

_instancesvv  *
.vv* +
Countvv+ 0
;vv0 1
ivv2 3
++vv3 5
)vv5 6
_spanww 
[ww 
iww 
]ww 
=ww 

_instancesww %
[ww% &
iww& '
]ww' (
;ww( )
VulkanRendererxx 
.xx 
_vulkanxx "
.xx" #
UnmapMemoryxx# .
(xx. /
VulkanRendererxx/ =
.xx= >
_logicalDevicexx> L
,xxL M
_instanceMemoryxxN ]
)xx] ^
;xx^ _
}yy 	
internal{{ 
static{{ 
void{{ 
CreateLightsBuffer{{ /
({{/ 0
ref{{0 3
List{{4 8
<{{8 9
Entity{{9 ?
>{{? @
_lightsToRender{{A P
,{{P Q
ref{{R U
Buffer{{V \
_lightBuffer{{] i
,{{i j
ref{{k n
DeviceMemory{{o {
_lightMemory	{{| ┬
)
{{┬ ┴
{|| 	
_lightBuffer}} 
=}} 
new}} 
Buffer}} %
(}}% &
)}}& '
;}}' (
_lightMemory~~ 
=~~ 
new~~ 
DeviceMemory~~ +
(~~+ ,
)~~, -
;~~- .
	LightData 
[ 
] 

_lightData "
=# $
new% (
	LightData) 2
[2 3
_lightsToRender3 B
.B C
CountC H
]H I
;I J
ulong
── 
_bufferSize
── 
=
── 
(
──  !
ulong
──! &
)
──& '
(
──' (
sizeof
──( .
(
──. /
	LightData
──/ 8
)
──8 9
*
──: ;

_lightData
──< F
.
──F G
Length
──G M
+
──N O
sizeof
──P V
(
──V W
int
──W Z
)
──Z [
)
──[ \
;
──\ ]
CreateBuffer
││ 
(
││ 
_bufferSize
││ $
,
││$ %
BufferUsageFlags
││& 6
.
││6 7
StorageBufferBit
││7 G
,
││G H!
MemoryPropertyFlags
││I \
.
││\ ]
HostVisibleBit
││] k
|
││l m"
MemoryPropertyFlags││n │
.│││ ┌
HostCoherentBit││┌ ▒
,││▒ ▓
ref││⌠ √
_lightBuffer││≈ ё
,││ё ╓
ref││╔ ╗
_lightMemory││╘ ╣
)││╣ ╤
;││╤ ╥
}
┌┌ 	
internal
└└ 
static
└└ 
void
└└ "
RecreateLightsBuffer
└└ 1
(
└└1 2
ref
└└2 5
List
└└6 :
<
└└: ;
Entity
└└; A
>
└└A B
_lightsToRender
└└C R
,
└└R S
ref
└└T W
Buffer
└└X ^
_lightBuffer
└└_ k
,
└└k l
ref
└└m p
DeviceMemory
└└q }
_lightMemory└└~ ┼
)└└┼ ▀
{
┘┘ 	

Rasterizer
├├ 
.
├├ 
_vulkan
├├ 
.
├├ 
DestroyBuffer
├├ ,
(
├├, -

Rasterizer
├├- 7
.
├├7 8
_logicalDevice
├├8 F
,
├├F G
_lightBuffer
├├H T
,
├├T U
null
├├V Z
)
├├Z [
;
├├[ \ 
CreateLightsBuffer
┤┤ 
(
┤┤ 
ref
┤┤ "
_lightsToRender
┤┤# 2
,
┤┤2 3
ref
┤┤4 7
_lightBuffer
┤┤8 D
,
┤┤D E
ref
┤┤F I
_lightMemory
┤┤J V
)
┤┤V W
;
┤┤W X
}
┬┬ 	
internal
┼┼ 
static
┼┼ 
void
┼┼ #
UpdateTransformBuffer
┼┼ 2
(
┼┼2 3
ref
┼┼3 6
List
┼┼7 ;
<
┼┼; <
	Matrix4X4
┼┼< E
<
┼┼E F
float
┼┼F K
>
┼┼K L
>
┼┼L M

_instances
┼┼N X
,
┼┼X Y
ref
┼┼Z ]
DeviceMemory
┼┼^ j
_instanceMemory
┼┼k z
)
┼┼z {
{
▀▀ 	
ulong
▄▄ 
_bufferSize
▄▄ 
=
▄▄ 
(
▄▄  !
ulong
▄▄! &
)
▄▄& '
(
▄▄' (
sizeof
▄▄( .
(
▄▄. /
	Matrix4X4
▄▄/ 8
<
▄▄8 9
float
▄▄9 >
>
▄▄> ?
)
▄▄? @
*
▄▄A B

_instances
▄▄C M
.
▄▄M N
Count
▄▄N S
)
▄▄S T
;
▄▄T U
void
▌▌ 
*
▌▌ 
_data
▌▌ 
;
▌▌ 
VulkanRenderer
▐▐ 
.
▐▐ 
_vulkan
▐▐ "
.
▐▐" #
	MapMemory
▐▐# ,
(
▐▐, -
VulkanRenderer
▐▐- ;
.
▐▐; <
_logicalDevice
▐▐< J
,
▐▐J K
_instanceMemory
▐▐L [
,
▐▐[ \
$num
▐▐] ^
,
▐▐^ _
_bufferSize
▐▐` k
,
▐▐k l
$num
▐▐m n
,
▐▐n o
&
▐▐p q
_data
▐▐q v
)
▐▐v w
;
▐▐w x
Span
░░ 
<
░░ 
	Matrix4X4
░░ 
<
░░ 
float
░░  
>
░░  !
>
░░! "
_span
░░# (
=
░░) *
new
░░+ .
Span
░░/ 3
<
░░3 4
	Matrix4X4
░░4 =
<
░░= >
float
░░> C
>
░░C D
>
░░D E
(
░░E F
_data
░░F K
,
░░K L

_instances
░░M W
.
░░W X
Count
░░X ]
)
░░] ^
;
░░^ _
for
▒▒ 
(
▒▒ 
int
▒▒ 
i
▒▒ 
=
▒▒ 
$num
▒▒ 
;
▒▒ 
i
▒▒ 
<
▒▒ 

_instances
▒▒  *
.
▒▒* +
Count
▒▒+ 0
;
▒▒0 1
i
▒▒2 3
++
▒▒3 5
)
▒▒5 6
_span
▓▓ 
[
▓▓ 
i
▓▓ 
]
▓▓ 
=
▓▓ 

_instances
▓▓ %
[
▓▓% &
i
▓▓& '
]
▓▓' (
;
▓▓( )
VulkanRenderer
⌠⌠ 
.
⌠⌠ 
_vulkan
⌠⌠ "
.
⌠⌠" #
UnmapMemory
⌠⌠# .
(
⌠⌠. /
VulkanRenderer
⌠⌠/ =
.
⌠⌠= >
_logicalDevice
⌠⌠> L
,
⌠⌠L M
_instanceMemory
⌠⌠N ]
)
⌠⌠] ^
;
⌠⌠^ _
}
■■ 	
internal
√√ 
static
√√ 
void
√√ !
UpdateUniformBuffer
√√ 0
(
√√0 1
AuroraCamera
√√1 =
_camera
√√> E
,
√√E F
uint
√√G K
_currentImage
√√L Y
,
√√Y Z
ref
√√[ ^
DeviceMemory
√√_ k
[
√√k l
]
√√l m$
_uniformBuffersMemory√√n ┐
)√√┐ └
{
≈≈ 	
UBO
≤≤ 
_ubo
≤≤ 
=
≤≤ 
new
≤≤ 
UBO
≤≤ 
(
≤≤ 
)
≤≤  
{
≥≥ 
_view
   
=
   
_camera
   
.
    
_view
    %
,
  % &
_projection
⌡⌡ 
=
⌡⌡ 
_camera
⌡⌡ %
.
⌡⌡% &
_projection
⌡⌡& 1
,
⌡⌡1 2
}
÷÷ 
;
÷÷ 
void
║║ 
*
║║ 
_data
║║ 
;
║║ 
VulkanRenderer
╒╒ 
.
╒╒ 
_vulkan
╒╒ "
.
╒╒" #
	MapMemory
╒╒# ,
(
╒╒, -
VulkanRenderer
╒╒- ;
.
╒╒; <
_logicalDevice
╒╒< J
,
╒╒J K#
_uniformBuffersMemory
╒╒L a
[
╒╒a b
_currentImage
╒╒b o
]
╒╒o p
,
╒╒p q
$num
╒╒r s
,
╒╒s t
(
╒╒u v
ulong
╒╒v {
)
╒╒{ |
Unsafe╒╒| ┌
.╒╒┌ ┐
SizeOf╒╒┐ ┴
<╒╒┴ ┼
UBO╒╒┼ █
>╒╒█ ▌
(╒╒▌ ▐
)╒╒▐ ░
,╒╒░ ▒
$num╒╒▓ ⌠
,╒╒⌠ ■
&╒╒∙ √
_data╒╒√ ⌡
)╒╒⌡ °
;╒╒° ²
new
ёё 
Span
ёё 
<
ёё 
UBO
ёё 
>
ёё 
(
ёё 
_data
ёё 
,
ёё  
$num
ёё! "
)
ёё" #
[
ёё# $
$num
ёё$ %
]
ёё% &
=
ёё' (
_ubo
ёё) -
;
ёё- .
VulkanRenderer
╓╓ 
.
╓╓ 
_vulkan
╓╓ "
.
╓╓" #
UnmapMemory
╓╓# .
(
╓╓. /
VulkanRenderer
╓╓/ =
.
╓╓= >
_logicalDevice
╓╓> L
,
╓╓L M#
_uniformBuffersMemory
╓╓N c
[
╓╓c d
_currentImage
╓╓d q
]
╓╓q r
)
╓╓r s
;
╓╓s t
}
╔╔ 	
internal
╖╖ 
static
╖╖ 
void
╖╖ !
UpdateLightUniforms
╖╖ 0
(
╖╖0 1
ref
╖╖1 4
List
╖╖5 9
<
╖╖9 :
Entity
╖╖: @
>
╖╖@ A
_lightsToRender
╖╖B Q
,
╖╖Q R
uint
╖╖S W
_currentImage
╖╖X e
,
╖╖e f
ref
╖╖g j
DeviceMemory
╖╖k w
[
╖╖w x
]
╖╖x y$
_uniformBuffersMemory╖╖z ▐
)╖╖▐ ░
{
╗╗ 	
ulong
╘╘ 
_bufferSize
╘╘ 
=
╘╘ 
(
╘╘  !
ulong
╘╘! &
)
╘╘& '
(
╘╘' (
sizeof
╘╘( .
(
╘╘. /
UBO
╘╘/ 2
)
╘╘2 3
*
╘╘4 5
_lightsToRender
╘╘6 E
.
╘╘E F
Count
╘╘F K
)
╘╘K L
;
╘╘L M
void
╙╙ 
*
╙╙ 
_data
╙╙ 
;
╙╙ 

Rasterizer
╚╚ 
.
╚╚ 
_vulkan
╚╚ 
.
╚╚ 
	MapMemory
╚╚ (
(
╚╚( )

Rasterizer
╚╚) 3
.
╚╚3 4
_logicalDevice
╚╚4 B
,
╚╚B C#
_uniformBuffersMemory
╚╚D Y
[
╚╚Y Z
_currentImage
╚╚Z g
]
╚╚g h
,
╚╚h i
$num
╚╚j k
,
╚╚k l
_bufferSize
╚╚m x
,
╚╚x y
$num
╚╚z {
,
╚╚{ |
&
╚╚} ~
_data╚╚~ ┐
)╚╚┐ └
;╚╚└ ┘
Span
╜╜ 
<
╜╜ 
UBO
╜╜ 
>
╜╜ 
_span
╜╜ 
=
╜╜ 
new
╜╜ !
Span
╜╜" &
<
╜╜& '
UBO
╜╜' *
>
╜╜* +
(
╜╜+ ,
_data
╜╜, 1
,
╜╜1 2
_lightsToRender
╜╜3 B
.
╜╜B C
Count
╜╜C H
)
╜╜H I
;
╜╜I J
for
╝╝ 
(
╝╝ 
int
╝╝ 
i
╝╝ 
=
╝╝ 
$num
╝╝ 
;
╝╝ 
i
╝╝ 
<
╝╝ 
_lightsToRender
╝╝  /
.
╝╝/ 0
Count
╝╝0 5
;
╝╝5 6
i
╝╝7 8
++
╝╝8 :
)
╝╝: ;
{
╞╞ 
_span
╟╟ 
[
╟╟ 
i
╟╟ 
]
╟╟ 
=
╟╟ 
new
╟╟ 
UBO
╟╟ "
(
╟╟" #
)
╟╟# $
{
╠╠ 
_view
╡╡ 
=
╡╡ 
_lightsToRender
╡╡ +
[
╡╡+ ,
i
╡╡, -
]
╡╡- .
.
╡╡. /
GetComponent
╡╡/ ;
<
╡╡; <"
LightsourceComponent
╡╡< P
>
╡╡P Q
(
╡╡Q R
)
╡╡R S
.
╡╡S T

_lightView
╡╡T ^
,
╡╡^ _
_projection
ЁЁ 
=
ЁЁ  !
_lightsToRender
ЁЁ" 1
[
ЁЁ1 2
i
ЁЁ2 3
]
ЁЁ3 4
.
ЁЁ4 5
GetComponent
ЁЁ5 A
<
ЁЁA B"
LightsourceComponent
ЁЁB V
>
ЁЁV W
(
ЁЁW X
)
ЁЁX Y
.
ЁЁY Z
_lightProjection
ЁЁZ j
}
╢╢ 
;
╢╢ 
}
╣╣ 

Rasterizer
╤╤ 
.
╤╤ 
_vulkan
╤╤ 
.
╤╤ 
UnmapMemory
╤╤ *
(
╤╤* +

Rasterizer
╤╤+ 5
.
╤╤5 6
_logicalDevice
╤╤6 D
,
╤╤D E#
_uniformBuffersMemory
╤╤F [
[
╤╤[ \
_currentImage
╤╤\ i
]
╤╤i j
)
╤╤j k
;
╤╤k l
}
╥╥ 	
internal
╧╧ 
static
╧╧ 
void
╧╧  
UpdateLightsBuffer
╧╧ /
(
╧╧/ 0
ref
╧╧0 3
List
╧╧4 8
<
╧╧8 9
Entity
╧╧9 ?
>
╧╧? @
_lightsToRender
╧╧A P
,
╧╧P Q
ref
╧╧R U
DeviceMemory
╧╧V b
_lightMemory
╧╧c o
)
╧╧o p
{
╨╨ 	
	LightData
╩╩ 
[
╩╩ 
]
╩╩ 

_lightData
╩╩ "
=
╩╩# $
new
╩╩% (
	LightData
╩╩) 2
[
╩╩2 3
_lightsToRender
╩╩3 B
.
╩╩B C
Count
╩╩C H
]
╩╩H I
;
╩╩I J
for
╪╪ 
(
╪╪ 
int
╪╪ 
i
╪╪ 
=
╪╪ 
$num
╪╪ 
;
╪╪ 
i
╪╪ 
<
╪╪ 
_lightsToRender
╪╪  /
.
╪╪/ 0
Count
╪╪0 5
;
╪╪5 6
i
╪╪7 8
++
╪╪8 :
)
╪╪: ;
{
╫╫ 

_lightData
©© 
[
©© 
i
©© 
]
©© 
.
©© 
_pos
©© "
=
©©# $
_lightsToRender
©©% 4
[
©©4 5
i
©©5 6
]
©©6 7
.
©©7 8
	transform
©©8 A
.
©©A B
position
©©B J
;
©©J K

_lightData
юю 
[
юю 
i
юю 
]
юю 
.
юю 
_color
юю $
=
юю% &
_lightsToRender
юю' 6
[
юю6 7
i
юю7 8
]
юю8 9
.
юю9 :
GetComponent
юю: F
<
ююF G"
LightsourceComponent
ююG [
>
юю[ \
(
юю\ ]
)
юю] ^
.
юю^ _
_lightColor
юю_ j
;
ююj k
}
аа 
ulong
бб 
_bufferSize
бб 
=
бб 
(
бб  !
ulong
бб! &
)
бб& '
(
бб' (
sizeof
бб( .
(
бб. /
	LightData
бб/ 8
)
бб8 9
*
бб: ;

_lightData
бб< F
.
ббF G
Length
ббG M
+
ббN O
sizeof
ббP V
(
ббV W
int
ббW Z
)
ббZ [
)
бб[ \
;
бб\ ]
void
дд 
*
дд 
_data
дд 
;
дд 

Rasterizer
ее 
.
ее 
_vulkan
ее 
.
ее 
	MapMemory
ее (
(
ее( )

Rasterizer
ее) 3
.
ее3 4
_logicalDevice
ее4 B
,
ееB C
_lightMemory
ееD P
,
ееP Q
$num
ееR S
,
ееS T
_bufferSize
ееU `
,
ее` a
$num
ееb c
,
ееc d
&
ееe f
_data
ееf k
)
ееk l
;
ееl m
Span
гг 
<
гг 
	LightData
гг 
>
гг 
_span
гг !
=
гг" #
new
гг$ '
Span
гг( ,
<
гг, -
	LightData
гг- 6
>
гг6 7
(
гг7 8
_data
гг8 =
,
гг= >

_lightData
гг? I
.
ггI J
Length
ггJ P
)
ггP Q
;
ггQ R
for
хх 
(
хх 
int
хх 
i
хх 
=
хх 
$num
хх 
;
хх 
i
хх 
<
хх 

_lightData
хх  *
.
хх* +
Length
хх+ 1
;
хх1 2
i
хх3 4
++
хх4 6
)
хх6 7
_span
ии 
[
ии 
i
ии 
]
ии 
=
ии 

_lightData
ии %
[
ии% &
i
ии& '
]
ии' (
;
ии( )
new
кк 
Span
кк 
<
кк 
int
кк 
>
кк 
(
кк 
(
кк 
byte
кк 
*
кк  
)
кк  !
_data
кк! &
+
кк' (
sizeof
кк) /
(
кк/ 0
	LightData
кк0 9
)
кк9 :
*
кк; <
_lightsToRender
кк= L
.
ккL M
Count
ккM R
,
ккR S
$num
ккT U
)
ккU V
[
ккV W
$num
ккW X
]
ккX Y
=
ккZ [
_lightsToRender
кк\ k
.
ккk l
Count
ккl q
;
ккq r

Rasterizer
лл 
.
лл 
_vulkan
лл 
.
лл 
UnmapMemory
лл *
(
лл* +

Rasterizer
лл+ 5
.
лл5 6
_logicalDevice
лл6 D
,
ллD E
_lightMemory
ллF R
)
ллR S
;
ллS T
}
мм 	
private
оо 
static
оо 
void
оо 
CopyBufferToImage
оо -
(
оо- .
Buffer
оо. 4
_buffer
оо5 <
,
оо< =
Silk
оо> B
.
ооB C
NET
ооC F
.
ооF G
Vulkan
ооG M
.
ооM N
Image
ооN S
_image
ооT Z
,
ооZ [
uint
оо\ `
_width
ооa g
,
ооg h
uint
ооi m
_height
ооn u
)
ооu v
{
пп 	
CommandBuffer
яя 
_commandBuffer
яя (
=
яя) *%
BeginSingleTimeCommands
яя+ B
(
яяB C
)
яяC D
;
яяD E
BufferImageCopy
сс 
_bufferImageCopy
сс ,
=
сс- .
new
сс/ 2
BufferImageCopy
сс3 B
(
ссB C
)
ссC D
{
тт 
BufferOffset
уу 
=
уу 
$num
уу  
,
уу  !
BufferRowLength
жж 
=
жж  !
$num
жж" #
,
жж# $
BufferImageHeight
вв !
=
вв" #
$num
вв$ %
,
вв% &
ImageSubresource
ьь  
=
ьь! "
{
ыы 

AspectMask
зз 
=
зз 
ImageAspectFlags
зз -
.
зз- .
ColorBit
зз. 6
,
зз6 7
MipLevel
шш 
=
шш 
$num
шш 
,
шш 
BaseArrayLayer
ээ 
=
ээ  
$num
ээ! "
,
ээ" #

LayerCount
щщ 
=
щщ 
$num
щщ 
,
щщ 
}
чч 
,
чч 
ImageOffset
ъъ 
=
ъъ 
new
ъъ !
Offset3D
ъъ" *
(
ъъ* +
$num
ъъ+ ,
,
ъъ, -
$num
ъъ. /
,
ъъ/ 0
$num
ъъ1 2
)
ъъ2 3
,
ъъ3 4
ImageExtent
ЮЮ 
=
ЮЮ 
new
ЮЮ !
Extent3D
ЮЮ" *
(
ЮЮ* +
_width
ЮЮ+ 1
,
ЮЮ1 2
_height
ЮЮ3 :
,
ЮЮ: ;
$num
ЮЮ< =
)
ЮЮ= >
,
ЮЮ> ?
}
ББ 
;
ББ 
VulkanRenderer
ДД 
.
ДД 
_vulkan
ДД "
!
ДД" #
.
ДД# $"
CmdCopyBufferToImage
ДД$ 8
(
ДД8 9
_commandBuffer
ДД9 G
,
ДДG H
_buffer
ДДI P
,
ДДP Q
_image
ДДR X
,
ДДX Y
ImageLayout
ДДZ e
.
ДДe f 
TransferDstOptimal
ДДf x
,
ДДx y
$num
ДДz {
,
ДД{ |
_bufferImageCopyДД} █
)ДД█ ▌
;ДД▌ ▐#
EndSingleTimeCommands
ЕЕ !
(
ЕЕ! "
ref
ЕЕ" %
_commandBuffer
ЕЕ& 4
)
ЕЕ4 5
;
ЕЕ5 6
}
ФФ 	
internal
ХХ 
static
ХХ 
CommandBuffer
ХХ %%
BeginSingleTimeCommands
ХХ& =
(
ХХ= >
)
ХХ> ?
{
ИИ 	'
CommandBufferAllocateInfo
ЙЙ %

_allocInfo
ЙЙ& 0
=
ЙЙ1 2
new
ЙЙ3 6'
CommandBufferAllocateInfo
ЙЙ7 P
(
ЙЙP Q
)
ЙЙQ R
{
КК 
SType
ЛЛ 
=
ЛЛ 
StructureType
ЛЛ %
.
ЛЛ% &'
CommandBufferAllocateInfo
ЛЛ& ?
,
ЛЛ? @
Level
ММ 
=
ММ  
CommandBufferLevel
ММ *
.
ММ* +
Primary
ММ+ 2
,
ММ2 3
CommandPool
НН 
=
НН 
VulkanRenderer
НН ,
.
НН, -
_commandPool
НН- 9
,
НН9 : 
CommandBufferCount
ОО "
=
ОО# $
$num
ОО% &
,
ОО& '
}
ПП 
;
ПП 
VulkanRenderer
РР 
.
РР 
_vulkan
РР "
!
РР" #
.
РР# $$
AllocateCommandBuffers
РР$ :
(
РР: ;
VulkanRenderer
РР; I
.
РРI J
_logicalDevice
РРJ X
,
РРX Y

_allocInfo
РРZ d
,
РРd e
out
РРf i
CommandBuffer
РРj w
_commandBufferРРx ├
)РР├ ┤
;РР┤ ┬$
CommandBufferBeginInfo
ТТ "
	beginInfo
ТТ# ,
=
ТТ- .
new
ТТ/ 2$
CommandBufferBeginInfo
ТТ3 I
(
ТТI J
)
ТТJ K
{
УУ 
SType
ЖЖ 
=
ЖЖ 
StructureType
ЖЖ %
.
ЖЖ% &$
CommandBufferBeginInfo
ЖЖ& <
,
ЖЖ< =
Flags
ВВ 
=
ВВ %
CommandBufferUsageFlags
ВВ /
.
ВВ/ 0
OneTimeSubmitBit
ВВ0 @
,
ВВ@ A
}
ЬЬ 
;
ЬЬ 
VulkanRenderer
ЗЗ 
.
ЗЗ 
_vulkan
ЗЗ "
!
ЗЗ" #
.
ЗЗ# $ 
BeginCommandBuffer
ЗЗ$ 6
(
ЗЗ6 7
_commandBuffer
ЗЗ7 E
,
ЗЗE F
	beginInfo
ЗЗG P
)
ЗЗP Q
;
ЗЗQ R
return
ЭЭ 
_commandBuffer
ЭЭ !
;
ЭЭ! "
}
ЩЩ 	
internal
ЪЪ 
static
ЪЪ 
void
ЪЪ #
EndSingleTimeCommands
ЪЪ 2
(
ЪЪ2 3
ref
ЪЪ3 6
CommandBuffer
ЪЪ7 D
commandBuffer
ЪЪE R
)
ЪЪR S
{
── 	
VulkanRenderer
││ 
.
││ 
_vulkan
││ "
!
││" #
.
││# $
EndCommandBuffer
││$ 4
(
││4 5
commandBuffer
││5 B
)
││B C
;
││C D
fixed
┐┐ 
(
┐┐ 
CommandBuffer
┐┐ 
*
┐┐  
_cptr
┐┐! &
=
┐┐' (
&
┐┐) *
commandBuffer
┐┐* 7
)
┐┐7 8
{
└└ 

SubmitInfo
┘┘ 

submitInfo
┘┘ %
=
┘┘& '
new
┘┘( +
(
┘┘+ ,
)
┘┘, -
{
├├ 
SType
┤┤ 
=
┤┤ 
StructureType
┤┤ )
.
┤┤) *

SubmitInfo
┤┤* 4
,
┤┤4 5 
CommandBufferCount
┬┬ &
=
┬┬' (
$num
┬┬) *
,
┬┬* +
PCommandBuffers
┴┴ #
=
┴┴$ %
_cptr
┴┴& +
,
┴┴+ ,
}
┼┼ 
;
┼┼ 
Result
▀▀ 
queue
▀▀ 
,
▀▀ 
	queuewait
▀▀ '
,
▀▀' (

devicewait
▀▀) 3
;
▀▀3 4
queue
▄▄ 
=
▄▄ 
VulkanRenderer
▄▄ '
.
▄▄' (
_vulkan
▄▄( /
!
▄▄/ 0
.
▄▄0 1
QueueSubmit
▄▄1 <
(
▄▄< =
VulkanRenderer
▄▄= K
.
▄▄K L
_graphicsQueue
▄▄L Z
,
▄▄Z [
$num
▄▄\ ]
,
▄▄] ^

submitInfo
▄▄_ i
,
▄▄i j
default
▄▄k r
)
▄▄r s
;
▄▄s t
	queuewait
██ 
=
██ 
VulkanRenderer
██ *
.
██* +
_vulkan
██+ 2
!
██2 3
.
██3 4
QueueWaitIdle
██4 A
(
██A B
VulkanRenderer
██B P
.
██P Q
_graphicsQueue
██Q _
)
██_ `
;
██` a

devicewait
▌▌ 
=
▌▌ 
VulkanRenderer
▌▌ +
.
▌▌+ ,
_vulkan
▌▌, 3
!
▌▌3 4
.
▌▌4 5
DeviceWaitIdle
▌▌5 C
(
▌▌C D
VulkanRenderer
▌▌D R
.
▌▌R S
_logicalDevice
▌▌S a
)
▌▌a b
;
▌▌b c
if
▐▐ 
(
▐▐ 
queue
▐▐ 
!=
▐▐ 
	queuewait
▐▐ %
&&
▐▐& (
queue
▐▐) .
!=
▐▐/ 1

devicewait
▐▐2 <
&&
▐▐= ?
queue
▐▐@ E
!=
▐▐F H
Result
▐▐I O
.
▐▐O P
Success
▐▐P W
)
▐▐W X
{
░░ 
throw
▒▒ 
new
▒▒ 
	Exception
▒▒ '
(
▒▒' (
$str
▒▒( I
)
▒▒I J
;
▒▒J K
}
▓▓ 
VulkanRenderer
■■ 
.
■■ 
_vulkan
■■ &
!
■■& '
.
■■' ( 
FreeCommandBuffers
■■( :
(
■■: ;
VulkanRenderer
■■; I
.
■■I J
_logicalDevice
■■J X
,
■■X Y
VulkanRenderer
■■Z h
.
■■h i
_commandPool
■■i u
,
■■u v
$num
■■w x
,
■■x y
_cptr
■■z 
)■■ ─
;■■─ │
}
∙∙ 
}
√√ 	
private
≤≤ 
static
≤≤ 
void
≤≤ #
TransitionImageLayout
≤≤ 1
(
≤≤1 2
Silk
≤≤2 6
.
≤≤6 7
NET
≤≤7 :
.
≤≤: ;
Vulkan
≤≤; A
.
≤≤A B
Image
≤≤B G
_image
≤≤H N
,
≤≤N O
ImageLayout
≤≤P [

_oldLayout
≤≤\ f
,
≤≤f g
ImageLayout
≤≤h s

_newLayout
≤≤t ~
)
≤≤~ 
{
≥≥ 	
CommandBuffer
   
_commandBuffer
   (
=
  ) *%
BeginSingleTimeCommands
  + B
(
  B C
)
  C D
;
  D E 
ImageMemoryBarrier
°° 
_barrier
°° '
=
°°( )
new
°°* -
(
°°- .
)
°°. /
{
²² 
SType
·· 
=
·· 
StructureType
·· %
.
··% & 
ImageMemoryBarrier
··& 8
,
··8 9
	OldLayout
÷÷ 
=
÷÷ 

_oldLayout
÷÷ &
,
÷÷& '
	NewLayout
══ 
=
══ 

_newLayout
══ &
,
══& '!
SrcQueueFamilyIndex
║║ #
=
║║$ %
Vk
║║& (
.
║║( ) 
QueueFamilyIgnored
║║) ;
,
║║; <!
DstQueueFamilyIndex
╒╒ #
=
╒╒$ %
Vk
╒╒& (
.
╒╒( ) 
QueueFamilyIgnored
╒╒) ;
,
╒╒; <
Image
ёё 
=
ёё 
_image
ёё 
,
ёё 
SubresourceRange
╓╓  
=
╓╓! "
{
╔╔ 

AspectMask
╕╕ 
=
╕╕  
ImageAspectFlags
╕╕! 1
.
╕╕1 2
ColorBit
╕╕2 :
,
╕╕: ;
BaseMipLevel
╖╖  
=
╖╖! "
$num
╖╖# $
,
╖╖$ %

LevelCount
╗╗ 
=
╗╗  
$num
╗╗! "
,
╗╗" #
BaseArrayLayer
╘╘ "
=
╘╘# $
$num
╘╘% &
,
╘╘& '

LayerCount
╙╙ 
=
╙╙  
$num
╙╙! "
,
╙╙" #
}
╚╚ 
}
╛╛ 
;
╛╛  
PipelineStageFlags
╜╜ 
sourceStage
╜╜ *
;
╜╜* + 
PipelineStageFlags
╝╝ 
destinationStage
╝╝ /
;
╝╝/ 0
if
╟╟ 
(
╟╟ 

_oldLayout
╟╟ 
==
╟╟ 
ImageLayout
╟╟ )
.
╟╟) *
	Undefined
╟╟* 3
&&
╟╟4 6

_newLayout
╟╟7 A
==
╟╟B D
ImageLayout
╟╟E P
.
╟╟P Q 
TransferDstOptimal
╟╟Q c
)
╟╟c d
{
╠╠ 
_barrier
╡╡ 
.
╡╡ 
SrcAccessMask
╡╡ &
=
╡╡' (
$num
╡╡) *
;
╡╡* +
_barrier
ЁЁ 
.
ЁЁ 
DstAccessMask
ЁЁ &
=
ЁЁ' (
AccessFlags
ЁЁ) 4
.
ЁЁ4 5
TransferWriteBit
ЁЁ5 E
;
ЁЁE F
sourceStage
╣╣ 
=
╣╣  
PipelineStageFlags
╣╣ 0
.
╣╣0 1
TopOfPipeBit
╣╣1 =
;
╣╣= >
destinationStage
╤╤  
=
╤╤! " 
PipelineStageFlags
╤╤# 5
.
╤╤5 6
TransferBit
╤╤6 A
;
╤╤A B
}
╥╥ 
else
╦╦ 
if
╦╦ 
(
╦╦ 

_oldLayout
╦╦ 
==
╦╦  "
ImageLayout
╦╦# .
.
╦╦. / 
TransferDstOptimal
╦╦/ A
&&
╦╦B D

_newLayout
╦╦E O
==
╦╦P R
ImageLayout
╦╦S ^
.
╦╦^ _#
ShaderReadOnlyOptimal
╦╦_ t
)
╦╦t u
{
╧╧ 
_barrier
╨╨ 
.
╨╨ 
SrcAccessMask
╨╨ &
=
╨╨' (
AccessFlags
╨╨) 4
.
╨╨4 5
TransferWriteBit
╨╨5 E
;
╨╨E F
_barrier
╩╩ 
.
╩╩ 
DstAccessMask
╩╩ &
=
╩╩' (
AccessFlags
╩╩) 4
.
╩╩4 5
ShaderReadBit
╩╩5 B
;
╩╩B C
sourceStage
╫╫ 
=
╫╫  
PipelineStageFlags
╫╫ 0
.
╫╫0 1
TransferBit
╫╫1 <
;
╫╫< =
destinationStage
╬╬  
=
╬╬! " 
PipelineStageFlags
╬╬# 5
.
╬╬5 6
FragmentShaderBit
╬╬6 G
;
╬╬G H
}
©© 
else
юю 
{
аа 
throw
бб 
new
бб 
	Exception
бб #
(
бб# $
$str
бб$ D
)
ббD E
;
ббE F
}
цц 
VulkanRenderer
ее 
.
ее 
_vulkan
ее "
!
ее" #
.
ее# $ 
CmdPipelineBarrier
ее$ 6
(
ее6 7
_commandBuffer
ее7 E
,
ееE F
sourceStage
ееG R
,
ееR S
destinationStage
ееT d
,
ееd e
$num
ееf g
,
ееg h
$num
ееi j
,
ееj k
null
ееl p
,
ееp q
$num
ееr s
,
ееs t
null
ееu y
,
ееy z
$num
ее{ |
,
ее| }
_barrierее~ ├
)ее├ ┤
;ее┤ ┬#
EndSingleTimeCommands
фф !
(
фф! "
ref
фф" %
_commandBuffer
фф& 4
)
фф4 5
;
фф5 6
}
гг 	
internal
ии 
static
ии 
void
ии 
CreateBuffer
ии )
(
ии) *
ulong
ии* /
_size
ии0 5
,
ии5 6
BufferUsageFlags
ии7 G
_usage
ииH N
,
ииN O!
MemoryPropertyFlags
ииP c
_properties
ииd o
,
ииo p
ref
ииq t
Buffer
ииu {
_bufferии| ┐
,ии┐ └
refии┘ ┬
DeviceMemoryии┴ ∙
_bufferMemoryии√ ё
)ииё ╓
{
йй 	
BufferCreateInfo
кк 
_bufferCreateInfo
кк .
=
кк/ 0
new
кк1 4
BufferCreateInfo
кк5 E
(
ккE F
)
ккF G
{
лл 
SType
мм 
=
мм 
StructureType
мм %
.
мм% &
BufferCreateInfo
мм& 6
,
мм6 7
Size
нн 
=
нн 
_size
нн 
,
нн 
Usage
оо 
=
оо 
_usage
оо 
,
оо 
SharingMode
пп 
=
пп 
SharingMode
пп )
.
пп) *
	Exclusive
пп* 3
}
яя 
;
яя 
fixed
сс 
(
сс 
Buffer
сс 
*
сс 

_bufferPtr
сс %
=
сс& '
&
сс( )
_buffer
сс) 0
)
сс0 1
{
тт 
if
уу 
(
уу 
VulkanRenderer
уу "
.
уу" #
_vulkan
уу# *
.
уу* +
CreateBuffer
уу+ 7
(
уу7 8
VulkanRenderer
уу8 F
.
ууF G
_logicalDevice
ууG U
,
ууU V
_bufferCreateInfo
ууW h
,
ууh i
null
ууj n
,
ууn o

_bufferPtr
ууp z
)
ууz {
!=
уу| ~
Resultуу ┘
.уу┘ ├
Successуу├ █
)уу█ ▌
{
жж 
throw
вв 
new
вв 
	Exception
вв '
(
вв' (
$str
вв( C
)
ввC D
;
ввD E
}
ьь 
}
ыы  
MemoryRequirements
зз 
_memReqs
зз '
=
зз( )
new
зз* - 
MemoryRequirements
зз. @
(
зз@ A
)
ззA B
;
ззB C
VulkanRenderer
шш 
.
шш 
_vulkan
шш "
.
шш" #)
GetBufferMemoryRequirements
шш# >
(
шш> ?
VulkanRenderer
шш? M
.
шшM N
_logicalDevice
шшN \
,
шш\ ]
_buffer
шш^ e
,
шшe f
out
шшg j
_memReqs
шшk s
)
шшs t
;
шшt u
var
щщ 
allocateFlagsInfo
щщ !
=
щщ" #
new
щщ$ '%
MemoryAllocateFlagsInfo
щщ( ?
{
чч 
SType
ъъ 
=
ъъ 
StructureType
ъъ %
.
ъъ% &%
MemoryAllocateFlagsInfo
ъъ& =
,
ъъ= >
Flags
ЮЮ 
=
ЮЮ !
MemoryAllocateFlags
ЮЮ +
.
ЮЮ+ ,
AddressBitKhr
ЮЮ, 9
}
АА 
;
АА  
MemoryAllocateInfo
ББ 
_allocateInfo
ББ ,
=
ББ- .
new
ББ/ 2 
MemoryAllocateInfo
ББ3 E
(
ББE F
)
ББF G
{
ЦЦ 
SType
ДД 
=
ДД 
StructureType
ДД %
.
ДД% & 
MemoryAllocateInfo
ДД& 8
,
ДД8 9
AllocationSize
ЕЕ 
=
ЕЕ  
_memReqs
ЕЕ! )
.
ЕЕ) *
Size
ЕЕ* .
,
ЕЕ. /
MemoryTypeIndex
ФФ 
=
ФФ  !
FindMemoryType
ФФ" 0
(
ФФ0 1
_memReqs
ФФ1 9
.
ФФ9 :
MemoryTypeBits
ФФ: H
,
ФФH I
_properties
ФФJ U
)
ФФU V
,
ФФV W
PNext
ГГ 
=
ГГ 
&
ГГ 
allocateFlagsInfo
ГГ *
}
ХХ 
;
ХХ 
fixed
ЙЙ 
(
ЙЙ 
DeviceMemory
ЙЙ 
*
ЙЙ  
_bufferMemoryPtr
ЙЙ! 1
=
ЙЙ2 3
&
ЙЙ4 5
_bufferMemory
ЙЙ5 B
)
ЙЙB C
{
КК 
if
ЛЛ 
(
ЛЛ 
VulkanRenderer
ЛЛ "
.
ЛЛ" #
_vulkan
ЛЛ# *
.
ЛЛ* +
AllocateMemory
ЛЛ+ 9
(
ЛЛ9 :
VulkanRenderer
ЛЛ: H
.
ЛЛH I
_logicalDevice
ЛЛI W
,
ЛЛW X
_allocateInfo
ЛЛY f
,
ЛЛf g
null
ЛЛh l
,
ЛЛl m
_bufferMemoryPtr
ЛЛn ~
)
ЛЛ~ 
!=ЛЛ─ ┌
ResultЛЛ┐ ┴
.ЛЛ┴ ┼
SuccessЛЛ┼ ▒
)ЛЛ▒ ▓
{
ММ 
throw
НН 
new
НН 
	Exception
НН '
(
НН' (
$str
НН( J
)
ННJ K
;
ННK L
}
ОО 
}
ПП 
VulkanRenderer
РР 
.
РР 
_vulkan
РР "
.
РР" #
BindBufferMemory
РР# 3
(
РР3 4
VulkanRenderer
РР4 B
.
РРB C
_logicalDevice
РРC Q
,
РРQ R
_buffer
РРS Z
,
РРZ [
_bufferMemory
РР\ i
,
РРi j
$num
РРk l
)
РРl m
;
РРm n
}
СС 	
private
УУ 
static
УУ 
void
УУ 

CopyBuffer
УУ &
(
УУ& '
ref
УУ' *
Buffer
УУ+ 1
_sourceBuffer
УУ2 ?
,
УУ? @
ref
УУA D
Buffer
УУE K

_dstBuffer
УУL V
,
УУV W
ulong
УУX ]

bufferSize
УУ^ h
)
УУh i
{
ЖЖ 	'
CommandBufferAllocateInfo
ВВ %

_allocInfo
ВВ& 0
=
ВВ1 2
new
ВВ3 6'
CommandBufferAllocateInfo
ВВ7 P
(
ВВP Q
)
ВВQ R
{
ЬЬ 
SType
ЫЫ 
=
ЫЫ 
StructureType
ЫЫ %
.
ЫЫ% &'
CommandBufferAllocateInfo
ЫЫ& ?
,
ЫЫ? @
Level
ЗЗ 
=
ЗЗ  
CommandBufferLevel
ЗЗ *
.
ЗЗ* +
Primary
ЗЗ+ 2
,
ЗЗ2 3
CommandPool
ШШ 
=
ШШ 
VulkanRenderer
ШШ ,
.
ШШ, -
_commandPool
ШШ- 9
,
ШШ9 : 
CommandBufferCount
ЭЭ "
=
ЭЭ# $
$num
ЭЭ% &
}
ЩЩ 
;
ЩЩ 
CommandBuffer
ЧЧ !
_localCommandBuffer
ЧЧ -
;
ЧЧ- .
VulkanRenderer
ЪЪ 
.
ЪЪ 
_vulkan
ЪЪ "
.
ЪЪ" #$
AllocateCommandBuffers
ЪЪ# 9
(
ЪЪ9 :
VulkanRenderer
ЪЪ: H
.
ЪЪH I
_logicalDevice
ЪЪI W
,
ЪЪW X

_allocInfo
ЪЪY c
,
ЪЪc d
out
ЪЪe h!
_localCommandBuffer
ЪЪi |
)
ЪЪ| }
;
ЪЪ} ~$
CommandBufferBeginInfo
││ "
_cBBeginInfo
││# /
=
││0 1
new
││2 5$
CommandBufferBeginInfo
││6 L
(
││L M
)
││M N
{
┌┌ 
SType
┐┐ 
=
┐┐ 
StructureType
┐┐ %
.
┐┐% &$
CommandBufferBeginInfo
┐┐& <
,
┐┐< =
Flags
└└ 
=
└└ %
CommandBufferUsageFlags
└└ /
.
└└/ 0
OneTimeSubmitBit
└└0 @
}
┘┘ 
;
┘┘ 
VulkanRenderer
├├ 
.
├├ 
_vulkan
├├ "
.
├├" # 
BeginCommandBuffer
├├# 5
(
├├5 6!
_localCommandBuffer
├├6 I
,
├├I J
_cBBeginInfo
├├K W
)
├├W X
;
├├X Y

BufferCopy
┬┬ 
_copyRegion
┬┬ "
=
┬┬# $
new
┬┬% (

BufferCopy
┬┬) 3
(
┬┬3 4
)
┬┬4 5
{
┴┴ 
Size
┼┼ 
=
┼┼ 

bufferSize
┼┼ !
}
▀▀ 
;
▀▀ 
VulkanRenderer
▄▄ 
.
▄▄ 
_vulkan
▄▄ "
.
▄▄" #
CmdCopyBuffer
▄▄# 0
(
▄▄0 1!
_localCommandBuffer
▄▄1 D
,
▄▄D E
_sourceBuffer
▄▄F S
,
▄▄S T

_dstBuffer
▄▄U _
,
▄▄_ `
$num
▄▄a b
,
▄▄b c
_copyRegion
▄▄d o
)
▄▄o p
;
▄▄p q
VulkanRenderer
██ 
.
██ 
_vulkan
██ "
.
██" #
EndCommandBuffer
██# 3
(
██3 4!
_localCommandBuffer
██4 G
)
██G H
;
██H I

SubmitInfo
▐▐ 
_subInfo
▐▐ 
=
▐▐  !
new
▐▐" %

SubmitInfo
▐▐& 0
(
▐▐0 1
)
▐▐1 2
{
░░ 
SType
▒▒ 
=
▒▒ 
StructureType
▒▒ %
.
▒▒% &

SubmitInfo
▒▒& 0
,
▒▒0 1 
CommandBufferCount
▓▓ "
=
▓▓# $
$num
▓▓% &
,
▓▓& '
PCommandBuffers
⌠⌠ 
=
⌠⌠  !
&
⌠⌠" #!
_localCommandBuffer
⌠⌠# 6
}
■■ 
;
■■ 
VulkanRenderer
∙∙ 
.
∙∙ 
_vulkan
∙∙ "
.
∙∙" #
QueueSubmit
∙∙# .
(
∙∙. /
VulkanRenderer
∙∙/ =
.
∙∙= >
_graphicsQueue
∙∙> L
,
∙∙L M
$num
∙∙N O
,
∙∙O P
_subInfo
∙∙Q Y
,
∙∙Y Z
default
∙∙[ b
)
∙∙b c
;
∙∙c d
VulkanRenderer
√√ 
.
√√ 
_vulkan
√√ "
.
√√" #
QueueWaitIdle
√√# 0
(
√√0 1
VulkanRenderer
√√1 ?
.
√√? @
_graphicsQueue
√√@ N
)
√√N O
;
√√O P
VulkanRenderer
≈≈ 
.
≈≈ 
_vulkan
≈≈ "
.
≈≈" # 
FreeCommandBuffers
≈≈# 5
(
≈≈5 6
VulkanRenderer
≈≈6 D
.
≈≈D E
_logicalDevice
≈≈E S
,
≈≈S T
VulkanRenderer
≈≈U c
.
≈≈c d
_commandPool
≈≈d p
,
≈≈p q
$num
≈≈r s
,
≈≈s t"
_localCommandBuffer≈≈u ┬
)≈≈┬ ┴
;≈≈┴ ┼
}
≤≤ 	
internal
   
static
   
void
   
CreateImage
   (
(
  ( )
uint
  ) -
_width
  . 4
,
  4 5
uint
  6 :
_height
  ; B
,
  B C
Format
  D J
_format
  K R
,
  R S
ImageTiling
  T _
_tiling
  ` g
,
  g h
ImageUsageFlags
  i x
_usage
  y 
,   ─#
MemoryPropertyFlags  │ ■
_properties  ∙ ═
,  ═ ║
ref  ╒ ╔
Silk  ╕ ╙
.  ╙ ╚
NET  ╚ ╝
.  ╝ ╞
Vulkan  ╞ ╣
.  ╣ ╤
Image  ╤ ╩
_im  ╪ ©
,  © ю
ref  а д
DeviceMemory  е я

_devMemory  р э
)  э щ
{
⌡⌡ 	
ImageCreateInfo
°° 

_imageInfo
°° &
=
°°' (
new
°°) ,
(
°°, -
)
°°- .
{
²² 
SType
·· 
=
·· 
StructureType
·· %
.
··% &
ImageCreateInfo
··& 5
,
··5 6
	ImageType
÷÷ 
=
÷÷ 
	ImageType
÷÷ %
.
÷÷% &
Type2D
÷÷& ,
,
÷÷, -
Extent
══ 
=
══ 
{
║║ 
Width
╒╒ 
=
╒╒ 
_width
╒╒ "
,
╒╒" #
Height
ёё 
=
ёё 
_height
ёё $
,
ёё$ %
Depth
╓╓ 
=
╓╓ 
$num
╓╓ 
,
╓╓ 
}
╔╔ 
,
╔╔ 
	MipLevels
╕╕ 
=
╕╕ 
$num
╕╕ 
,
╕╕ 
ArrayLayers
╖╖ 
=
╖╖ 
$num
╖╖ 
,
╖╖  
Format
╗╗ 
=
╗╗ 
_format
╗╗  
,
╗╗  !
Tiling
╘╘ 
=
╘╘ 
_tiling
╘╘  
,
╘╘  !
InitialLayout
╙╙ 
=
╙╙ 
ImageLayout
╙╙  +
.
╙╙+ ,
	Undefined
╙╙, 5
,
╙╙5 6
Usage
╚╚ 
=
╚╚ 
_usage
╚╚ 
,
╚╚ 
Samples
╛╛ 
=
╛╛ 
SampleCountFlags
╛╛ *
.
╛╛* +
	Count1Bit
╛╛+ 4
,
╛╛4 5
SharingMode
╜╜ 
=
╜╜ 
SharingMode
╜╜ )
.
╜╜) *
	Exclusive
╜╜* 3
,
╜╜3 4
}
╝╝ 
;
╝╝ 
fixed
╟╟ 
(
╟╟ 
Silk
╟╟ 
.
╟╟ 
NET
╟╟ 
.
╟╟ 
Vulkan
╟╟ "
.
╟╟" #
Image
╟╟# (
*
╟╟( )
imagePtr
╟╟* 2
=
╟╟3 4
&
╟╟5 6
_im
╟╟6 9
)
╟╟9 :
{
╠╠ 
if
╡╡ 
(
╡╡ 
VulkanRenderer
╡╡ "
.
╡╡" #
_vulkan
╡╡# *
!
╡╡* +
.
╡╡+ ,
CreateImage
╡╡, 7
(
╡╡7 8
VulkanRenderer
╡╡8 F
.
╡╡F G
_logicalDevice
╡╡G U
,
╡╡U V

_imageInfo
╡╡W a
,
╡╡a b
null
╡╡c g
,
╡╡g h
imagePtr
╡╡i q
)
╡╡q r
!=
╡╡s u
Result
╡╡v |
.
╡╡| }
Success╡╡} └
)╡╡└ ┘
{
ЁЁ 
throw
╢╢ 
new
╢╢ 
	Exception
╢╢ '
(
╢╢' (
$str
╢╢( A
)
╢╢A B
;
╢╢B C
}
╣╣ 
}
╤╤ 
VulkanRenderer
╦╦ 
.
╦╦ 
_vulkan
╦╦ "
.
╦╦" #(
GetImageMemoryRequirements
╦╦# =
(
╦╦= >
VulkanRenderer
╦╦> L
.
╦╦L M
_logicalDevice
╦╦M [
,
╦╦[ \
_im
╦╦] `
,
╦╦` a
out
╦╦b e 
MemoryRequirements
╦╦f x
_memReqs╦╦y │
)╦╦│ ┌
;╦╦┌ ┐ 
MemoryAllocateInfo
╨╨ 
	allocInfo
╨╨ (
=
╨╨) *
new
╨╨+ .
(
╨╨. /
)
╨╨/ 0
{
╩╩ 
SType
╪╪ 
=
╪╪ 
StructureType
╪╪ %
.
╪╪% & 
MemoryAllocateInfo
╪╪& 8
,
╪╪8 9
AllocationSize
╫╫ 
=
╫╫  
_memReqs
╫╫! )
.
╫╫) *
Size
╫╫* .
,
╫╫. /
MemoryTypeIndex
╬╬ 
=
╬╬  !
FindMemoryType
╬╬" 0
(
╬╬0 1
_memReqs
╬╬1 9
.
╬╬9 :
MemoryTypeBits
╬╬: H
,
╬╬H I
_properties
╬╬J U
)
╬╬U V
,
╬╬V W
}
©© 
;
©© 
fixed
аа 
(
аа 
DeviceMemory
аа 
*
аа  
imageMemoryPtr
аа! /
=
аа0 1
&
аа2 3

_devMemory
аа3 =
)
аа= >
{
бб 
if
цц 
(
цц 
VulkanRenderer
цц "
.
цц" #
_vulkan
цц# *
!
цц* +
.
цц+ ,
AllocateMemory
цц, :
(
цц: ;
VulkanRenderer
цц; I
.
ццI J
_logicalDevice
ццJ X
,
ццX Y
	allocInfo
ццZ c
,
ццc d
null
ццe i
,
ццi j
imageMemoryPtr
ццk y
)
ццy z
!=
цц{ }
Resultцц~ └
.цц└ ┘
Successцц┘ ▄
)цц▄ █
{
дд 
throw
ее 
new
ее 
	Exception
ее '
(
ее' (
$str
ее( J
)
ееJ K
;
ееK L
}
фф 
}
гг 
VulkanRenderer
ии 
.
ии 
_vulkan
ии "
!
ии" #
.
ии# $
BindImageMemory
ии$ 3
(
ии3 4
VulkanRenderer
ии4 B
.
ииB C
_logicalDevice
ииC Q
,
ииQ R
_im
ииS V
,
ииV W

_devMemory
ииX b
,
ииb c
$num
ииd e
)
ииe f
;
ииf g
}
йй 	
internal
лл 
static
лл 
void
лл 
CreateImageView
лл ,
(
лл, -
ref
лл- 0
Silk
лл1 5
.
лл5 6
NET
лл6 9
.
лл9 :
Vulkan
лл: @
.
лл@ A
Image
ллA F
_textureImage
ллG T
,
ллT U
ref
ллV Y
	ImageView
ллZ c

_imageView
ллd n
)
ллn o
{
мм 	!
ImageViewCreateInfo
нн 
_createInfo
нн  +
=
нн, -
new
нн. 1!
ImageViewCreateInfo
нн2 E
{
оо 
SType
пп 
=
пп 
StructureType
пп %
.
пп% &!
ImageViewCreateInfo
пп& 9
,
пп9 :
Image
яя 
=
яя 
_textureImage
яя %
,
яя% &
Format
рр 
=
рр 
Format
рр 
.
рр  
R8G8B8A8Srgb
рр  ,
,
рр, -
ViewType
сс 
=
сс 
ImageViewType
сс (
.
сс( )
Type2D
сс) /
}
тт 
;
тт 
_createInfo
жж 
.
жж 
SubresourceRange
жж (
.
жж( )

AspectMask
жж) 3
=
жж4 5
ImageAspectFlags
жж6 F
.
жжF G
ColorBit
жжG O
;
жжO P
_createInfo
вв 
.
вв 
SubresourceRange
вв (
.
вв( )
BaseMipLevel
вв) 5
=
вв6 7
$num
вв8 9
;
вв9 :
_createInfo
ьь 
.
ьь 
SubresourceRange
ьь (
.
ьь( )

LevelCount
ьь) 3
=
ьь4 5
$num
ьь6 7
;
ьь7 8
_createInfo
ыы 
.
ыы 
SubresourceRange
ыы (
.
ыы( )
BaseArrayLayer
ыы) 7
=
ыы8 9
$num
ыы: ;
;
ыы; <
_createInfo
зз 
.
зз 
SubresourceRange
зз (
.
зз( )

LayerCount
зз) 3
=
зз4 5
$num
зз6 7
;
зз7 8
if
ээ 
(
ээ 

Rasterizer
ээ 
.
ээ 
_vulkan
ээ "
!
ээ" #
.
ээ# $
CreateImageView
ээ$ 3
(
ээ3 4

Rasterizer
ээ4 >
.
ээ> ?
_logicalDevice
ээ? M
,
ээM N
_createInfo
ээO Z
,
ээZ [
null
ээ\ `
,
ээ` a
out
ээb e

_imageView
ээf p
)
ээp q
!=
ээr t
Result
ээu {
.
ээ{ |
Successээ| ┐
)ээ┐ └
{
щщ 
throw
чч 
new
чч 
	Exception
чч #
(
чч# $
$str
чч$ J
)
ччJ K
;
ччK L
}
ъъ 
}
ЮЮ 	
internal
ББ 
static
ББ 
uint
ББ 
FindMemoryType
ББ +
(
ББ+ ,
uint
ББ, 0
_typeFilter
ББ1 <
,
ББ< =!
MemoryPropertyFlags
ББ> Q
_properties
ББR ]
)
ББ] ^
{
ЦЦ 	,
PhysicalDeviceMemoryProperties
ДД *
_memProperties
ДД+ 9
;
ДД9 :
VulkanRenderer
ЕЕ 
.
ЕЕ 
_vulkan
ЕЕ "
.
ЕЕ" #/
!GetPhysicalDeviceMemoryProperties
ЕЕ# D
(
ЕЕD E
VulkanRenderer
ЕЕE S
.
ЕЕS T
_gpu
ЕЕT X
,
ЕЕX Y
out
ЕЕZ ]
_memProperties
ЕЕ^ l
)
ЕЕl m
;
ЕЕm n
for
ГГ 
(
ГГ 
int
ГГ 
i
ГГ 
=
ГГ 
$num
ГГ 
;
ГГ 
i
ГГ 
<
ГГ 
_memProperties
ГГ  .
.
ГГ. /
MemoryTypeCount
ГГ/ >
;
ГГ> ?
i
ГГ@ A
++
ГГA C
)
ГГC D
{
ХХ 
if
ИИ 
(
ИИ 
(
ИИ 
_typeFilter
ИИ  
&
ИИ! "
$num
ИИ# $
<<
ИИ% '
i
ИИ( )
)
ИИ) *
!=
ИИ+ -
$num
ИИ. /
&&
ИИ0 2
(
ИИ3 4
_memProperties
ИИ4 B
.
ИИB C
MemoryTypes
ИИC N
[
ИИN O
i
ИИO P
]
ИИP Q
.
ИИQ R
PropertyFlags
ИИR _
&
ИИ` a
_properties
ИИb m
)
ИИm n
==
ИИo q
_properties
ИИr }
)
ИИ} ~
{
ЙЙ 
return
КК 
(
КК 
uint
КК  
)
КК  !
i
КК! "
;
КК" #
}
ЛЛ 
}
ММ 
throw
НН 
new
НН 
	Exception
НН 
(
НН  
$str
НН  E
)
ННE F
;
ННF G
}
ОО 	
}
ПП 
internal
РР 
unsafe
РР 
class
РР $
PathTracerBufferHelper
РР 0
{
СС 
internal
ТТ 
void
ТТ  
CreateVertexBuffer
ТТ (
(
ТТ( )
ref
ТТ) ,
Vertex
ТТ- 3
[
ТТ3 4
]
ТТ4 5
	_vertices
ТТ6 ?
,
ТТ? @
ref
ТТA D
Buffer
ТТE K
_vertexBuffer
ТТL Y
,
ТТY Z
ref
ТТ[ ^
DeviceMemory
ТТ_ k!
_vertexBufferMemory
ТТl 
)ТТ ─
{
УУ 	
ulong
ЖЖ 
_bufferSize
ЖЖ 
=
ЖЖ 
(
ЖЖ  !
ulong
ЖЖ! &
)
ЖЖ& '
(
ЖЖ' (
Unsafe
ЖЖ( .
.
ЖЖ. /
SizeOf
ЖЖ/ 5
<
ЖЖ5 6
Vertex
ЖЖ6 <
>
ЖЖ< =
(
ЖЖ= >
)
ЖЖ> ?
*
ЖЖ@ A
	_vertices
ЖЖB K
.
ЖЖK L
Length
ЖЖL R
)
ЖЖR S
;
ЖЖS T
Buffer
ВВ 
_stagingBuffer
ВВ !
=
ВВ" #
default
ВВ$ +
;
ВВ+ ,
DeviceMemory
ЬЬ "
_stagingBufferMemory
ЬЬ -
=
ЬЬ. /
default
ЬЬ0 7
;
ЬЬ7 8
CreateBuffer
ЫЫ 
(
ЫЫ 
_bufferSize
ЫЫ $
,
ЫЫ$ %
BufferUsageFlags
ЫЫ& 6
.
ЫЫ6 7
TransferSrcBit
ЫЫ7 E
,
ЫЫE F!
MemoryPropertyFlags
ЫЫG Z
.
ЫЫZ [
HostVisibleBit
ЫЫ[ i
|
ЫЫj k!
MemoryPropertyFlags
ЫЫl 
.ЫЫ ─
HostCachedBitЫЫ─ █
,ЫЫ█ ▌
refЫЫ▐ ▓
_stagingBufferЫЫ⌠ ║
,ЫЫ║ ╒
refЫЫё ╕$
_stagingBufferMemoryЫЫ╖ ╩
)ЫЫ╩ ╪
;ЫЫ╪ ╫
void
ШШ 
*
ШШ 
_data
ШШ 
;
ШШ 

Rasterizer
ЭЭ 
.
ЭЭ 
_vulkan
ЭЭ 
.
ЭЭ 
	MapMemory
ЭЭ (
(
ЭЭ( )

Rasterizer
ЭЭ) 3
.
ЭЭ3 4
_logicalDevice
ЭЭ4 B
,
ЭЭB C"
_stagingBufferMemory
ЭЭD X
,
ЭЭX Y
$num
ЭЭZ [
,
ЭЭ[ \
_bufferSize
ЭЭ] h
,
ЭЭh i
$num
ЭЭj k
,
ЭЭk l
&
ЭЭm n
_data
ЭЭn s
)
ЭЭs t
;
ЭЭt u
	_vertices
ЩЩ 
.
ЩЩ 
AsSpan
ЩЩ 
(
ЩЩ 
)
ЩЩ 
.
ЩЩ 
CopyTo
ЩЩ %
(
ЩЩ% &
new
ЩЩ& )
Span
ЩЩ* .
<
ЩЩ. /
Vertex
ЩЩ/ 5
>
ЩЩ5 6
(
ЩЩ6 7
_data
ЩЩ7 <
,
ЩЩ< =
	_vertices
ЩЩ> G
.
ЩЩG H
Length
ЩЩH N
)
ЩЩN O
)
ЩЩO P
;
ЩЩP Q

Rasterizer
ЧЧ 
.
ЧЧ 
_vulkan
ЧЧ 
.
ЧЧ 
UnmapMemory
ЧЧ *
(
ЧЧ* +

Rasterizer
ЧЧ+ 5
.
ЧЧ5 6
_logicalDevice
ЧЧ6 D
,
ЧЧD E"
_stagingBufferMemory
ЧЧF Z
)
ЧЧZ [
;
ЧЧ[ \
CreateBuffer
── 
(
── 
_bufferSize
── $
,
──$ %
BufferUsageFlags
──& 6
.
──6 7
TransferDstBit
──7 E
|
──F G
BufferUsageFlags
──H X
.
──X Y$
ShaderDeviceAddressBit
──Y o
|
──p q
BufferUsageFlags──r ┌
.──┌ ┐ 
StorageBufferBit──┐ ⌠
|──■ ∙ 
BufferUsageFlags──√ ╕
.──╕ ╖=
-AccelerationStructureBuildInputReadOnlyBitKhr──╖ т
,──т у#
MemoryPropertyFlags──ж И
.──И Й
DeviceLocalBit──Й Ь
,──Ь Ы
ref──З Щ
_vertexBuffer──Ч ▀
,──▀ ▄
ref──█ ░#
_vertexBufferMemory──▒ ╓
)──╓ ╔
;──╔ ╕

CopyBuffer
┌┌ 
(
┌┌ 
ref
┌┌ 
_stagingBuffer
┌┌ )
,
┌┌) *
ref
┌┌+ .
_vertexBuffer
┌┌/ <
,
┌┌< =
_bufferSize
┌┌> I
)
┌┌I J
;
┌┌J K

Rasterizer
┐┐ 
.
┐┐ 
_vulkan
┐┐ 
.
┐┐ 
DestroyBuffer
┐┐ ,
(
┐┐, -

Rasterizer
┐┐- 7
.
┐┐7 8
_logicalDevice
┐┐8 F
,
┐┐F G
_stagingBuffer
┐┐H V
,
┐┐V W
null
┐┐X \
)
┐┐\ ]
;
┐┐] ^

Rasterizer
└└ 
.
└└ 
_vulkan
└└ 
.
└└ 

FreeMemory
└└ )
(
└└) *

Rasterizer
└└* 4
.
└└4 5
_logicalDevice
└└5 C
,
└└C D"
_stagingBufferMemory
└└E Y
,
└└Y Z
null
└└[ _
)
└└_ `
;
└└` a
}
┘┘ 	
internal
┤┤ 
void
┤┤ 
CreateIndexBuffer
┤┤ '
(
┤┤' (
ref
┤┤( +
ushort
┤┤, 2
[
┤┤2 3
]
┤┤3 4
_meshIndices
┤┤5 A
,
┤┤A B
ref
┤┤C F
Buffer
┤┤G M
_indexBuffer
┤┤N Z
,
┤┤Z [
ref
┤┤\ _
DeviceMemory
┤┤` l 
_indexBufferMemory
┤┤m 
)┤┤ ─
{
┬┬ 	
ulong
┴┴ 
_bufferSize
┴┴ 
=
┴┴ 
(
┴┴  !
ulong
┴┴! &
)
┴┴& '
(
┴┴' (
Unsafe
┴┴( .
.
┴┴. /
SizeOf
┴┴/ 5
<
┴┴5 6
ushort
┴┴6 <
>
┴┴< =
(
┴┴= >
)
┴┴> ?
*
┴┴@ A
_meshIndices
┴┴B N
.
┴┴N O
Length
┴┴O U
)
┴┴U V
;
┴┴V W
Buffer
┼┼ 
_stagingBuffer
┼┼ !
=
┼┼" #
default
┼┼$ +
;
┼┼+ ,
DeviceMemory
▀▀ "
_stagingBufferMemory
▀▀ -
=
▀▀. /
default
▀▀0 7
;
▀▀7 8
CreateBuffer
▄▄ 
(
▄▄ 
_bufferSize
▄▄ $
,
▄▄$ %
BufferUsageFlags
▄▄& 6
.
▄▄6 7
TransferSrcBit
▄▄7 E
,
▄▄E F!
MemoryPropertyFlags
▄▄G Z
.
▄▄Z [
HostVisibleBit
▄▄[ i
|
▄▄j k!
MemoryPropertyFlags
▄▄l 
.▄▄ ─
HostCoherentBit▄▄─ ▐
,▄▄▐ ░
ref▄▄▒ ■
_stagingBuffer▄▄∙ ё
,▄▄ё ╓
ref▄▄╔ ╗$
_stagingBufferMemory▄▄╘ ╫
)▄▄╫ ╬
;▄▄╬ ©
void
██ 
*
██ 
_data
██ 
;
██ 

Rasterizer
▌▌ 
.
▌▌ 
_vulkan
▌▌ 
.
▌▌ 
	MapMemory
▌▌ (
(
▌▌( )

Rasterizer
▌▌) 3
.
▌▌3 4
_logicalDevice
▌▌4 B
,
▌▌B C"
_stagingBufferMemory
▌▌D X
,
▌▌X Y
$num
▌▌Z [
,
▌▌[ \
_bufferSize
▌▌] h
,
▌▌h i
$num
▌▌j k
,
▌▌k l
&
▌▌m n
_data
▌▌n s
)
▌▌s t
;
▌▌t u
_meshIndices
▐▐ 
.
▐▐ 
AsSpan
▐▐ 
(
▐▐  
)
▐▐  !
.
▐▐! "
CopyTo
▐▐" (
(
▐▐( )
new
▐▐) ,
Span
▐▐- 1
<
▐▐1 2
ushort
▐▐2 8
>
▐▐8 9
(
▐▐9 :
_data
▐▐: ?
,
▐▐? @
_meshIndices
▐▐A M
.
▐▐M N
Length
▐▐N T
)
▐▐T U
)
▐▐U V
;
▐▐V W

Rasterizer
░░ 
.
░░ 
_vulkan
░░ 
.
░░ 
UnmapMemory
░░ *
(
░░* +

Rasterizer
░░+ 5
.
░░5 6
_logicalDevice
░░6 D
,
░░D E"
_stagingBufferMemory
░░F Z
)
░░Z [
;
░░[ \
CreateBuffer
▒▒ 
(
▒▒ 
_bufferSize
▒▒ $
,
▒▒$ %
BufferUsageFlags
▒▒& 6
.
▒▒6 7
TransferDstBit
▒▒7 E
|
▒▒F G
BufferUsageFlags
▒▒H X
.
▒▒X Y
IndexBufferBit
▒▒Y g
,
▒▒g h!
MemoryPropertyFlags
▒▒i |
.
▒▒| }
DeviceLocalBit▒▒} ▀
,▒▒▀ ▄
ref▒▒█ ░
_indexBuffer▒▒▒ ²
,▒▒² ·
ref▒▒÷ ╒"
_indexBufferMemory▒▒ё ╣
)▒▒╣ ╤
;▒▒╤ ╥
;▒▒╦ ╧

CopyBuffer
▓▓ 
(
▓▓ 
ref
▓▓ 
_stagingBuffer
▓▓ )
,
▓▓) *
ref
▓▓+ .
_indexBuffer
▓▓/ ;
,
▓▓; <
_bufferSize
▓▓= H
)
▓▓H I
;
▓▓I J

Rasterizer
⌠⌠ 
.
⌠⌠ 
_vulkan
⌠⌠ 
.
⌠⌠ 
DestroyBuffer
⌠⌠ ,
(
⌠⌠, -

Rasterizer
⌠⌠- 7
.
⌠⌠7 8
_logicalDevice
⌠⌠8 F
,
⌠⌠F G
_stagingBuffer
⌠⌠H V
,
⌠⌠V W
null
⌠⌠X \
)
⌠⌠\ ]
;
⌠⌠] ^

Rasterizer
■■ 
.
■■ 
_vulkan
■■ 
.
■■ 

FreeMemory
■■ )
(
■■) *

Rasterizer
■■* 4
.
■■4 5
_logicalDevice
■■5 C
,
■■C D"
_stagingBufferMemory
■■E Y
,
■■Y Z
null
■■[ _
)
■■_ `
;
■■` a
}
∙∙ 	
private
≈≈ 
void
≈≈ 

CopyBuffer
≈≈ 
(
≈≈  
ref
≈≈  #
Buffer
≈≈$ *
_sourceBuffer
≈≈+ 8
,
≈≈8 9
ref
≈≈: =
Buffer
≈≈> D

_dstBuffer
≈≈E O
,
≈≈O P
ulong
≈≈Q V

bufferSize
≈≈W a
)
≈≈a b
{
≤≤ 	'
CommandBufferAllocateInfo
≥≥ %

_allocInfo
≥≥& 0
=
≥≥1 2
new
≥≥3 6'
CommandBufferAllocateInfo
≥≥7 P
(
≥≥P Q
)
≥≥Q R
{
   
SType
⌡⌡ 
=
⌡⌡ 
StructureType
⌡⌡ %
.
⌡⌡% &'
CommandBufferAllocateInfo
⌡⌡& ?
,
⌡⌡? @
Level
°° 
=
°°  
CommandBufferLevel
°° *
.
°°* +
Primary
°°+ 2
,
°°2 3
CommandPool
²² 
=
²² 

Rasterizer
²² (
.
²²( )
_commandPool
²²) 5
,
²²5 6 
CommandBufferCount
·· "
=
··# $
$num
··% &
}
÷÷ 
;
÷÷ 
CommandBuffer
══ !
_localCommandBuffer
══ -
;
══- .

Rasterizer
║║ 
.
║║ 
_vulkan
║║ 
.
║║ $
AllocateCommandBuffers
║║ 5
(
║║5 6

Rasterizer
║║6 @
.
║║@ A
_logicalDevice
║║A O
,
║║O P

_allocInfo
║║Q [
,
║║[ \
out
║║] `!
_localCommandBuffer
║║a t
)
║║t u
;
║║u v$
CommandBufferBeginInfo
ёё "
_cBBeginInfo
ёё# /
=
ёё0 1
new
ёё2 5$
CommandBufferBeginInfo
ёё6 L
(
ёёL M
)
ёёM N
{
╓╓ 
SType
╔╔ 
=
╔╔ 
StructureType
╔╔ %
.
╔╔% &$
CommandBufferBeginInfo
╔╔& <
,
╔╔< =
Flags
╕╕ 
=
╕╕ %
CommandBufferUsageFlags
╕╕ /
.
╕╕/ 0
OneTimeSubmitBit
╕╕0 @
}
╖╖ 
;
╖╖ 

Rasterizer
╗╗ 
.
╗╗ 
_vulkan
╗╗ 
.
╗╗  
BeginCommandBuffer
╗╗ 1
(
╗╗1 2!
_localCommandBuffer
╗╗2 E
,
╗╗E F
_cBBeginInfo
╗╗G S
)
╗╗S T
;
╗╗T U

BufferCopy
╙╙ 
_copyRegion
╙╙ "
=
╙╙# $
new
╙╙% (

BufferCopy
╙╙) 3
(
╙╙3 4
)
╙╙4 5
{
╚╚ 
Size
╛╛ 
=
╛╛ 

bufferSize
╛╛ !
}
╜╜ 
;
╜╜ 

Rasterizer
╝╝ 
.
╝╝ 
_vulkan
╝╝ 
.
╝╝ 
CmdCopyBuffer
╝╝ ,
(
╝╝, -!
_localCommandBuffer
╝╝- @
,
╝╝@ A
_sourceBuffer
╝╝B O
,
╝╝O P

_dstBuffer
╝╝Q [
,
╝╝[ \
$num
╝╝] ^
,
╝╝^ _
_copyRegion
╝╝` k
)
╝╝k l
;
╝╝l m

Rasterizer
╞╞ 
.
╞╞ 
_vulkan
╞╞ 
.
╞╞ 
EndCommandBuffer
╞╞ /
(
╞╞/ 0!
_localCommandBuffer
╞╞0 C
)
╞╞C D
;
╞╞D E

SubmitInfo
╠╠ 
_subInfo
╠╠ 
=
╠╠  !
new
╠╠" %

SubmitInfo
╠╠& 0
(
╠╠0 1
)
╠╠1 2
{
╡╡ 
SType
ЁЁ 
=
ЁЁ 
StructureType
ЁЁ %
.
ЁЁ% &

SubmitInfo
ЁЁ& 0
,
ЁЁ0 1 
CommandBufferCount
╢╢ "
=
╢╢# $
$num
╢╢% &
,
╢╢& '
PCommandBuffers
╣╣ 
=
╣╣  !
&
╣╣" #!
_localCommandBuffer
╣╣# 6
}
╤╤ 
;
╤╤ 

Rasterizer
╥╥ 
.
╥╥ 
_vulkan
╥╥ 
.
╥╥ 
QueueSubmit
╥╥ *
(
╥╥* +

Rasterizer
╥╥+ 5
.
╥╥5 6
_graphicsQueue
╥╥6 D
,
╥╥D E
$num
╥╥F G
,
╥╥G H
_subInfo
╥╥I Q
,
╥╥Q R
default
╥╥S Z
)
╥╥Z [
;
╥╥[ \

Rasterizer
╦╦ 
.
╦╦ 
_vulkan
╦╦ 
.
╦╦ 
QueueWaitIdle
╦╦ ,
(
╦╦, -

Rasterizer
╦╦- 7
.
╦╦7 8
_graphicsQueue
╦╦8 F
)
╦╦F G
;
╦╦G H

Rasterizer
╧╧ 
.
╧╧ 
_vulkan
╧╧ 
.
╧╧  
FreeCommandBuffers
╧╧ 1
(
╧╧1 2

Rasterizer
╧╧2 <
.
╧╧< =
_logicalDevice
╧╧= K
,
╧╧K L

Rasterizer
╧╧M W
.
╧╧W X
_commandPool
╧╧X d
,
╧╧d e
$num
╧╧f g
,
╧╧g h!
_localCommandBuffer
╧╧i |
)
╧╧| }
;
╧╧} ~
}
╨╨ 	
private
╪╪ 
void
╪╪ 
CreateBuffer
╪╪ !
(
╪╪! "
ulong
╪╪" '
_size
╪╪( -
,
╪╪- .
BufferUsageFlags
╪╪/ ?
_usage
╪╪@ F
,
╪╪F G!
MemoryPropertyFlags
╪╪H [
_properties
╪╪\ g
,
╪╪g h
ref
╪╪i l
Buffer
╪╪m s
_buffer
╪╪t {
,
╪╪{ |
ref╪╪} ─
DeviceMemory╪╪│ █
_bufferMemory╪╪▌ ⌡
)╪╪⌡ °
{
╫╫ 	
BufferCreateInfo
╬╬ 
_bufferCreateInfo
╬╬ .
=
╬╬/ 0
new
╬╬1 4
BufferCreateInfo
╬╬5 E
(
╬╬E F
)
╬╬F G
{
©© 
SType
юю 
=
юю 
StructureType
юю %
.
юю% &
BufferCreateInfo
юю& 6
,
юю6 7
Size
аа 
=
аа 
_size
аа 
,
аа 
Usage
бб 
=
бб 
_usage
бб 
,
бб 
SharingMode
цц 
=
цц 
SharingMode
цц )
.
цц) *
	Exclusive
цц* 3
}
дд 
;
дд 
fixed
фф 
(
фф 
Buffer
фф 
*
фф 

_bufferPtr
фф %
=
фф& '
&
фф( )
_buffer
фф) 0
)
фф0 1
{
гг 
if
хх 
(
хх 

Rasterizer
хх 
.
хх 
_vulkan
хх &
.
хх& '
CreateBuffer
хх' 3
(
хх3 4

Rasterizer
хх4 >
.
хх> ?
_logicalDevice
хх? M
,
ххM N
_bufferCreateInfo
ххO `
,
хх` a
null
ххb f
,
ххf g

_bufferPtr
ххh r
)
ххr s
!=
ххt v
Result
ххw }
.
хх} ~
Successхх~ ┘
)хх┘ ├
{
ии 
throw
йй 
new
йй 
	Exception
йй '
(
йй' (
$str
йй( @
)
йй@ A
;
ййA B
}
кк 
}
лл  
MemoryRequirements
мм 
_memReqs
мм '
=
мм( )
new
мм* - 
MemoryRequirements
мм. @
(
мм@ A
)
ммA B
;
ммB C

Rasterizer
нн 
.
нн 
_vulkan
нн 
.
нн )
GetBufferMemoryRequirements
нн :
(
нн: ;

Rasterizer
нн; E
.
ннE F
_logicalDevice
ннF T
,
ннT U
_buffer
ннV ]
,
нн] ^
out
нн_ b
_memReqs
ннc k
)
ннk l
;
ннl m 
MemoryAllocateInfo
пп 
_allocateInfo
пп ,
=
пп- .
new
пп/ 2 
MemoryAllocateInfo
пп3 E
(
ппE F
)
ппF G
{
яя 
SType
рр 
=
рр 
StructureType
рр %
.
рр% & 
MemoryAllocateInfo
рр& 8
,
рр8 9
AllocationSize
сс 
=
сс  
_memReqs
сс! )
.
сс) *
Size
сс* .
,
сс. /
MemoryTypeIndex
тт 
=
тт  !
FindMemoryType
тт" 0
(
тт0 1
_memReqs
тт1 9
.
тт9 :
MemoryTypeBits
тт: H
,
ттH I
_properties
ттJ U
)
ттU V
}
уу 
;
уу 
fixed
вв 
(
вв 
DeviceMemory
вв 
*
вв  
_bufferMemoryPtr
вв! 1
=
вв2 3
&
вв4 5
_bufferMemory
вв5 B
)
ввB C
{
ьь 
if
ыы 
(
ыы 

Rasterizer
ыы 
.
ыы 
_vulkan
ыы &
.
ыы& '
AllocateMemory
ыы' 5
(
ыы5 6

Rasterizer
ыы6 @
.
ыы@ A
_logicalDevice
ыыA O
,
ыыO P
_allocateInfo
ыыQ ^
,
ыы^ _
null
ыы` d
,
ыыd e
_bufferMemoryPtr
ыыf v
)
ыыv w
!=
ыыx z
Resultыы{ │
.ыы│ ┌
Successыы┌ ┴
)ыы┴ ┼
{
зз 
throw
шш 
new
шш 
	Exception
шш '
(
шш' (
$str
шш( Q
)
шшQ R
;
шшR S
}
ээ 
}
щщ 

Rasterizer
ъъ 
.
ъъ 
_vulkan
ъъ 
.
ъъ 
BindBufferMemory
ъъ /
(
ъъ/ 0

Rasterizer
ъъ0 :
.
ъъ: ;
_logicalDevice
ъъ; I
,
ъъI J
_buffer
ъъK R
,
ъъR S
_bufferMemory
ъъT a
,
ъъa b
$num
ъъc d
)
ъъd e
;
ъъe f
}
ЮЮ 	
private
ББ 
uint
ББ 
FindMemoryType
ББ #
(
ББ# $
uint
ББ$ (
_typeFilter
ББ) 4
,
ББ4 5!
MemoryPropertyFlags
ББ6 I
_properties
ББJ U
)
ББU V
{
ЦЦ 	,
PhysicalDeviceMemoryProperties
ДД *
_memProperties
ДД+ 9
;
ДД9 :

Rasterizer
ЕЕ 
.
ЕЕ 
_vulkan
ЕЕ 
.
ЕЕ /
!GetPhysicalDeviceMemoryProperties
ЕЕ @
(
ЕЕ@ A

Rasterizer
ЕЕA K
.
ЕЕK L
_gpu
ЕЕL P
,
ЕЕP Q
out
ЕЕR U
_memProperties
ЕЕV d
)
ЕЕd e
;
ЕЕe f
for
ГГ 
(
ГГ 
int
ГГ 
i
ГГ 
=
ГГ 
$num
ГГ 
;
ГГ 
i
ГГ 
<
ГГ 
_memProperties
ГГ  .
.
ГГ. /
MemoryTypeCount
ГГ/ >
;
ГГ> ?
i
ГГ@ A
++
ГГA C
)
ГГC D
{
ХХ 
if
ИИ 
(
ИИ 
(
ИИ 
_typeFilter
ИИ  
&
ИИ! "
$num
ИИ# $
<<
ИИ% '
i
ИИ( )
)
ИИ) *
!=
ИИ+ -
$num
ИИ. /
&&
ИИ0 2
(
ИИ3 4
_memProperties
ИИ4 B
.
ИИB C
MemoryTypes
ИИC N
[
ИИN O
i
ИИO P
]
ИИP Q
.
ИИQ R
PropertyFlags
ИИR _
&
ИИ` a
_properties
ИИb m
)
ИИm n
==
ИИo q
_properties
ИИr }
)
ИИ} ~
{
ЙЙ 
return
КК 
(
КК 
uint
КК  
)
КК  !
i
КК! "
;
КК" #
}
ЛЛ 
}
ММ 
throw
НН 
new
НН 
	Exception
НН 
(
НН  
$str
НН  E
)
ННE F
;
ННF G
}
ОО 	
}
ПП 
}ЯЯ А≈
fH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\GraphicsPipeline.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{ 
internal 
unsafe 
class 
GraphicsPipeline *
{ 
internal 
PipelineLayout 
_pipelineLayout  /
;/ 0
internal		 
Pipeline		 
_graphicsPipeline		 +
;		+ ,
internal

 
PipelineLayout

 
_shadowLayout

  -
;

- .
internal 
Pipeline 
_shadowPipeline )
;) *
internal 
void "
CreateGraphicsPipeline ,
(, -
string- 3
vertex4 :
,: ;
string< B
fragmentC K
,K L
Extent2DM U
	_extent2DV _
,_ `
refa d
DescriptorSetLayoute x!
_descriptorSetLayout	y █
)
█ ▌
{ 	
byte 
[ 
] 
_vertexCode 
=  
ReadFile! )
() *
$str* =
+> ?
vertex@ F
)F G
;G H
byte 
[ 
] 
_fragmentCode  
=! "
ReadFile# +
(+ ,
$str, ?
+@ A
fragmentB J
)J K
;K L
ShaderModule 
_vertexShader &
=' (
CreateShaderModule) ;
(; <
_vertexCode< G
)G H
;H I
ShaderModule 
_fragmentShader (
=) *
CreateShaderModule+ =
(= >
_fragmentCode> K
)K L
;L M)
PipelineShaderStageCreateInfo )"
_vertexShaderStageInfo* @
=A B
newC F)
PipelineShaderStageCreateInfoG d
{ 
SType 
= 
StructureType %
.% &)
PipelineShaderStageCreateInfo& C
,C D
Stage 
= 
ShaderStageFlags (
.( )
	VertexBit) 2
,2 3
Module 
= 
_vertexShader &
,& '
PName 
= 
( 
byte 
* 
) 
SilkMarshal *
.* +
StringToPtr+ 6
(6 7
$str7 =
)= >
} 
; )
PipelineShaderStageCreateInfo )$
_fragmentShaderStageInfo* B
=C D
newE H)
PipelineShaderStageCreateInfoI f
{ 
SType 
= 
StructureType %
.% &)
PipelineShaderStageCreateInfo& C
,C D
Stage 
= 
ShaderStageFlags (
.( )
FragmentBit) 4
,4 5
Module   
=   
_fragmentShader   (
,  ( )
PName!! 
=!! 
(!! 
byte!! 
*!! 
)!! 
SilkMarshal!! *
.!!* +
StringToPtr!!+ 6
(!!6 7
$str!!7 =
)!!= >
}"" 
;"" 
var$$ 
_stages$$ 
=$$ 

stackalloc$$ $
[$$$ %
]$$% &
{%% "
_vertexShaderStageInfo&& &
,&&& '$
_fragmentShaderStageInfo'' (
}(( 
;(( )
VertexInputBindingDescription** )
_bindingDesc*** 6
=**7 8
Vertex**9 ?
.**? @!
GetBindingDescription**@ U
(**U V
)**V W
;**W X+
VertexInputAttributeDescription++ +
[+++ ,
]++, -
_attribDesc++. 9
=++: ;
Vertex++< B
.++B C/
#GetVertexInputAttributeDescriptions++C f
(++f g
)++g h
;++h i
fixed-- 
(-- +
VertexInputAttributeDescription-- 2
*--2 3
_attribDescPtr--4 B
=--C D
_attribDesc--E P
)--P Q
fixed.. 
(.. 
DescriptorSetLayout.. &
*..& '#
_descriptorSetLayoutPtr..( ?
=..@ A
&..B C 
_descriptorSetLayout..C W
)..W X
{// .
"PipelineVertexInputStateCreateInfo00 2
_vertexInputInfo003 C
=00D E
new00F I.
"PipelineVertexInputStateCreateInfo00J l
{11 
SType22 
=22 
StructureType22 )
.22) *.
"PipelineVertexInputStateCreateInfo22* L
,22L M)
VertexBindingDescriptionCount33 1
=332 3
$num334 5
,335 6+
VertexAttributeDescriptionCount44 3
=444 5
(446 7
uint447 ;
)44; <
_attribDesc44< G
.44G H
Length44H N
,44N O&
PVertexBindingDescriptions55 .
=55/ 0
&551 2
_bindingDesc552 >
,55> ?(
PVertexAttributeDescriptions66 0
=661 2
_attribDescPtr663 A
}77 
;77 0
$PipelineInputAssemblyStateCreateInfo88 4
_inputAssembly885 C
=88D E
new88F I0
$PipelineInputAssemblyStateCreateInfo88J n
{99 
SType:: 
=:: 
StructureType:: )
.::) *0
$PipelineInputAssemblyStateCreateInfo::* N
,::N O
Topology;; 
=;; 
PrimitiveTopology;; 0
.;;0 1
TriangleList;;1 =
,;;= >"
PrimitiveRestartEnable<< *
=<<+ ,
false<<- 2
}== 
;== 
Viewport?? 
	_viewport?? "
=??# $
new??% (
Viewport??) 1
(??1 2
)??2 3
{@@ 
XAA 
=AA 
$numAA 
,AA 
YBB 
=BB 
$numBB 
,BB 
WidthCC 
=CC 
	_extent2DCC %
.CC% &
WidthCC& +
,CC+ ,
HeightDD 
=DD 
	_extent2DDD &
.DD& '
HeightDD' -
,DD- .
MinDepthEE 
=EE 
$numEE  
,EE  !
MaxDepthFF 
=FF 
$numFF  
}GG 
;GG 
Rect2DHH 
_scissorHH 
=HH  !
newHH" %
Rect2DHH& ,
(HH, -
)HH- .
{II 
OffsetJJ 
=JJ 
{JJ 
XJJ  
=JJ! "
$numJJ# $
,JJ$ %
YJJ& '
=JJ( )
$numJJ* +
}JJ, -
,JJ- .
ExtentKK 
=KK 
	_extent2DKK &
}LL 
;LL +
PipelineViewportStateCreateInfoMM /
_viewportStateMM0 >
=MM? @
newMMA D+
PipelineViewportStateCreateInfoMME d
(MMd e
)MMe f
{NN 
STypeOO 
=OO 
StructureTypeOO )
.OO) *+
PipelineViewportStateCreateInfoOO* I
,OOI J
ViewportCountPP !
=PP" #
$numPP$ %
,PP% &

PViewportsQQ 
=QQ  
&QQ! "
	_viewportQQ" +
,QQ+ ,
ScissorCountRR  
=RR! "
$numRR# $
,RR$ %
	PScissorsSS 
=SS 
&SS  !
_scissorSS! )
,SS) *
}TT 
;TT 0
$PipelineRasterizationStateCreateInfoUU 4
_rasterizerUU5 @
=UUA B
newUUC F0
$PipelineRasterizationStateCreateInfoUUG k
(UUk l
)UUl m
{VV 
STypeWW 
=WW 
StructureTypeWW )
.WW) *0
$PipelineRasterizationStateCreateInfoWW* N
,WWN O
DepthClampEnableXX $
=XX% &
falseXX' ,
,XX, -#
RasterizerDiscardEnableYY +
=YY, -
falseYY. 3
,YY3 4
PolygonModeZZ 
=ZZ  !
PolygonModeZZ" -
.ZZ- .
FillZZ. 2
,ZZ2 3
	LineWidth[[ 
=[[ 
$num[[  !
,[[! "
CullMode\\ 
=\\ 
CullModeFlags\\ ,
.\\, -
FrontBit\\- 5
,\\5 6
	FrontFace]] 
=]] 
	FrontFace]]  )
.]]) *
	Clockwise]]* 3
,]]3 4
DepthBiasEnable^^ #
=^^$ %
false^^& +
}__ 
;__ .
"PipelineMultisampleStateCreateInfo`` 2
_multisampling``3 A
=``B C
new``D G.
"PipelineMultisampleStateCreateInfo``H j
(``j k
)``k l
{aa 
STypebb 
=bb 
StructureTypebb )
.bb) *.
"PipelineMultisampleStateCreateInfobb* L
,bbL M
SampleShadingEnablecc '
=cc( )
falsecc* /
,cc/ 0 
RasterizationSamplesdd (
=dd) *
SampleCountFlagsdd+ ;
.dd; <
	Count1Bitdd< E
}ee 
;ee /
#PipelineDepthStencilStateCreateInfoff 3
_depthCreateInfoff4 D
=ffE F
newffG J/
#PipelineDepthStencilStateCreateInfoffK n
(ffn o
)ffo p
{gg 
STypehh 
=hh 
StructureTypehh )
.hh) */
#PipelineDepthStencilStateCreateInfohh* M
,hhM N
DepthTestEnableii #
=ii$ %
trueii& *
,ii* +
DepthWriteEnablejj $
=jj% &
truejj' +
,jj+ ,
DepthCompareOpkk "
=kk# $
	CompareOpkk% .
.kk. /
Lesskk/ 3
,kk3 4!
DepthBoundsTestEnablell )
=ll* +
falsell, 1
,ll1 2
StencilTestEnablemm %
=mm& '
falsemm( -
}nn 
;nn -
!PipelineColorBlendAttachmentStateoo 1!
_colorBlendAttachmentoo2 G
=ooH I
newooJ M-
!PipelineColorBlendAttachmentStateooN o
(ooo p
)oop q
{pp 
ColorWriteMaskqq "
=qq# $
ColorComponentFlagsqq% 8
.qq8 9
RBitqq9 =
|qq> ?
ColorComponentFlagsqq@ S
.qqS T
GBitqqT X
|qqY Z
ColorComponentFlagsqq[ n
.qqn o
BBitqqo s
|qqt u 
ColorComponentFlags	qqv ┴
.
qq┴ ┼
ABit
qq┼ ▌
,
qq▌ ▐
BlendEnablerr 
=rr  !
falserr" '
,rr' (
}ss 
;ss -
!PipelineColorBlendStateCreateInfott 1
_colorBlendingtt2 @
=ttA B
newttC F-
!PipelineColorBlendStateCreateInfottG h
(tth i
)tti j
{uu 
STypevv 
=vv 
StructureTypevv )
.vv) *-
!PipelineColorBlendStateCreateInfovv* K
,vvK L
LogicOpEnableww !
=ww" #
falseww$ )
,ww) *
LogicOpxx 
=xx 
LogicOpxx %
.xx% &
Copyxx& *
,xx* +
AttachmentCountyy #
=yy$ %
$numyy& '
,yy' (
PAttachmentszz  
=zz! "
&zz# $!
_colorBlendAttachmentzz$ 9
}{{ 
;{{ 
_colorBlending}} 
.}} 
BlendConstants}} -
[}}- .
$num}}. /
]}}/ 0
=}}1 2
$num}}3 4
;}}4 5
_colorBlending~~ 
.~~ 
BlendConstants~~ -
[~~- .
$num~~. /
]~~/ 0
=~~1 2
$num~~3 4
;~~4 5
_colorBlending 
. 
BlendConstants -
[- .
$num. /
]/ 0
=1 2
$num3 4
;4 5
_colorBlending
── 
.
── 
BlendConstants
── -
[
──- .
$num
──. /
]
──/ 0
=
──1 2
$num
──3 4
;
──4 5&
PipelineLayoutCreateInfo
┌┌ (!
_pipelineLayoutInfo
┌┌) <
=
┌┌= >
new
┌┌? B&
PipelineLayoutCreateInfo
┌┌C [
(
┌┌[ \
)
┌┌\ ]
{
┐┐ 
SType
└└ 
=
└└ 
StructureType
└└ )
.
└└) *&
PipelineLayoutCreateInfo
└└* B
,
└└B C
SetLayoutCount
┘┘ "
=
┘┘# $
$num
┘┘% &
,
┘┘& '$
PushConstantRangeCount
├├ *
=
├├+ ,
$num
├├- .
,
├├. /
PSetLayouts
┤┤ 
=
┤┤  !%
_descriptorSetLayoutPtr
┤┤" 9
}
┬┬ 
;
┬┬ 
if
┼┼ 
(
┼┼ 
VulkanRenderer
┼┼ "
.
┼┼" #
_vulkan
┼┼# *
.
┼┼* +"
CreatePipelineLayout
┼┼+ ?
(
┼┼? @
VulkanRenderer
┼┼@ N
.
┼┼N O
_logicalDevice
┼┼O ]
,
┼┼] ^!
_pipelineLayoutInfo
┼┼_ r
,
┼┼r s
null
┼┼t x
,
┼┼x y
out
┼┼z }
_pipelineLayout┼┼~ █
)┼┼█ ▌
!=┼┼▐ ▒
Result┼┼▓ ≤
.┼┼≤ ≥
Success┼┼≥ ═
)┼┼═ ║
{
▀▀ 
throw
▄▄ 
new
▄▄ 
	Exception
▄▄ '
(
▄▄' (
$str
▄▄( J
)
▄▄J K
;
▄▄K L
}
██ (
GraphicsPipelineCreateInfo
▐▐ *#
_graphicsPipelineInfo
▐▐+ @
=
▐▐A B
new
▐▐C F(
GraphicsPipelineCreateInfo
▐▐G a
(
▐▐a b
)
▐▐b c
{
░░ 
SType
▒▒ 
=
▒▒ 
StructureType
▒▒ )
.
▒▒) *(
GraphicsPipelineCreateInfo
▒▒* D
,
▒▒D E

StageCount
▓▓ 
=
▓▓  
$num
▓▓! "
,
▓▓" #
PStages
⌠⌠ 
=
⌠⌠ 
_stages
⌠⌠ %
,
⌠⌠% &
PVertexInputState
■■ %
=
■■& '
&
■■( )
_vertexInputInfo
■■) 9
,
■■9 :!
PInputAssemblyState
∙∙ '
=
∙∙( )
&
∙∙* +
_inputAssembly
∙∙+ 9
,
∙∙9 :
PViewportState
√√ "
=
√√# $
&
√√% &
_viewportState
√√& 4
,
√√4 5!
PRasterizationState
≈≈ '
=
≈≈( )
&
≈≈* +
_rasterizer
≈≈+ 6
,
≈≈6 7
PMultisampleState
≤≤ %
=
≤≤& '
&
≤≤( )
_multisampling
≤≤) 7
,
≤≤7 8 
PDepthStencilState
≥≥ &
=
≥≥' (
&
≥≥) *
_depthCreateInfo
≥≥* :
,
≥≥: ;
PColorBlendState
   $
=
  % &
&
  ' (
_colorBlending
  ( 6
,
  6 7
Layout
⌡⌡ 
=
⌡⌡ 
_pipelineLayout
⌡⌡ ,
,
⌡⌡, -

RenderPass
°° 
=
°°  
VulkanRenderer
°°! /
.
°°/ 0

_swapchain
°°0 :
.
°°: ;
_renderPass
°°; F
,
°°F G
Subpass
²² 
=
²² 
$num
²² 
,
²²   
BasePipelineHandle
·· &
=
··' (
default
··) 0
}
÷÷ 
;
÷÷ 
Result
║║ 
r
║║ 
=
║║ 
VulkanRenderer
║║ )
.
║║) *
_vulkan
║║* 1
.
║║1 2%
CreateGraphicsPipelines
║║2 I
(
║║I J
VulkanRenderer
║║J X
.
║║X Y
_logicalDevice
║║Y g
,
║║g h
default
║║i p
,
║║p q
$num
║║r s
,
║║s t$
_graphicsPipelineInfo║║u ┼
,║║┼ ▀
null║║▄ ░
,║║░ ▒
out║║▓ ∙!
_graphicsPipeline║║√ ╖
)║║╖ ╗
;║║╗ ╘
if
╒╒ 
(
╒╒ 
r
╒╒ 
!=
╒╒ 
Result
╒╒ 
.
╒╒  
Success
╒╒  '
)
╒╒' (
{
ёё 
throw
╓╓ 
new
╓╓ 
	Exception
╓╓ '
(
╓╓' (
$str
╓╓( M
+
╓╓N O
r
╓╓P Q
)
╓╓Q R
;
╓╓R S
}
╔╔ 
}
╕╕ 
VulkanRenderer
╗╗ 
.
╗╗ 
_vulkan
╗╗ "
.
╗╗" #!
DestroyShaderModule
╗╗# 6
(
╗╗6 7
VulkanRenderer
╗╗7 E
.
╗╗E F
_logicalDevice
╗╗F T
,
╗╗T U
_vertexShader
╗╗V c
,
╗╗c d
null
╗╗e i
)
╗╗i j
;
╗╗j k
VulkanRenderer
╘╘ 
.
╘╘ 
_vulkan
╘╘ "
.
╘╘" #!
DestroyShaderModule
╘╘# 6
(
╘╘6 7
VulkanRenderer
╘╘7 E
.
╘╘E F
_logicalDevice
╘╘F T
,
╘╘T U
_fragmentShader
╘╘V e
,
╘╘e f
null
╘╘g k
)
╘╘k l
;
╘╘l m
SilkMarshal
╙╙ 
.
╙╙ 
Free
╙╙ 
(
╙╙ 
(
╙╙ 
nint
╙╙ "
)
╙╙" #$
_vertexShaderStageInfo
╙╙# 9
.
╙╙9 :
PName
╙╙: ?
)
╙╙? @
;
╙╙@ A
SilkMarshal
╚╚ 
.
╚╚ 
Free
╚╚ 
(
╚╚ 
(
╚╚ 
nint
╚╚ "
)
╚╚" #&
_fragmentShaderStageInfo
╚╚# ;
.
╚╚; <
PName
╚╚< A
)
╚╚A B
;
╚╚B C
}
╛╛ 	
internal
╝╝ 
void
╝╝ %
CreateShadwomapPipeline
╝╝ -
(
╝╝- .
string
╝╝. 4
vertex
╝╝5 ;
,
╝╝; <
Extent2D
╝╝= E 
_shadowTextureSize
╝╝F X
,
╝╝X Y
ref
╝╝Z ]!
DescriptorSetLayout
╝╝^ q#
_descriptorSetLayout╝╝r ├
)╝╝├ ┤
{
╞╞ 	
byte
╟╟ 
[
╟╟ 
]
╟╟ 
_vertexCode
╟╟ 
=
╟╟  
ReadFile
╟╟! )
(
╟╟) *
$str
╟╟* =
+
╟╟> ?
vertex
╟╟@ F
)
╟╟F G
;
╟╟G H
ShaderModule
╡╡ 
_vertexShader
╡╡ &
=
╡╡' ( 
CreateShaderModule
╡╡) ;
(
╡╡; <
_vertexCode
╡╡< G
)
╡╡G H
;
╡╡H I+
PipelineShaderStageCreateInfo
╢╢ )$
_vertexShaderStageInfo
╢╢* @
=
╢╢A B
new
╢╢C F+
PipelineShaderStageCreateInfo
╢╢G d
{
╣╣ 
SType
╤╤ 
=
╤╤ 
StructureType
╤╤ %
.
╤╤% &+
PipelineShaderStageCreateInfo
╤╤& C
,
╤╤C D
Stage
╥╥ 
=
╥╥ 
ShaderStageFlags
╥╥ (
.
╥╥( )
	VertexBit
╥╥) 2
,
╥╥2 3
Module
╦╦ 
=
╦╦ 
_vertexShader
╦╦ &
,
╦╦& '
PName
╧╧ 
=
╧╧ 
(
╧╧ 
byte
╧╧ 
*
╧╧ 
)
╧╧ 
SilkMarshal
╧╧ *
.
╧╧* +
StringToPtr
╧╧+ 6
(
╧╧6 7
$str
╧╧7 =
)
╧╧= >
}
╨╨ 
;
╨╨ 
var
╩╩ 
_stages
╩╩ 
=
╩╩ 

stackalloc
╩╩ $
[
╩╩$ %
]
╩╩% &
{
╪╪ $
_vertexShaderStageInfo
╫╫ &
,
╫╫& '
}
╬╬ 
;
╬╬ +
VertexInputBindingDescription
юю )
_bindingDesc
юю* 6
=
юю7 8
Vertex
юю9 ?
.
юю? @#
GetBindingDescription
юю@ U
(
ююU V
)
ююV W
;
ююW X-
VertexInputAttributeDescription
аа +
[
аа+ ,
]
аа, -
_attribDesc
аа. 9
=
аа: ;
Vertex
аа< B
.
ааB C1
#GetVertexInputAttributeDescriptions
ааC f
(
ааf g
)
ааg h
;
ааh i
fixed
цц 
(
цц -
VertexInputAttributeDescription
цц 2
*
цц2 3
_attribDescPtr
цц4 B
=
ццC D
_attribDesc
ццE P
)
ццP Q
fixed
дд 
(
дд !
DescriptorSetLayout
дд &
*
дд& '%
_descriptorSetLayoutPtr
дд( ?
=
дд@ A
&
ддB C"
_descriptorSetLayout
ддC W
)
ддW X
{
ее 0
"PipelineVertexInputStateCreateInfo
фф 2
_vertexInputInfo
фф3 C
=
ффD E
new
ффF I0
"PipelineVertexInputStateCreateInfo
ффJ l
{
гг 
SType
хх 
=
хх 
StructureType
хх )
.
хх) *0
"PipelineVertexInputStateCreateInfo
хх* L
,
ххL M+
VertexBindingDescriptionCount
ии 1
=
ии2 3
$num
ии4 5
,
ии5 6-
VertexAttributeDescriptionCount
йй 3
=
йй4 5
(
йй6 7
uint
йй7 ;
)
йй; <
_attribDesc
йй< G
.
ййG H
Length
ййH N
,
ййN O(
PVertexBindingDescriptions
кк .
=
кк/ 0
&
кк1 2
_bindingDesc
кк2 >
,
кк> ?*
PVertexAttributeDescriptions
лл 0
=
лл1 2
_attribDescPtr
лл3 A
}
мм 
;
мм 2
$PipelineInputAssemblyStateCreateInfo
нн 4
_inputAssembly
нн5 C
=
ннD E
new
ннF I2
$PipelineInputAssemblyStateCreateInfo
ннJ n
{
оо 
SType
пп 
=
пп 
StructureType
пп )
.
пп) *2
$PipelineInputAssemblyStateCreateInfo
пп* N
,
ппN O
Topology
яя 
=
яя 
PrimitiveTopology
яя 0
.
яя0 1
TriangleList
яя1 =
,
яя= >$
PrimitiveRestartEnable
рр *
=
рр+ ,
false
рр- 2
}
сс 
;
сс 
Viewport
тт 
	_viewport
тт "
=
тт# $
new
тт% (
Viewport
тт) 1
(
тт1 2
)
тт2 3
{
уу 
X
жж 
=
жж 
$num
жж 
,
жж 
Y
вв 
=
вв 
$num
вв 
,
вв 
Width
ьь 
=
ьь  
_shadowTextureSize
ьь .
.
ьь. /
Width
ьь/ 4
,
ьь4 5
Height
ыы 
=
ыы  
_shadowTextureSize
ыы /
.
ыы/ 0
Height
ыы0 6
,
ыы6 7
MinDepth
зз 
=
зз 
$num
зз  
,
зз  !
MaxDepth
шш 
=
шш 
$num
шш  
}
ээ 
;
ээ 
Rect2D
щщ 
_scissor
щщ 
=
щщ  !
new
щщ" %
Rect2D
щщ& ,
(
щщ, -
)
щщ- .
{
чч 
Offset
ъъ 
=
ъъ 
{
ъъ 
X
ъъ  
=
ъъ! "
$num
ъъ# $
,
ъъ$ %
Y
ъъ& '
=
ъъ( )
$num
ъъ* +
}
ъъ, -
,
ъъ- .
Extent
ЮЮ 
=
ЮЮ  
_shadowTextureSize
ЮЮ /
}
АА 
;
АА -
PipelineViewportStateCreateInfo
ББ /
_viewportState
ББ0 >
=
ББ? @
new
ББA D-
PipelineViewportStateCreateInfo
ББE d
(
ББd e
)
ББe f
{
ЦЦ 
SType
ДД 
=
ДД 
StructureType
ДД )
.
ДД) *-
PipelineViewportStateCreateInfo
ДД* I
,
ДДI J
ViewportCount
ЕЕ !
=
ЕЕ" #
$num
ЕЕ$ %
,
ЕЕ% &

PViewports
ФФ 
=
ФФ  
&
ФФ! "
	_viewport
ФФ" +
,
ФФ+ ,
ScissorCount
ГГ  
=
ГГ! "
$num
ГГ# $
,
ГГ$ %
	PScissors
ХХ 
=
ХХ 
&
ХХ  !
_scissor
ХХ! )
,
ХХ) *
}
ИИ 
;
ИИ 2
$PipelineRasterizationStateCreateInfo
ЙЙ 4
_rasterizer
ЙЙ5 @
=
ЙЙA B
new
ЙЙC F2
$PipelineRasterizationStateCreateInfo
ЙЙG k
(
ЙЙk l
)
ЙЙl m
{
КК 
SType
ЛЛ 
=
ЛЛ 
StructureType
ЛЛ )
.
ЛЛ) *2
$PipelineRasterizationStateCreateInfo
ЛЛ* N
,
ЛЛN O
DepthClampEnable
ММ $
=
ММ% &
false
ММ' ,
,
ММ, -%
RasterizerDiscardEnable
НН +
=
НН, -
false
НН. 3
,
НН3 4
PolygonMode
ОО 
=
ОО  !
PolygonMode
ОО" -
.
ОО- .
Fill
ОО. 2
,
ОО2 3
	LineWidth
ПП 
=
ПП 
$num
ПП  !
,
ПП! "
CullMode
ЯЯ 
=
ЯЯ 
CullModeFlags
ЯЯ ,
.
ЯЯ, -
None
ЯЯ- 1
,
ЯЯ1 2
DepthBiasEnable
РР #
=
РР$ %
false
РР& +
}
СС 
;
СС 0
"PipelineMultisampleStateCreateInfo
ТТ 2
_multisampling
ТТ3 A
=
ТТB C
new
ТТD G0
"PipelineMultisampleStateCreateInfo
ТТH j
(
ТТj k
)
ТТk l
{
УУ 
SType
ЖЖ 
=
ЖЖ 
StructureType
ЖЖ )
.
ЖЖ) *0
"PipelineMultisampleStateCreateInfo
ЖЖ* L
,
ЖЖL M!
SampleShadingEnable
ВВ '
=
ВВ( )
false
ВВ* /
,
ВВ/ 0"
RasterizationSamples
ЬЬ (
=
ЬЬ) *
SampleCountFlags
ЬЬ+ ;
.
ЬЬ; <
	Count1Bit
ЬЬ< E
}
ЫЫ 
;
ЫЫ 1
#PipelineDepthStencilStateCreateInfo
ЗЗ 3
_depthCreateInfo
ЗЗ4 D
=
ЗЗE F
new
ЗЗG J1
#PipelineDepthStencilStateCreateInfo
ЗЗK n
(
ЗЗn o
)
ЗЗo p
{
ШШ 
SType
ЭЭ 
=
ЭЭ 
StructureType
ЭЭ )
.
ЭЭ) *1
#PipelineDepthStencilStateCreateInfo
ЭЭ* M
,
ЭЭM N
DepthTestEnable
ЩЩ #
=
ЩЩ$ %
true
ЩЩ& *
,
ЩЩ* +
DepthWriteEnable
ЧЧ $
=
ЧЧ% &
true
ЧЧ' +
,
ЧЧ+ ,
DepthCompareOp
ЪЪ "
=
ЪЪ# $
	CompareOp
ЪЪ% .
.
ЪЪ. /
LessOrEqual
ЪЪ/ :
,
ЪЪ: ;#
DepthBoundsTestEnable
── )
=
──* +
false
──, 1
,
──1 2
StencilTestEnable
││ %
=
││& '
false
││( -
,
││- .
}
┌┌ 
;
┌┌ 
PushConstantRange
┐┐ !
	_pushInfo
┐┐" +
=
┐┐, -
new
┐┐. 1
PushConstantRange
┐┐2 C
(
┐┐C D
)
┐┐D E
{
└└ 

StageFlags
┘┘ 
=
┘┘  
ShaderStageFlags
┘┘! 1
.
┘┘1 2
	VertexBit
┘┘2 ;
,
┘┘; <
Offset
├├ 
=
├├ 
$num
├├ 
,
├├ 
Size
┤┤ 
=
┤┤ 
sizeof
┤┤ !
(
┤┤! "
int
┤┤" %
)
┤┤% &
}
┬┬ 
;
┬┬ &
PipelineLayoutCreateInfo
┴┴ (!
_pipelineLayoutInfo
┴┴) <
=
┴┴= >
new
┴┴? B&
PipelineLayoutCreateInfo
┴┴C [
(
┴┴[ \
)
┴┴\ ]
{
┼┼ 
SType
▀▀ 
=
▀▀ 
StructureType
▀▀ )
.
▀▀) *&
PipelineLayoutCreateInfo
▀▀* B
,
▀▀B C
SetLayoutCount
▄▄ "
=
▄▄# $
$num
▄▄% &
,
▄▄& '$
PushConstantRangeCount
██ *
=
██+ ,
$num
██- .
,
██. /
PSetLayouts
▌▌ 
=
▌▌  !%
_descriptorSetLayoutPtr
▌▌" 9
,
▌▌9 :!
PPushConstantRanges
▐▐ '
=
▐▐( )
&
▐▐* +
	_pushInfo
▐▐+ 4
,
▐▐4 5
}
░░ 
;
░░ 
if
▓▓ 
(
▓▓ 
VulkanRenderer
▓▓ "
.
▓▓" #
_vulkan
▓▓# *
.
▓▓* +"
CreatePipelineLayout
▓▓+ ?
(
▓▓? @
VulkanRenderer
▓▓@ N
.
▓▓N O
_logicalDevice
▓▓O ]
,
▓▓] ^!
_pipelineLayoutInfo
▓▓_ r
,
▓▓r s
null
▓▓t x
,
▓▓x y
out
▓▓z }
_shadowLayout▓▓~ ▀
)▓▓▀ ▄
!=▓▓█ ▐
Result▓▓░ √
.▓▓√ ≈
Success▓▓≈ ·
)▓▓· ÷
{
⌠⌠ 
throw
■■ 
new
■■ 
	Exception
■■ '
(
■■' (
$str
■■( J
)
■■J K
;
■■K L
}
∙∙ (
GraphicsPipelineCreateInfo
≈≈ *#
_graphicsPipelineInfo
≈≈+ @
=
≈≈A B
new
≈≈C F(
GraphicsPipelineCreateInfo
≈≈G a
(
≈≈a b
)
≈≈b c
{
≤≤ 
SType
≥≥ 
=
≥≥ 
StructureType
≥≥ )
.
≥≥) *(
GraphicsPipelineCreateInfo
≥≥* D
,
≥≥D E

StageCount
   
=
    
$num
  ! "
,
  " #
PStages
⌡⌡ 
=
⌡⌡ 
_stages
⌡⌡ %
,
⌡⌡% &
PVertexInputState
°° %
=
°°& '
&
°°( )
_vertexInputInfo
°°) 9
,
°°9 :!
PInputAssemblyState
²² '
=
²²( )
&
²²* +
_inputAssembly
²²+ 9
,
²²9 :
PViewportState
·· "
=
··# $
&
··% &
_viewportState
··& 4
,
··4 5!
PRasterizationState
÷÷ '
=
÷÷( )
&
÷÷* +
_rasterizer
÷÷+ 6
,
÷÷6 7
PMultisampleState
══ %
=
══& '
&
══( )
_multisampling
══) 7
,
══7 8 
PDepthStencilState
║║ &
=
║║' (
&
║║) *
_depthCreateInfo
║║* :
,
║║: ;
Layout
╒╒ 
=
╒╒ 
_shadowLayout
╒╒ *
,
╒╒* +

RenderPass
ёё 
=
ёё  
VulkanRenderer
ёё! /
.
ёё/ 0

_swapchain
ёё0 :
.
ёё: ;"
_shadowmapRenderPass
ёё; O
,
ёёO P
Subpass
╓╓ 
=
╓╓ 
$num
╓╓ 
,
╓╓   
BasePipelineHandle
╔╔ &
=
╔╔' (
default
╔╔) 0
}
╕╕ 
;
╕╕ 
Result
╗╗ 
r
╗╗ 
=
╗╗ 
VulkanRenderer
╗╗ )
.
╗╗) *
_vulkan
╗╗* 1
.
╗╗1 2%
CreateGraphicsPipelines
╗╗2 I
(
╗╗I J
VulkanRenderer
╗╗J X
.
╗╗X Y
_logicalDevice
╗╗Y g
,
╗╗g h
default
╗╗i p
,
╗╗p q
$num
╗╗r s
,
╗╗s t$
_graphicsPipelineInfo╗╗u ┼
,╗╗┼ ▀
null╗╗▄ ░
,╗╗░ ▒
out╗╗▓ ∙
_shadowPipeline╗╗√ ╔
)╗╗╔ ╕
;╗╗╕ ╖
if
╘╘ 
(
╘╘ 
r
╘╘ 
!=
╘╘ 
Result
╘╘ 
.
╘╘  
Success
╘╘  '
)
╘╘' (
{
╙╙ 
throw
╚╚ 
new
╚╚ 
	Exception
╚╚ '
(
╚╚' (
$str
╚╚( T
+
╚╚U V
r
╚╚W X
)
╚╚X Y
;
╚╚Y Z
}
╛╛ 
}
╜╜ 
VulkanRenderer
╞╞ 
.
╞╞ 
_vulkan
╞╞ "
.
╞╞" #!
DestroyShaderModule
╞╞# 6
(
╞╞6 7
VulkanRenderer
╞╞7 E
.
╞╞E F
_logicalDevice
╞╞F T
,
╞╞T U
_vertexShader
╞╞V c
,
╞╞c d
null
╞╞e i
)
╞╞i j
;
╞╞j k
SilkMarshal
╟╟ 
.
╟╟ 
Free
╟╟ 
(
╟╟ 
(
╟╟ 
nint
╟╟ "
)
╟╟" #$
_vertexShaderStageInfo
╟╟# 9
.
╟╟9 :
PName
╟╟: ?
)
╟╟? @
;
╟╟@ A
}
╠╠ 	
internal
ЁЁ 
void
ЁЁ 
DestroyPipeline
ЁЁ %
(
ЁЁ% &
)
ЁЁ& '
{
╢╢ 	
switch
╣╣ 
(
╣╣ 
VulkanRenderer
╣╣ "
.
╣╣" #
_rendererType
╣╣# 0
)
╣╣0 1
{
╤╤ 
case
╥╥ 
RendererTypes
╥╥ "
.
╥╥" #

Rasterizer
╥╥# -
:
╥╥- .
{
╦╦ 
VulkanRenderer
╧╧ &
.
╧╧& '
_vulkan
╧╧' .
.
╧╧. /
DestroyPipeline
╧╧/ >
(
╧╧> ?
VulkanRenderer
╧╧? M
.
╧╧M N
_logicalDevice
╧╧N \
,
╧╧\ ]
_graphicsPipeline
╧╧^ o
,
╧╧o p
null
╧╧q u
)
╧╧u v
;
╧╧v w
VulkanRenderer
╨╨ &
.
╨╨& '
_vulkan
╨╨' .
.
╨╨. /#
DestroyPipelineLayout
╨╨/ D
(
╨╨D E
VulkanRenderer
╨╨E S
.
╨╨S T
_logicalDevice
╨╨T b
,
╨╨b c
_pipelineLayout
╨╨d s
,
╨╨s t
null
╨╨u y
)
╨╨y z
;
╨╨z {
VulkanRenderer
╩╩ &
.
╩╩& '
_vulkan
╩╩' .
.
╩╩. /
DestroyPipeline
╩╩/ >
(
╩╩> ?
VulkanRenderer
╩╩? M
.
╩╩M N
_logicalDevice
╩╩N \
,
╩╩\ ]
_shadowPipeline
╩╩^ m
,
╩╩m n
null
╩╩o s
)
╩╩s t
;
╩╩t u
VulkanRenderer
╪╪ &
.
╪╪& '
_vulkan
╪╪' .
.
╪╪. /#
DestroyPipelineLayout
╪╪/ D
(
╪╪D E
VulkanRenderer
╪╪E S
.
╪╪S T
_logicalDevice
╪╪T b
,
╪╪b c
_shadowLayout
╪╪d q
,
╪╪q r
null
╪╪s w
)
╪╪w x
;
╪╪x y
break
╫╫ 
;
╫╫ 
}
╬╬ 
case
©© 
RendererTypes
©© "
.
©©" #

Pathtracer
©©# -
:
©©- .
{
юю 
break
аа 
;
аа 
}
бб 
case
цц 
RendererTypes
цц "
.
цц" #
RadianceCascades
цц# 3
:
цц3 4
{
дд 
break
ее 
;
ее 
}
фф 
default
гг 
:
гг 
break
гг 
;
гг 
}
хх 
}
ии 	
private
кк 
ShaderModule
кк  
CreateShaderModule
кк /
(
кк/ 0
byte
кк0 4
[
кк4 5
]
кк5 6
_shaderCode
кк7 B
)
ккB C
{
лл 	$
ShaderModuleCreateInfo
мм "
_createInfo
мм# .
=
мм/ 0
new
мм1 4$
ShaderModuleCreateInfo
мм5 K
{
нн 
SType
оо 
=
оо 
StructureType
оо %
.
оо% &$
ShaderModuleCreateInfo
оо& <
,
оо< =
CodeSize
пп 
=
пп 
(
пп 
nuint
пп !
)
пп! "
_shaderCode
пп" -
.
пп- .
Length
пп. 4
,
пп4 5
}
яя 
;
яя 
ShaderModule
рр 
_shaderModule
рр &
;
рр& '
fixed
тт 
(
тт 
byte
тт 
*
тт 
_shaderCodePtr
тт '
=
тт( )
_shaderCode
тт* 5
)
тт5 6
{
уу 
_createInfo
жж 
.
жж 
PCode
жж !
=
жж" #
(
жж$ %
uint
жж% )
*
жж) *
)
жж* +
_shaderCodePtr
жж+ 9
;
жж9 :
if
вв 
(
вв 
VulkanRenderer
вв "
.
вв" #
_vulkan
вв# *
.
вв* + 
CreateShaderModule
вв+ =
(
вв= >
VulkanRenderer
вв> L
.
ввL M
_logicalDevice
ввM [
,
вв[ \
_createInfo
вв] h
,
ввh i
null
ввj n
,
ввn o
out
ввp s
_shaderModuleввt │
)вв│ ┌
!=вв┐ ┘
Resultвв├ ▄
.вв▄ █
Successвв█ ■
)вв■ ∙
{
ьь 
throw
ыы 
new
ыы 
	Exception
ыы '
(
ыы' (
$str
ыы( H
)
ыыH I
;
ыыI J
}
зз 
}
шш 
return
ээ 
_shaderModule
ээ  
;
ээ  !
}
щщ 	
private
ъъ 
byte
ъъ 
[
ъъ 
]
ъъ 
ReadFile
ъъ 
(
ъъ  
string
ъъ  &
FileName
ъъ' /
)
ъъ/ 0
{
ЮЮ 	
byte
АА 
[
АА 
]
АА 
contents
АА 
=
АА 
File
АА "
.
АА" #
ReadAllBytes
АА# /
(
АА/ 0
FileName
АА0 8
)
АА8 9
;
АА9 :
return
ББ 
contents
ББ 
;
ББ 
}
ЦЦ 	
}
ДД 
}ЕЕ тЁ
aH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\AVulkanMesh.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{ 
struct		 

Vertex		 
{

 
public 
Vector3D 
< 
float 
> 
_pos #
;# $
public 
Vector3D 
< 
float 
> 
_normal &
;& '
public 
Vector2D 
< 
float 
> 
_uv "
;" #
public 
static )
VertexInputBindingDescription 3!
GetBindingDescription4 I
(I J
)J K
{ 	)
VertexInputBindingDescription )
_description* 6
=7 8
new9 <)
VertexInputBindingDescription= Z
(Z [
)[ \
{ 
Binding 
= 
$num 
, 
Stride 
= 
( 
uint 
) 
Unsafe %
.% &
SizeOf& ,
<, -
Vertex- 3
>3 4
(4 5
)5 6
,6 7
	InputRate 
= 
VertexInputRate +
.+ ,
Vertex, 2
} 
; 
return 
_description 
;  
} 	
public 
static +
VertexInputAttributeDescription 5
[5 6
]6 7/
#GetVertexInputAttributeDescriptions8 [
([ \
)\ ]
{ 	+
VertexInputAttributeDescription +
[+ ,
], -
_descriptions. ;
=< =
new> A+
VertexInputAttributeDescriptionB a
[a b
]b c
{ 
new +
VertexInputAttributeDescription 3
(3 4
)4 5
{ 
Binding   
=   
$num   
,    
Location!! 
=!! 
$num!!  
,!!  !
Format"" 
="" 
Format"" #
.""# $
R32G32B32Sfloat""$ 3
,""3 4
Offset## 
=## 
(## 
uint## "
)##" #
Marshal### *
.##* +
OffsetOf##+ 3
<##3 4
Vertex##4 :
>##: ;
(##; <
nameof##< B
(##B C
_pos##C G
)##G H
)##H I
}$$ 
,$$ 
new%% +
VertexInputAttributeDescription%% 3
(%%3 4
)%%4 5
{&& 
Binding'' 
='' 
$num'' 
,''  
Location(( 
=(( 
$num((  
,((  !
Format)) 
=)) 
Format)) #
.))# $
R32G32B32Sfloat))$ 3
,))3 4
Offset** 
=** 
(** 
uint** "
)**" #
Marshal**# *
.*** +
OffsetOf**+ 3
<**3 4
Vertex**4 :
>**: ;
(**; <
nameof**< B
(**B C
_normal**C J
)**J K
)**K L
,**L M
}++ 
,++ 
new,, +
VertexInputAttributeDescription,, 3
(,,3 4
),,4 5
{-- 
Binding.. 
=.. 
$num.. 
,..  
Location// 
=// 
$num//  
,//  !
Format00 
=00 
Format00 #
.00# $
R32G32Sfloat00$ 0
,000 1
Offset11 
=11 
(11 
uint11 "
)11" #
Marshal11# *
.11* +
OffsetOf11+ 3
<113 4
Vertex114 :
>11: ;
(11; <
nameof11< B
(11B C
_uv11C F
)11F G
)11G H
,11H I
}22 
}33 
;33 
return44 
_descriptions44  
;44  !
}55 	
}66 
internal88 
class88 
AVulkanMesh88 
{99 
internal:: 
Vertex:: 
[:: 
]:: 
	_vertices:: #
=::$ %
new::& )
Vertex::* 0
[::0 1
]::1 2
{;; 	
new<< 
Vertex<< 
{<< 
_pos<< 
=<< 
new<<  #
Vector3D<<$ ,
<<<, -
float<<- 2
><<2 3
(<<3 4
-<<4 5
$num<<5 9
,<<9 :
$num<<; ?
,<<? @
$num<<B F
)<<F G
,<<G H
_normal<<I P
=<<Q R
new<<S V
Vector3D<<W _
<<<_ `
float<<` e
><<e f
(<<f g
$num<<g k
,<<k l
-<<m n
$num<<n r
,<<r s
$num<<t x
)<<x y
,<<y z
_uv<<{ ~
=	<< ─
new
<<│ └
Vector2D
<<┘ █
<
<<█ ▌
float
<<▌ ⌠
>
<<⌠ ■
(
<<■ ∙
$num
<<∙ ≥
,
<<≥  
$num
<<⌡ ÷
)
<<÷ ═
}
<<║ ╒
,
<<╒ ё
new== 
Vertex== 
{== 
_pos== 
=== 
new==  #
Vector3D==$ ,
<==, -
float==- 2
>==2 3
(==3 4
-==4 5
$num==5 9
,==9 :
$num==; ?
,==? @
-==A B
$num==B F
)==F G
,==G H
_normal==I P
===Q R
new==S V
Vector3D==W _
<==_ `
float==` e
>==e f
(==f g
$num==g k
,==k l
-==m n
$num==n r
,==r s
$num==t x
)==x y
,==y z
_uv=={ ~
=	== ─
new
==│ └
Vector2D
==┘ █
<
==█ ▌
float
==▌ ⌠
>
==⌠ ■
(
==■ ∙
$num
==∙ ≥
,
==≥  
$num
==⌡ ÷
)
==÷ ═
}
==║ ╒
,
==╒ ё
new>> 
Vertex>> 
{>> 
_pos>> 
=>> 
new>>  #
Vector3D>>$ ,
<>>, -
float>>- 2
>>>2 3
(>>3 4
$num>>5 9
,>>9 :
$num>>; ?
,>>? @
->>A B
$num>>B F
)>>F G
,>>G H
_normal>>I P
=>>Q R
new>>S V
Vector3D>>W _
<>>_ `
float>>` e
>>>e f
(>>f g
$num>>g k
,>>k l
->>m n
$num>>n r
,>>r s
$num>>t x
)>>x y
,>>y z
_uv>>{ ~
=	>> ─
new
>>│ └
Vector2D
>>┘ █
<
>>█ ▌
float
>>▌ ⌠
>
>>⌠ ■
(
>>■ ∙
$num
>>∙ ≥
,
>>≥  
$num
>>⌡ ÷
)
>>÷ ═
}
>>║ ╒
,
>>╒ ё
new?? 
Vertex?? 
{?? 
_pos?? 
=?? 
new??  #
Vector3D??$ ,
<??, -
float??- 2
>??2 3
(??3 4
$num??5 9
,??9 :
$num??; ?
,??? @
$num??B F
)??F G
,??G H
_normal??I P
=??Q R
new??S V
Vector3D??W _
<??_ `
float??` e
>??e f
(??f g
$num??g k
,??k l
-??m n
$num??n r
,??r s
$num??t x
)??x y
,??y z
_uv??{ ~
=	?? ─
new
??│ └
Vector2D
??┘ █
<
??█ ▌
float
??▌ ⌠
>
??⌠ ■
(
??■ ∙
$num
??∙ ≥
,
??≥  
$num
??⌡ ÷
)
??÷ ═
}
??║ ╒
,
??╒ ё
newAA 
VertexAA 
{AA 
_posAA 
=AA 
newAA  #
Vector3DAA$ ,
<AA, -
floatAA- 2
>AA2 3
(AA3 4
-AA4 5
$numAA5 9
,AA9 :
$numAA; ?
,AA? @
$numAAB F
)AAF G
,AAG H
_normalAAI P
=AAQ R
newAAS V
Vector3DAAW _
<AA_ `
floatAA` e
>AAe f
(AAf g
-AAg h
$numAAh l
,AAl m
$numAAn r
,AAr s
$numAAu y
)AAy z
,AAz {
_uvAA| 
=
AA─ │
new
AA┌ ┘
Vector2D
AA├ ▌
<
AA▌ ▐
float
AA▐ ■
>
AA■ ∙
(
AA∙ √
$num
AA√  
,
AA  ⌡
$num
AA° ═
)
AA═ ║
}
AA╒ ё
,
AAё ╓
newBB 
VertexBB 
{BB 
_posBB 
=BB 
newBB  #
Vector3DBB$ ,
<BB, -
floatBB- 2
>BB2 3
(BB3 4
-BB4 5
$numBB5 9
,BB9 :
$numBB; ?
,BB? @
-BBA B
$numBBB F
)BBF G
,BBG H
_normalBBI P
=BBQ R
newBBS V
Vector3DBBW _
<BB_ `
floatBB` e
>BBe f
(BBf g
-BBg h
$numBBh l
,BBl m
$numBBn r
,BBr s
$numBBu y
)BBy z
,BBz {
_uvBB| 
=
BB─ │
new
BB┌ ┘
Vector2D
BB├ ▌
<
BB▌ ▐
float
BB▐ ■
>
BB■ ∙
(
BB∙ √
$num
BB√  
,
BB  ⌡
$num
BB° ═
)
BB═ ║
}
BB╒ ё
,
BBё ╓
newCC 
VertexCC 
{CC 
_posCC 
=CC 
newCC  #
Vector3DCC$ ,
<CC, -
floatCC- 2
>CC2 3
(CC3 4
$numCC4 8
,CC8 9
$numCC: >
,CC> ?
$numCCA E
)CCE F
,CCF G
_normalCCH O
=CCP Q
newCCS V
Vector3DCCW _
<CC_ `
floatCC` e
>CCe f
(CCf g
-CCg h
$numCCh l
,CCl m
$numCCn r
,CCr s
$numCCu y
)CCy z
,CCz {
_uvCC| 
=
CC─ │
new
CC┌ ┘
Vector2D
CC├ ▌
<
CC▌ ▐
float
CC▐ ■
>
CC■ ∙
(
CC∙ √
$num
CC√  
,
CC  ⌡
$num
CC° ═
)
CC═ ║
}
CC╒ ё
,
CCё ╓
newEE 
VertexEE 
{EE 
_posEE 
=EE 
newEE  #
Vector3DEE$ ,
<EE, -
floatEE- 2
>EE2 3
(EE3 4
-EE4 5
$numEE5 9
,EE9 :
$numEE; ?
,EE? @
-EEA B
$numEEB F
)EEF G
,EEG H
_normalEEI P
=EEQ R
newEES V
Vector3DEEW _
<EE_ `
floatEE` e
>EEe f
(EEf g
$numEEg k
,EEk l
$numEEm q
,EEq r
-EEs t
$numEEt x
)EEx y
,EEy z
_uvEE{ ~
=	EE ─
new
EE│ └
Vector2D
EE┘ █
<
EE█ ▌
float
EE▌ ⌠
>
EE⌠ ■
(
EE■ ∙
$num
EE∙ ≥
,
EE≥  
$num
EE⌡ ÷
)
EE÷ ═
}
EE║ ╒
,
EE╒ ё
newFF 
VertexFF 
{FF 
_posFF 
=FF 
newFF  #
Vector3DFF$ ,
<FF, -
floatFF- 2
>FF2 3
(FF3 4
$numFF4 8
,FF8 9
$numFF: >
,FF> ?
-FF@ A
$numFFA E
)FFE F
,FFF G
_normalFFH O
=FFP Q
newFFS V
Vector3DFFW _
<FF_ `
floatFF` e
>FFe f
(FFf g
$numFFg k
,FFk l
$numFFm q
,FFq r
-FFs t
$numFFt x
)FFx y
,FFy z
_uvFF{ ~
=	FF ─
new
FF│ └
Vector2D
FF┘ █
<
FF█ ▌
float
FF▌ ⌠
>
FF⌠ ■
(
FF■ ∙
$num
FF∙ ≥
,
FF≥  
$num
FF⌡ ÷
)
FF÷ ═
}
FF║ ╒
,
FF╒ ё
newGG 
VertexGG 
{GG 
_posGG 
=GG 
newGG  #
Vector3DGG$ ,
<GG, -
floatGG- 2
>GG2 3
(GG3 4
$numGG4 8
,GG8 9
$numGG: >
,GG> ?
$numGGA E
)GGE F
,GGF G
_normalGGH O
=GGP Q
newGGS V
Vector3DGGW _
<GG_ `
floatGG` e
>GGe f
(GGf g
$numGGg k
,GGk l
$numGGm q
,GGq r
-GGs t
$numGGt x
)GGx y
,GGy z
_uvGG{ ~
=	GG ─
new
GG│ └
Vector2D
GG┘ █
<
GG█ ▌
float
GG▌ ⌠
>
GG⌠ ■
(
GG■ ∙
$num
GG∙ ≥
,
GG≥  
$num
GG⌡ ÷
)
GG÷ ═
}
GG║ ╒
,
GG╒ ё
newII 
VertexII 
{II 
_posII 
=II 
newII  #
Vector3DII$ ,
<II, -
floatII- 2
>II2 3
(II3 4
$numII4 8
,II8 9
$numII: >
,II> ?
-II@ A
$numIIA E
)IIE F
,IIF G
_normalIIH O
=IIP Q
newIIS V
Vector3DIIW _
<II_ `
floatII` e
>IIe f
(IIf g
$numIIg k
,IIk l
$numIIm q
,IIq r
$numIIt x
)IIx y
,IIy z
_uvII{ ~
=	II ─
new
II│ └
Vector2D
II┘ █
<
II█ ▌
float
II▌ ⌠
>
II⌠ ■
(
II■ ∙
$num
II∙ ≥
,
II≥  
$num
II⌡ ÷
)
II÷ ═
}
II║ ╒
,
II╒ ё
newJJ 
VertexJJ 
{JJ 
_posJJ 
=JJ 
newJJ  #
Vector3DJJ$ ,
<JJ, -
floatJJ- 2
>JJ2 3
(JJ3 4
$numJJ4 8
,JJ8 9
$numJJ: >
,JJ> ?
$numJJA E
)JJE F
,JJF G
_normalJJH O
=JJP Q
newJJS V
Vector3DJJW _
<JJ_ `
floatJJ` e
>JJe f
(JJf g
$numJJg k
,JJk l
$numJJm q
,JJq r
$numJJt x
)JJx y
,JJy z
_uvJJ{ ~
=	JJ ─
new
JJ│ └
Vector2D
JJ┘ █
<
JJ█ ▌
float
JJ▌ ⌠
>
JJ⌠ ■
(
JJ■ ∙
$num
JJ∙ ≥
,
JJ≥  
$num
JJ⌡ ÷
)
JJ÷ ═
}
JJ║ ╒
,
JJ╒ ё
newKK 
VertexKK 
{KK 
_posKK 
=KK 
newKK  #
Vector3DKK$ ,
<KK, -
floatKK- 2
>KK2 3
(KK3 4
$numKK4 8
,KK8 9
$numKK: >
,KK> ?
$numKKA E
)KKE F
,KKF G
_normalKKH O
=KKP Q
newKKS V
Vector3DKKW _
<KK_ `
floatKK` e
>KKe f
(KKf g
$numKKg k
,KKk l
$numKKm q
,KKq r
$numKKt x
)KKx y
,KKy z
_uvKK{ ~
=	KK ─
new
KK│ └
Vector2D
KK┘ █
<
KK█ ▌
float
KK▌ ⌠
>
KK⌠ ■
(
KK■ ∙
$num
KK∙ ≥
,
KK≥  
$num
KK⌡ ÷
)
KK÷ ═
}
KK║ ╒
,
KK╒ ё
newMM 
VertexMM 
{MM 
_posMM 
=MM 
newMM  #
Vector3DMM$ ,
<MM, -
floatMM- 2
>MM2 3
(MM3 4
$numMM4 8
,MM8 9
$numMM: >
,MM> ?
$numMMA E
)MME F
,MMF G
_normalMMH O
=MMP Q
newMMS V
Vector3DMMW _
<MM_ `
floatMM` e
>MMe f
(MMf g
$numMMg k
,MMk l
$numMMm q
,MMq r
$numMMt x
)MMx y
,MMy z
_uvMM{ ~
=	MM ─
new
MM│ └
Vector2D
MM┘ █
<
MM█ ▌
float
MM▌ ⌠
>
MM⌠ ■
(
MM■ ∙
$num
MM∙ ≥
,
MM≥  
$num
MM⌡ ÷
)
MM÷ ═
}
MM║ ╒
,
MM╒ ё
newNN 
VertexNN 
{NN 
_posNN 
=NN 
newNN  #
Vector3DNN$ ,
<NN, -
floatNN- 2
>NN2 3
(NN3 4
-NN4 5
$numNN5 9
,NN9 :
$numNN; ?
,NN? @
$numNNB F
)NNF G
,NNG H
_normalNNI P
=NNQ R
newNNS V
Vector3DNNW _
<NN_ `
floatNN` e
>NNe f
(NNf g
$numNNg k
,NNk l
$numNNm q
,NNq r
$numNNt x
)NNx y
,NNy z
_uvNN{ ~
=	NN ─
new
NN│ └
Vector2D
NN┘ █
<
NN█ ▌
float
NN▌ ⌠
>
NN⌠ ■
(
NN■ ∙
$num
NN∙ ≥
,
NN≥  
$num
NN⌡ ÷
)
NN÷ ═
}
NN║ ╒
,
NN╒ ё
newOO 
VertexOO 
{OO 
_posOO 
=OO 
newOO  #
Vector3DOO$ ,
<OO, -
floatOO- 2
>OO2 3
(OO3 4
$numOO4 8
,OO8 9
$numOO: >
,OO> ?
$numOOA E
)OOE F
,OOF G
_normalOOH O
=OOP Q
newOOS V
Vector3DOOW _
<OO_ `
floatOO` e
>OOe f
(OOf g
$numOOg k
,OOk l
$numOOm q
,OOq r
$numOOt x
)OOx y
,OOy z
_uvOO{ ~
=	OO ─
new
OO│ └
Vector2D
OO┘ █
<
OO█ ▌
float
OO▌ ⌠
>
OO⌠ ■
(
OO■ ∙
$num
OO∙ ≥
,
OO≥  
$num
OO⌡ ÷
)
OO÷ ═
}
OO║ ╒
,
OO╒ ё
}PP 	
;PP	 

internalRR 
ushortRR 
[RR 
]RR 
_indicesRR "
=RR# $
newRR% (
ushortRR) /
[RR/ 0
]RR0 1
{SS 	
$numTT 
,TT 
$numTT 
,TT 
$numTT 
,TT 
$numUU	 

,UU
 
$numUU 
,UU 
$numUU 
,UU 
$numVV	 

,VV
 
$numVV 
,VV 
$numVV 
,VV 
$numWW	 

,WW
 
$numWW 
,WW 
$numWW 
,WW 
$numXX	 
,XX 
$numXX 
,XX 
$numXX 
,XX 
$numYY	 
,YY 
$numYY 
,YY 
$numYY 
}ZZ 	
;ZZ	 

internal\\ 
void\\ 
LoadCustomMesh\\ $
(\\$ %
Scene\\% *
sc\\+ -
)\\- .
{]] 	
List^^ 
<^^ 
Assimp^^ 
.^^ 
Vector3D^^  
>^^  !
verts^^" '
=^^( )
sc^^* ,
.^^, -
Meshes^^- 3
[^^3 4
$num^^4 5
]^^5 6
.^^6 7
Vertices^^7 ?
;^^? @
List__ 
<__ 
Assimp__ 
.__ 
Vector3D__  
>__  !
uvs__" %
=__& '
sc__( *
.__* +
Meshes__+ 1
[__1 2
$num__2 3
]__3 4
.__4 5%
TextureCoordinateChannels__5 N
[__N O
$num__O P
]__P Q
;__Q R
List`` 
<`` 
Assimp`` 
.`` 
Vector3D``  
>``  !
normals``" )
=``* +
sc``, .
.``. /
Meshes``/ 5
[``5 6
$num``6 7
]``7 8
.``8 9
Normals``9 @
;``@ A
_indicesbb 
=bb 
newbb 
ushortbb !
[bb! "
scbb" $
.bb$ %
Meshesbb% +
[bb+ ,
$numbb, -
]bb- .
.bb. /

GetIndicesbb/ 9
(bb9 :
)bb: ;
.bb; <
Lengthbb< B
]bbB C
;bbC D
forcc 
(cc 
intcc 
icc 
=cc 
$numcc 
;cc 
icc 
<cc 
sccc  "
.cc" #
Meshescc# )
[cc) *
$numcc* +
]cc+ ,
.cc, -

GetIndicescc- 7
(cc7 8
)cc8 9
.cc9 :
Lengthcc: @
;cc@ A
iccB C
++ccC E
)ccE F
{dd 
_indicesee 
[ee 
iee 
]ee 
=ee 
(ee 
ushortee %
)ee% &
scee& (
.ee( )
Meshesee) /
[ee/ 0
$numee0 1
]ee1 2
.ee2 3

GetIndicesee3 =
(ee= >
)ee> ?
[ee? @
iee@ A
]eeA B
;eeB C
}ff 
	_verticeshh 
=hh 
newhh 
Vertexhh "
[hh" #
schh# %
.hh% &
Mesheshh& ,
[hh, -
$numhh- .
]hh. /
.hh/ 0
VertexCounthh0 ;
]hh; <
;hh< =
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
scii  "
.ii" #
Meshesii# )
[ii) *
$numii* +
]ii+ ,
.ii, -
VertexCountii- 8
;ii8 9
iii: ;
++ii; =
)ii= >
{jj 
	_verticeskk 
[kk 
ikk 
]kk 
.kk 
_poskk !
=kk" #
newkk$ '
Vector3Dkk( 0
<kk0 1
floatkk1 6
>kk6 7
(kk7 8
vertskk8 =
[kk= >
ikk> ?
]kk? @
.kk@ A
XkkA B
,kkB C
vertskkD I
[kkI J
ikkJ K
]kkK L
.kkL M
YkkM N
,kkN O
vertskkP U
[kkU V
ikkV W
]kkW X
.kkX Y
ZkkY Z
)kkZ [
;kk[ \
	_verticesll 
[ll 
ill 
]ll 
.ll 
_uvll  
=ll! "
newll# &
Vector2Dll' /
<ll/ 0
floatll0 5
>ll5 6
(ll6 7
uvsll7 :
[ll: ;
ill; <
]ll< =
.ll= >
Xll> ?
,ll? @
uvsllA D
[llD E
illE F
]llF G
.llG H
YllH I
)llI J
;llJ K
	_verticesmm 
[mm 
imm 
]mm 
.mm 
_normalmm $
=mm% &
newmm' *
Vector3Dmm+ 3
<mm3 4
floatmm4 9
>mm9 :
(mm: ;
normalsmm; B
[mmB C
immC D
]mmD E
.mmE F
XmmF G
,mmG H
normalsmmI P
[mmP Q
immQ R
]mmR S
.mmS T
YmmT U
,mmU V
normalsmmW ^
[mm^ _
imm_ `
]mm` a
.mma b
Zmmb c
)mmc d
;mmd e
}nn 
}oo 	
}pp 
}qq ╧A
aH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\AGlfwWindow.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{ 
internal		 
unsafe		 
class		 
AGlfwWindow		 %
{

 
internal 
Glfw 
_glfw 
= 
Glfw "
." #
GetApi# )
() *
)* +
;+ ,
internal 
WindowHandle 
* 
_windowHandle ,
;, -
internal 

SurfaceKHR 
_surface $
;$ %
internal 

KhrSurface 
_driverSurface *
;* +
internal 
bool 
_frameBufferResized )
=* +
false, 1
;1 2
private 
bool 

_firstMove 
=  !
true" &
;& '
private 
double 
_lastX 
, 
_lastY %
;% &
internal 
void 
CreateWindow "
(" #
ref# &
Extent2D' /
_extent0 7
)7 8
{ 	
if 
( 
! 
_glfw 
. 
Init 
( 
) 
) 
Console 
. 
	WriteLine !
(! "
$str" =
)= >
;> ?
_glfw 
. 

WindowHint 
( 
WindowHintClientApi 0
.0 1
	ClientApi1 :
,: ;
	ClientApi< E
.E F
NoApiF K
)K L
;L M
_windowHandle 
= 
_glfw !
.! "
CreateWindow" .
(. /
(/ 0
int0 3
)3 4
_extent4 ;
.; <
Width< A
,A B
(C D
intD G
)G H
_extentH O
.O P
HeightP V
,V W
$strX f
,f g
nullh l
,l m
nulln r
)r s
;s t
if 
( 
_windowHandle 
==  
null! %
)% &
{ 
Console 
. 
	WriteLine !
(! "
$str" ;
); <
;< =
_glfw 
. 
	Terminate 
(  
)  !
;! "
}   
_glfw"" 
."" !
SetWindowSizeCallback"" '
(""' (
_windowHandle""( 5
,""5 6 
WindwoResizeCallback""7 K
)""K L
;""L M
_glfw## 
.##  
SetCursorPosCallback## &
(##& '
_windowHandle##' 4
,##4 5
MouseMoveCallback##6 G
)##G H
;##H I
_glfw$$ 
.$$ 
SetKeyCallback$$  
($$  !
_windowHandle$$! .
,$$. /
KeyboardCallback$$0 @
)$$@ A
;$$A B
}%% 	
internal'' 
void'' 
CreateSurface'' #
(''# $
)''$ %
{(( 	
if)) 
()) 
!)) 
VulkanRenderer)) 
.))  
_vulkan))  '
.))' (#
TryGetInstanceExtension))( ?
())? @
VulkanRenderer))@ N
.))N O
	_instance))O X
,))X Y
out))Z ]
_driverSurface))^ l
)))l m
)))m n
{** 
throw++ 
new++ !
NotSupportedException++ /
(++/ 0
$str++0 R
)++R S
;++S T
},, #
VkNonDispatchableHandle-- #
_surfaceHandle--$ 2
;--2 3
_glfw.. 
... 
CreateWindowSurface.. %
(..% &
VulkanRenderer..& 4
...4 5
	_instance..5 >
...> ?
ToHandle..? G
(..G H
)..H I
,..I J
_windowHandle..K X
,..X Y
null..Z ^
,..^ _
&..` a
_surfaceHandle..a o
)..o p
;..p q
_surface// 
=// 
_surfaceHandle// %
.//% &
	ToSurface//& /
(/// 0
)//0 1
;//1 2
}00 	
internal22 
void22 
UpdateWindowSize22 &
(22& '
ref22' *
Extent2D22+ 3
_extent224 ;
)22; <
{33 	
int44 
_width44 
,44 
_height44 
;44  
_glfw55 
.55 
GetFramebufferSize55 $
(55$ %
_windowHandle55% 2
,552 3
out554 7
_width558 >
,55> ?
out55@ C
_height55D K
)55K L
;55L M
_extent66 
.66 
Width66 
=66 
(66 
uint66 !
)66! "
_width66" (
;66( )
_extent77 
.77 
Height77 
=77 
(77 
uint77 "
)77" #
_height77# *
;77* +
}88 	
private:: 
void::  
WindwoResizeCallback:: )
(::) *
WindowHandle::* 6
*::6 7
window::8 >
,::> ?
int::@ C
width::D I
,::I J
int::K N
height::O U
)::U V
{;; 	
_frameBufferResized<< 
=<<  !
true<<" &
;<<& '
}== 	
private?? 
void?? 
MouseMoveCallback?? &
(??& '
WindowHandle??' 3
*??3 4
window??5 ;
,??; <
double??= C
xPos??D H
,??H I
double??J P
yPos??Q U
)??U V
{@@ 	
ifAA 
(AA 

_firstMoveAA 
)AA 
{BB 
_lastXCC 
=CC 
xPosCC 
;CC 
_lastYDD 
=DD 
yPosDD 
;DD 

_firstMoveEE 
=EE 
falseEE "
;EE" #
}FF 
Vector2DHH 
<HH 
floatHH 
>HH 
_deltaHH "
=HH# $
newHH% (
Vector2DHH) 1
<HH1 2
floatHH2 7
>HH7 8
(HH8 9
(HH9 :
floatHH: ?
)HH? @
(HH@ A
xPosHHA E
-HHF G
_lastXHHH N
)HHN O
,HHO P
(HHQ R
floatHHR W
)HHW X
(HHX Y
yPosHHY ]
-HH^ _
_lastYHH` f
)HHf g
)HHg h
;HHh i
_lastXII 
=II 
xPosII 
;II 
_lastYJJ 
=JJ 
yPosJJ 
;JJ 
VulkanRendererLL 
.LL 
_cameraLL "
.LL" #!
ProcessMouseMovementsLL# 8
(LL8 9
_deltaLL9 ?
)LL? @
;LL@ A
}MM 	
privateOO 
voidOO 
KeyboardCallbackOO %
(OO% &
WindowHandleOO& 2
*OO2 3
windowOO4 :
,OO: ;
SilkOO< @
.OO@ A
NETOOA D
.OOD E
GLFWOOE I
.OOI J
KeysOOJ N
_keyOOO S
,OOS T
intOOU X
	_scanCodeOOY b
,OOb c
InputActionOOd o
_actionOOp w
,OOw x
KeyModifiers	OOy ┘
_mods
OO├ ▀
)
OO▀ ▄
{PP 	
ifQQ 
(QQ 
_actionQQ 
==QQ 
InputActionQQ &
.QQ& '
PressQQ' ,
)QQ, -
{RR 
VulkanRendererSS 
.SS 
_cameraSS &
.SS& '

_keyStatesSS' 1
[SS1 2
_keySS2 6
]SS6 7
=SS8 9
trueSS: >
;SS> ?
}TT 
ifUU 
(UU 
_actionUU 
==UU 
InputActionUU &
.UU& '
ReleaseUU' .
)UU. /
{VV 
VulkanRendererWW 
.WW 
_cameraWW &
.WW& '

_keyStatesWW' 1
[WW1 2
_keyWW2 6
]WW6 7
=WW8 9
falseWW: ?
;WW? @
}XX 
}YY 	
}ZZ 
}[[ ╦o
bH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Renderer\AuroraCamera.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
Renderer" *
{ 
internal 
class 
AuroraCamera 
{		 
internal 
Buffer 
[ 
] 
_cameraBuffer '
;' (
internal 
DeviceMemory 
[ 
] 
_camBmemory  +
;+ ,
internal 

Dictionary 
< 
Silk  
.  !
NET! $
.$ %
GLFW% )
.) *
Keys* .
,. /
bool0 4
>4 5

_keyStates6 @
=A B
newC F

DictionaryG Q
<Q R
SilkR V
.V W
NETW Z
.Z [
GLFW[ _
._ `
Keys` d
,d e
boolf j
>j k
(k l
)l m
;m n
internal 
Vector3D 
< 
float 
>  
_pos! %
=& '
new( +
Vector3D, 4
<4 5
float5 :
>: ;
(; <
$num< =
,= >
$num? @
,@ A
-B C
$numC D
)D E
;E F
internal 
Vector3D 
< 
float 
>  
	_rotation! *
=+ ,
new- 0
Vector3D1 9
<9 :
float: ?
>? @
(@ A
$numA B
,B C
$numD E
,E F
$numG H
)H I
;I J
internal 
Vector3D 
< 
float 
>  
_localUp! )
=* +
new, /
Vector3D0 8
<8 9
float9 >
>> ?
(? @
$num@ A
,A B
$numC D
,D E
$numF G
)G H
;H I
internal 
Vector3D 
< 
float 
>  
_front! '
=( )
new* -
Vector3D. 6
<6 7
float7 <
>< =
(= >
$num> ?
,? @
$numA B
,B C
$numD E
)E F
;F G
internal 
Vector3D 
< 
float 
>  
_localRight! ,
=- .
new/ 2
Vector3D3 ;
<; <
float< A
>A B
(B C
$numC D
,D E
$numF G
,G H
$numI J
)J K
;K L
internal 
	Matrix4X4 
< 
float  
>  !
_view" '
=( )
	Matrix4X4* 3
<3 4
float4 9
>9 :
.: ;
Identity; C
;C D
internal 
	Matrix4X4 
< 
float  
>  !
_projection" -
=. /
	Matrix4X40 9
<9 :
float: ?
>? @
.@ A
IdentityA I
;I J
float 
_speed 
= 
$num 
; 
float 
_sensitivity 
= 
$num "
;" #
internal 
AuroraCamera 
( 
) 
{ 	
foreach 
( 
Silk 
. 
NET 
. 
GLFW "
." #
Keys# '
key( +
in, .
Enum/ 3
.3 4
	GetValues4 =
(= >
typeof> D
(D E
SilkE I
.I J
NETJ M
.M N
GLFWN R
.R S
KeysS W
)W X
)X Y
)Y Z
{ 

_keyStates   
[   
key   
]   
=    !
false  " '
;  ' (
}!!  
AVulkanBufferHandler""  
.""  !
CreateUniformBuffer""! 4
(""4 5
ref""5 8
_cameraBuffer""9 F
,""F G
ref""H K
_camBmemory""L W
)""W X
;""X Y
}## 	
internal%% 
void%% 
UpdateCameraMatrix%% (
(%%( )
Extent2D%%) 1
_extent%%2 9
,%%9 :
uint%%; ?
currentImage%%@ L
)%%L M
{&& 	
_front'' 
.'' 
X'' 
='' 
MathF'' 
.'' 
Cos''  
(''  !
Scalar''! '
.''' (
DegreesToRadians''( 8
(''8 9
	_rotation''9 B
.''B C
X''C D
)''D E
)''E F
*''G H
MathF''I N
.''N O
Cos''O R
(''R S
Scalar''S Y
.''Y Z
DegreesToRadians''Z j
(''j k
	_rotation''k t
.''t u
Y''u v
)''v w
)''w x
;''x y
_front(( 
.(( 
Y(( 
=(( 
MathF(( 
.(( 
Sin((  
(((  !
Scalar((! '
.((' (
DegreesToRadians((( 8
(((8 9
	_rotation((9 B
.((B C
Y((C D
)((D E
)((E F
;((F G
_front)) 
.)) 
Z)) 
=)) 
MathF)) 
.)) 
Sin))  
())  !
Scalar))! '
.))' (
DegreesToRadians))( 8
())8 9
	_rotation))9 B
.))B C
X))C D
)))D E
)))E F
*))G H
MathF))I N
.))N O
Cos))O R
())R S
Scalar))S Y
.))Y Z
DegreesToRadians))Z j
())j k
	_rotation))k t
.))t u
Y))u v
)))v w
)))w x
;))x y
_front** 
=** 
Vector3D** 
.** 
	Normalize** '
(**' (
_front**( .
)**. /
;**/ 0
_localRight,, 
=,, 
Vector3D,, "
.,," #
	Normalize,,# ,
(,,, -
Vector3D,,- 5
.,,5 6
Cross,,6 ;
(,,; <
_front,,< B
,,,B C
Vector3D,,D L
<,,L M
float,,M R
>,,R S
.,,S T
UnitY,,T Y
),,Y Z
),,Z [
;,,[ \
_localUp-- 
=-- 
Vector3D-- 
.--  
	Normalize--  )
(--) *
Vector3D--* 2
.--2 3
Cross--3 8
(--8 9
_localRight--9 D
,--D E
_front--F L
)--L M
)--M N
;--N O
_view// 
=// 
	Matrix4X4// 
.// 
CreateLookAt// *
(//* +
_pos//+ /
,/// 0
_pos//1 5
+//6 7
_front//8 >
,//> ?
Vector3D//@ H
<//H I
float//I N
>//N O
.//O P
UnitY//P U
)//U V
;//V W
_projection00 
=00 
	Matrix4X400 #
.00# $(
CreatePerspectiveFieldOfView00$ @
(00@ A
Scalar00A G
.00G H
DegreesToRadians00H X
(00X Y
$num00Y ^
)00^ _
,00_ `
_extent00a h
.00h i
Width00i n
/00o p
_extent00q x
.00x y
Height00y 
,	00 ─
$num
00│ ┘
,
00┘ ├
$num
00┤ ▀
)
00▀ ▄
;
00▄ █
_projection11 
.11 
M2211 
*=11 
-11  
$num11  !
;11! "
if33 
(33 
VulkanRenderer33 
.33 
_rendererType33 ,
==33- /
RendererTypes330 =
.33= >

Pathtracer33> H
)33H I
{44 
	Matrix4X455 
<55 
float55 
>55  
	_tempView55! *
;55* +
	Matrix4X466 
<66 
float66 
>66  
_tempProjection66! 0
;660 1
	Matrix4X488 
.88 
Invert88  
(88  !
_view88! &
,88& '
out88( +
	_tempView88, 5
)885 6
;886 7
	Matrix4X499 
.99 
Invert99  
(99  !
_projection99! ,
,99, -
out99. 1
_tempProjection992 A
)99A B
;99B C
_view:: 
=:: 
	_tempView:: !
;::! "
_projection;; 
=;; 
_tempProjection;; -
;;;- .
}<<  
AVulkanBufferHandler==  
.==  !
UpdateUniformBuffer==! 4
(==4 5
this==5 9
,==9 :
currentImage==; G
,==G H
ref==I L
_camBmemory==M X
)==X Y
;==Y Z
}>> 	
internal@@ 
void@@ !
ProcessMouseMovements@@ +
(@@+ ,
Vector2D@@, 4
<@@4 5
float@@5 :
>@@: ;
_delta@@< B
,@@B C
bool@@D H
_constrainPitch@@I X
=@@Y Z
true@@[ _
)@@_ `
{AA 	
_deltaBB 
*=BB 
_sensitivityBB "
;BB" #
	_rotationDD 
.DD 
XDD 
+=DD 
_deltaDD !
.DD! "
XDD" #
;DD# $
	_rotationEE 
.EE 
YEE 
-=EE 
_deltaEE !
.EE! "
YEE" #
;EE# $
ifGG 
(GG 
_constrainPitchGG 
)GG  
{HH 
	_rotationII 
.II 
YII 
=II 
ClampII #
(II# $
	_rotationII$ -
.II- .
YII. /
,II/ 0
-II1 2
$numII2 7
,II7 8
$numII9 >
)II> ?
;II? @
}JJ 
}KK 	
internalMM 
voidMM 
ProcessKeyboardMM %
(MM% &
)MM& '
{NN 	
ifPP 
(PP 

_keyStatesPP 
[PP 
SilkPP 
.PP  
NETPP  #
.PP# $
GLFWPP$ (
.PP( )
KeysPP) -
.PP- .
WPP. /
]PP/ 0
)PP0 1
{QQ 
_posRR 
+=RR 
_speedRR 
*RR  
_frontRR! '
;RR' (
}SS 
ifTT 
(TT 

_keyStatesTT 
[TT 
SilkTT 
.TT  
NETTT  #
.TT# $
GLFWTT$ (
.TT( )
KeysTT) -
.TT- .
ATT. /
]TT/ 0
)TT0 1
{UU 
_posVV 
+=VV 
_speedVV 
*VV  
-VV! "
_localRightVV" -
;VV- .
}WW 
ifXX 
(XX 

_keyStatesXX 
[XX 
SilkXX 
.XX  
NETXX  #
.XX# $
GLFWXX$ (
.XX( )
KeysXX) -
.XX- .
DXX. /
]XX/ 0
)XX0 1
{YY 
_posZZ 
+=ZZ 
_speedZZ 
*ZZ  
_localRightZZ! ,
;ZZ, -
}[[ 
if\\ 
(\\ 

_keyStates\\ 
[\\ 
Silk\\ 
.\\  
NET\\  #
.\\# $
GLFW\\$ (
.\\( )
Keys\\) -
.\\- .
S\\. /
]\\/ 0
)\\0 1
{]] 
_pos^^ 
+=^^ 
_speed^^ 
*^^  
-^^! "
_front^^" (
;^^( )
}__ 
ifaa 
(aa 

_keyStatesaa 
[aa 
Silkaa 
.aa  
NETaa  #
.aa# $
GLFWaa$ (
.aa( )
Keysaa) -
.aa- .
Eaa. /
]aa/ 0
)aa0 1
{bb 
_poscc 
+=cc 
_speedcc 
*cc  
Vector3Dcc! )
<cc) *
floatcc* /
>cc/ 0
.cc0 1
UnitYcc1 6
;cc6 7
}dd 
ifee 
(ee 

_keyStatesee 
[ee 
Silkee 
.ee  
NETee  #
.ee# $
GLFWee$ (
.ee( )
Keysee) -
.ee- .
Qee. /
]ee/ 0
)ee0 1
{ff 
_posgg 
+=gg 
_speedgg 
*gg  
-gg! "
Vector3Dgg" *
<gg* +
floatgg+ 0
>gg0 1
.gg1 2
UnitYgg2 7
;gg7 8
}hh 
ifjj 
(jj 

_keyStatesjj 
[jj 
Silkjj 
.jj  
NETjj  #
.jj# $
GLFWjj$ (
.jj( )
Keysjj) -
.jj- .
ControlLeftjj. 9
]jj9 :
)jj: ;
{kk 
_posll 
+=ll 
_speedll 
*ll  
-ll! "
_localUpll" *
;ll* +
}mm 
ifnn 
(nn 

_keyStatesnn 
[nn 
Silknn 
.nn  
NETnn  #
.nn# $
GLFWnn$ (
.nn( )
Keysnn) -
.nn- .
Spacenn. 3
]nn3 4
)nn4 5
{oo 
_pospp 
+=pp 
_speedpp 
*pp  
_localUppp! )
;pp) *
}qq 
}rr 	
privatett 
floattt 
Clamptt 
(tt 
floattt !
toClamptt" )
,tt) *
floattt+ 0
bottomtt1 7
,tt7 8
floattt9 >
toptt? B
)ttB C
{uu 	
ifvv 
(vv 
toClampvv 
<vv 
bottomvv  
)vv  !
returnww 
bottomww 
;ww 
elsexx 
ifxx 
(xx 
toClampxx 
>xx 
topxx "
)xx" #
returnyy 
topyy 
;yy 
elsezz 
return{{ 
toClamp{{ 
;{{ 
}|| 	
}}} 
}~~ в1
_H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\RendererDeprecated.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
{		 
public

 

class

 
RendererDeprecated

 #
{ 
Bitmap 
bmp 
; 
public 
Graphics 
g 
; 

PictureBox 
PicBox 
; 
public 
RendererDeprecated !
(! "

PictureBox" ,
PB- /
)/ 0
{ 	
PicBox 
= 
PB 
; 
bmp 
= 
new 
Bitmap 
( 
PicBox #
.# $
Width$ )
,) *
PicBox+ 1
.1 2
Height2 8
)8 9
;9 :
g 
= 
Graphics 
. 
	FromImage "
(" #
bmp# &
)& '
;' (
} 	
public 
void 
Draw 
( 
List 
< 

Particle2D (
>( )
p* +
)+ ,
{ 	
if 
( 
bmp 
. 
Width 
!= 
PicBox #
.# $
Width$ )
||* ,
bmp- 0
.0 1
Height1 7
!=8 :
PicBox; A
.A B
HeightB H
)H I
{ 
bmp 
= 
new 
Bitmap  
(  !
PicBox! '
.' (
Width( -
,- .
PicBox/ 5
.5 6
Height6 <
)< =
;= >
g 
= 
Graphics 
. 
	FromImage &
(& '
bmp' *
)* +
;+ ,
} 
g   
.   
Clear   
(   
Color   
.   
FromArgb   "
(  " #
$num  # &
,  & '
$num  ( *
,  * +
$num  , .
,  . /
$num  0 2
)  2 3
)  3 4
;  4 5
PicBox!! 
.!! 
Image!! 
=!! 
bmp!! 
;!! 
float$$ 
MaxSpeed$$ 
=$$ 
p$$ 
.$$ 
Max$$ "
($$" #
r$$# $
=>$$% '
r$$( )
.$$) *
velocity$$* 2
.$$2 3
LengthSquared$$3 @
($$@ A
)$$A B
)$$B C
+$$D E
$num$$F J
;$$J K
float%% 
MinSpeed%% 
=%% 
p%% 
.%% 
Min%% "
(%%" #
r%%# $
=>%%% '
r%%( )
.%%) *
velocity%%* 2
.%%2 3
LengthSquared%%3 @
(%%@ A
)%%A B
)%%B C
-%%D E
$num%%F J
;%%J K
foreach&& 
(&& 

Particle2D&& 
particle&&  (
in&&) +
p&&, -
)&&- .
{'' 
g(( 
.(( 
FillEllipse(( 
((( 
color(( #
(((# $
particle(($ ,
.((, -
velocity((- 5
.((5 6
LengthSquared((6 C
(((C D
)((D E
,((E F
MinSpeed((F N
,((N O
MaxSpeed((O W
)((W X
,((X Y
particle((Z b
.((b c
point((c h
.((h i
X((i j
,((j k
particle((l t
.((t u
point((u z
.((z {
Y(({ |
,((| }
particle	((~ ├
.
((├ ┤
radius
((┤ █
,
((█ ▌
particle
((▐ ≈
.
((≈ ≤
radius
((≤ ·
)
((· ÷
;
((÷ ═
})) 
PicBox** 
.** 

Invalidate** 
(** 
)** 
;**  
}++ 	
public-- 
Brush-- 
color-- 
(-- 
float--  
velocity--! )
,--) *
float--+ 0
MinSpeed--1 9
,--9 :
float--; @
MaxSpeed--A I
)--I J
{.. 	
Color// 
minColor// 
=// 
Color// "
.//" #
Blue//# '
;//' (
Color00 
MaxColor00 
=00 
Color00 "
.00" #
Red00# &
;00& '
double11 
remaped11 
=11 
(11 
velocity11 &
-11' (
MinSpeed11) 1
)111 2
/113 4
(115 6
MaxSpeed116 >
-11? @
MinSpeed11A I
)11I J
;11J K
int22 
r22 
=22 
(22 
int22 
)22 
(22 
minColor22 "
.22" #
R22# $
+22% &
remaped22' .
*22/ 0
(221 2
MaxColor222 :
.22: ;
R22; <
-22= >
minColor22? G
.22G H
R22H I
)22I J
)22J K
;22K L
int33 
g33 
=33 
(33 
int33 
)33 
(33 
minColor33 "
.33" #
G33# $
+33% &
remaped33' .
*33/ 0
(331 2
MaxColor332 :
.33: ;
G33; <
-33= >
minColor33? G
.33G H
G33H I
)33I J
)33J K
;33K L
int44 
b44 
=44 
(44 
int44 
)44 
(44 
minColor44 "
.44" #
B44# $
+44% &
remaped44' .
*44/ 0
(441 2
MaxColor442 :
.44: ;
B44; <
-44= >
minColor44? G
.44G H
B44H I
)44I J
)44J K
;44K L
return66 
new66 
Pen66 
(66 
Color66  
.66  !
FromArgb66! )
(66) *
$num66* -
,66- .
r66/ 0
,660 1
g662 3
,663 4
b665 6
)666 7
)667 8
.668 9
Brush669 >
;66> ?
}77 	
}88 
}99 √
YH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\MeshImporter.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
{ 
internal 
class 
MeshImporter 
{ 
public 
static 
MeshImporter "
Instance# +
;+ ,
public		 
MeshImporter		 
(		 
)		 
{

 	
Instance 
= 
this 
; 
} 	
internal 
Scene 
	ImportFBX  
(  !
string! '
filePath( 0
)0 1
{ 	
AssimpContext 
importer "
=$ %
new& )
AssimpContext* 7
(7 8
)8 9
;9 :
Scene 
scene 
= 
importer "
." #

ImportFile# -
(- .
filePath. 6
,6 7
PostProcessPreset8 I
.I J(
TargetRealTimeMaximumQualityJ f
)f g
;g h
if 
( 
scene 
!= 
null 
) 
{ 
return 
scene 
; 
} 
else 
Console 
. 
	WriteLine "
(" #
$str# <
)< =
;= >
return 
null 
; 
} 	
} 
} ╜D
SH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\Engine.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
{ 
public 

class 
Engine 
{		 
internal

 
static

 
Engine

 
_engineInstance

 .
=

/ 0
null

1 5
;

5 6
public 
bool 
Running 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
internal 
Frame 
SC 
; 
internal 
static 
VulkanRenderer &
	_renderer' 0
;0 1
internal 
List 
< 
Entity 
> 
	_entities '
=( )
new* -
List. 2
<2 3
Entity3 9
>9 :
(: ;
); <
;< =
internal 
List 
< 
TestingEntity #
># $
	_bandymas% .
=/ 0
new1 4
List5 9
<9 :
TestingEntity: G
>G H
(H I
)I J
;J K
public 
int 
bbz 
; 
public 
Engine 
( 
) 
{ 	
_engineInstance 
= 
this "
;" #
} 	
public 
void 
Init 
( 
Frame 
s  
)  !
{ 	
Running 
= 
true 
; 
SC 
= 
s 
; 
	_renderer 
= 
new 
VulkanRenderer *
(* +
)+ ,
;, -
	_renderer 
. 
InitRenderer "
(" #
RendererTypes# 0
.0 1

Rasterizer1 ;
); <
;< =
MeshImporter"" 
importer"" !
=""" #
new""$ '
MeshImporter""( 4
(""4 5
)""5 6
;""6 7
Running%% 
=%% 
true%% 
;%% 
SC&& 
=&& 
s&& 
;&& 
LightSourceEntity++ 
_ls++ !
=++" #
new++$ '
LightSourceEntity++( 9
(++9 :
)++: ;
;++; <
_ls,, 
.,, 
	transform,, 
.,, 
SetWorldPosition,, *
(,,* +
new,,+ .
Vector3D,,/ 7
<,,7 8
float,,8 =
>,,= >
(,,> ?
$num,,? @
,,,@ A
$num,,B D
,,,E F
$num,,F G
),,G H
),,H I
;,,I J
Task99 
_engineTask99 
=99 
Task99 #
.99# $
Run99$ '
(99' (
(99( )
)99) *
=>99+ -
EngineStart99. 9
(999 :
)99: ;
)99; <
;99< =
}BB 	
publicDD 
asyncDD 
TaskDD 
EngineStartDD %
(DD% &
)DD& '
{EE 	
doubleFF 
[FF 
]FF 
	framerateFF 
=FF  
newFF! $
doubleFF% +
[FF+ ,
$numFF, /
]FF/ 0
;FF0 1
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG 
<GG 
$numGG  #
;GG# $
iGG% &
++GG& (
)GG( )
	framerateHH 
[HH 
iHH 
]HH 
=HH 
$numHH  
;HH  !
intII 
indexII 
=II 
$numII 
;II 
DateTimeKK 
initTimeKK 
=KK 
DateTimeKK  (
.KK( )
NowKK) ,
;KK, -
intLL 
TSLL 
=LL 
$numLL 
;LL 
whileMM 
(MM 
RunningMM 
)MM 
{NN 
TimeSpanPP 
SimTimePP  
=PP! "
DateTimePP# +
.PP+ ,
NowPP, /
-PP0 1
initTimePP2 :
;PP: ;
DateTimeSS 
entityOnTickStartSS *
=SS+ ,
DateTimeSS- 5
.SS5 6
NowSS6 9
;SS9 :
foreachTT 
(TT 
EntityTT 
eTT  !
inTT" $
	_entitiesTT% .
)TT. /
{UU 
DateTimeVV 
entityTimeStartVV ,
=VV- .
DateTimeVV/ 7
.VV7 8
NowVV8 ;
;VV; <
eWW 
.WW 
OnTickWW 
(WW 
)WW 
;WW 
TimeSpanXX 

entityTimeXX '
=XX( )
DateTimeXX* 2
.XX2 3
NowXX3 6
-XX7 8
entityTimeStartXX9 H
;XXH I
}ZZ 
TimeSpan[[ 
entityOnTickTime[[ )
=[[* +
DateTime[[, 4
.[[4 5
Now[[5 8
-[[9 :
entityOnTickStart[[; L
;[[L M
DateTime__ 
GraphicsTimeStart__ *
=__+ ,
DateTime__- 5
.__5 6
Now__6 9
;__9 :
if`` 
(`` 
SC`` 
.`` 
InvokeRequired`` %
)``% &
SCaa 
.aa 
Invokeaa 
(aa 
newaa !
Actionaa" (
(aa( )
(aa) *
)aa* +
=>aa, .
{bb 
VulkanRenderercc &
.cc& '
	_glWindowcc' 0
.cc0 1
_glfwcc1 6
.cc6 7

PollEventscc7 A
(ccA B
)ccB C
;ccC D
VulkanRendererdd &
.dd& '
_rendererInstancedd' 8
.dd8 9
Drawdd9 =
(dd= >
)dd> ?
;dd? @
}ee 
)ee 
)ee 
;ee 
TimeSpanff 
GraphicsTimeff %
=ff& '
DateTimeff( 0
.ff0 1
Nowff1 4
-ff5 6
GraphicsTimeStartff7 H
;ffH I
doubleii 
	totalTimeii  
=ii! "
GraphicsTimeii# /
.ii/ 0
TotalMillisecondsii0 A
+iiB C
entityOnTickTimeiiD T
.iiT U
TotalMillisecondsiiU f
;iif g
	frameratekk 
[kk 
indexkk 
%kk  !
$numkk" %
]kk% &
=kk' (
	totalTimekk) 2
;kk2 3
indexll 
=ll 
(ll 
indexll 
+ll  
$numll! "
)ll" #
%ll$ %
$numll& )
;ll) *
doublemm 
frmm 
=mm 
	frameratemm %
.mm% &
Summm& )
(mm) *
)mm* +
/mm, -
indexmm. 3
;mm3 4
doublepp 
TSOffsetpp 
=pp  !
TSpp" $
-pp% &
	totalTimepp' 0
;pp0 1
ifqq 
(qq 
TSOffsetqq 
>qq 
$numqq !
)qq! "
awaitrr 
Taskrr 
.rr 
Delayrr $
(rr$ %
(rr% &
(rr& '
intrr' *
)rr* +
TSOffsetrr+ 3
)rr3 4
)rr4 5
;rr5 6
}ss 
}tt 	
publicvv 
asyncvv 
Taskvv 
PathTracerTestvv (
(vv( )
)vv) *
{ww 	
whilexx 
(xx 
Runningxx 
)xx 
{yy 
ifzz 
(zz 
SCzz 
.zz 
InvokeRequiredzz %
)zz% &
SC{{ 
.{{ 
Invoke{{ 
({{ 
new{{ !
Action{{" (
({{( )
({{) *
){{* +
=>{{, .
{|| 
VulkanRenderer}} &
.}}& '
	_glWindow}}' 0
.}}0 1
_glfw}}1 6
.}}6 7

PollEvents}}7 A
(}}A B
)}}B C
;}}C D
VulkanRenderer~~ &
.~~& '
_rendererInstance~~' 8
.~~8 9
Draw~~9 =
(~~= >
)~~> ?
;~~? @
} 
) 
) 
; 
await
── 
Task
── 
.
── 
Delay
──  
(
──  !
$num
──! "
)
──" #
;
──# $
}
││ 
}
┌┌ 	
public
└└ 
void
└└ 
Stop
└└ 
(
└└ 
)
└└ 
{
┘┘ 	
Running
├├ 
=
├├ 
false
├├ 
;
├├ 
}
┤┤ 	
}
┬┬ 
}┴┴ ╖]
yH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\ECS\RenderingComponents\Vulkan\MeshComponent.cs
	namespace		 	
ArctisAurora		
 
.		 

EngineWork		 !
.		! "
ECS		" %
.		% &
RenderingComponents		& 9
.		9 :
Vulkan		: @
{

 
internal 
unsafe 
class 
MeshComponent '
:( )
EntityComponent* 9
{ 
internal 
bool 
_render 
= 
true  $
;$ %
internal 
AVulkanMesh 
_mesh "
;" #
internal 
DescriptorSet 
[ 
]  
_descriptorSets! 0
;0 1
internal 
BufferUsageFlags ! 
_aditionalUsageFlags" 6
=7 8
BufferUsageFlags9 I
.I J
NoneJ N
;N O
internal 
Buffer 
_vertexBuffer %
;% &
internal 
DeviceMemory 
_vertexBufferMemory 1
;1 2
internal 
Buffer 
_indexBuffer $
;$ %
internal 
DeviceMemory 
_indexBufferMemory 0
;0 1
internal 
Buffer 
_transformsBuffer )
;) *
internal 
DeviceMemory #
_trasnformsBufferMemory 5
;5 6
internal 
int 

_instances 
=  !
$num" #
;# $
internal 
List 
< 
	Matrix4X4 
<  
float  %
>% &
>& '
_transformMatrices( :
=; <
new= @
ListA E
<E F
	Matrix4X4F O
<O P
floatP U
>U V
>V W
(W X
)X Y
;Y Z
public   
MeshComponent   
(   
)   
{!! 	
_mesh"" 
="" 
new"" 
AVulkanMesh"" #
(""# $
)""$ %
;""% &
}## 	
public%% 
override%% 
void%% 
OnStart%% $
(%%$ %
)%%% &
{&& 	
SingletonMatrix'' 
('' 
)'' 
;'' 
VulkanRenderer(( 
.(( 
_rendererInstance(( ,
.((, -"
AddEntityToRenderQueue((- C
(((C D
parent((D J
)((J K
;((K L
})) 	
internal++ 
void++ 
LoadCustomMesh++ $
(++$ %
Scene++% *
sc+++ -
)++- .
{,, 	
VulkanRenderer-- 
.-- 
_vulkan-- "
.--" #
DestroyBuffer--# 0
(--0 1
VulkanRenderer--1 ?
.--? @
_logicalDevice--@ N
,--N O
_vertexBuffer--P ]
,--] ^
null--_ c
)--c d
;--d e
VulkanRenderer.. 
... 
_vulkan.. "
..." #
DestroyBuffer..# 0
(..0 1
VulkanRenderer..1 ?
...? @
_logicalDevice..@ N
,..N O
_indexBuffer..P \
,..\ ]
null..^ b
)..b c
;..c d
VulkanRenderer// 
.// 
_vulkan// "
.//" #

FreeMemory//# -
(//- .
VulkanRenderer//. <
.//< =
_logicalDevice//= K
,//K L
_indexBufferMemory//M _
,//_ `
null//a e
)//e f
;//f g
VulkanRenderer00 
.00 
_vulkan00 "
.00" #

FreeMemory00# -
(00- .
VulkanRenderer00. <
.00< =
_logicalDevice00= K
,00K L
_vertexBufferMemory00M `
,00` a
null00b f
)00f g
;00g h
_mesh11 
.11 
LoadCustomMesh11  
(11  !
sc11! #
)11# $
;11$ % 
AVulkanBufferHandler22  
.22  !
CreateVertexBuffer22! 3
(223 4
ref224 7
_mesh228 =
.22= >
	_vertices22> G
,22G H
ref22I L
_vertexBuffer22M Z
,22Z [
ref22\ _
_vertexBufferMemory22` s
,22s t!
_aditionalUsageFlags	22u ┴
)
22┴ ┼
;
22┼ ▀ 
AVulkanBufferHandler33  
.33  !
CreateIndexBuffer33! 2
(332 3
ref333 6
_mesh337 <
.33< =
_indices33= E
,33E F
ref33G J
_indexBuffer33K W
,33W X
ref33Y \
_indexBufferMemory33] o
,33o p!
_aditionalUsageFlags	33q ┘
)
33┘ ├
;
33├ ┤
VulkanRenderer44 
.44 
_rendererInstance44 ,
.44, -"
RecreateCommandBuffers44- C
(44C D
)44D E
;44E F
}55 	
internal77 
virtual77 
void77 
FreeDescriptorSets77 0
(770 1
)771 2
{773 4
}775 6
internal99 
virtual99 
void99 &
ReinstantiateDesriptorSets99 8
(998 9
)999 :
{99; <
}99= >
internal;; 
virtual;; 
void;; 
MakeInstanced;; +
(;;+ ,
ref;;, /
List;;0 4
<;;4 5
	Matrix4X4;;5 >
<;;> ?
float;;? D
>;;D E
>;;E F
	_matrices;;G P
);;P Q
{;;R S
};;T U
internal== 
virtual== 
void== 
SingletonMatrix== -
(==- .
)==. /
{>> 	

Quaternion?? 
<?? 
float?? 
>?? 
q?? 
=??  !

Quaternion??" ,
<??, -
float??- 2
>??2 3
.??3 4"
CreateFromYawPitchRoll??4 J
(??J K
$num??K L
,??L M
$num??M N
,??N O
$num??O P
)??P Q
;??Q R
	Matrix4X4@@ 
<@@ 
float@@ 
>@@ 

_transform@@ '
=@@( )
	Matrix4X4@@* 3
<@@3 4
float@@4 9
>@@9 :
.@@: ;
Identity@@; C
;@@C D

_transformAA 
*=AA 
	Matrix4X4AA #
.AA# $
CreateTranslationAA$ 5
(AA5 6
parentAA6 <
.AA< =
	transformAA= F
.AAF G
positionAAG O
)AAO P
;AAP Q

_transformCC 
*=CC 
	Matrix4X4CC #
.CC# $
CreateScaleCC$ /
(CC/ 0
parentCC0 6
.CC6 7
	transformCC7 @
.CC@ A
scaleCCA F
)CCF G
;CCG H
_transformMatricesEE 
.EE 
AddEE "
(EE" #

_transformEE# -
)EE- .
;EE. /
}FF 	
internalHH 
virtualHH 
voidHH 
CreateDescriptorSetHH 1
(HH1 2
)HH2 3
{HH4 5
}HH6 7
internalJJ 
virtualJJ 
voidJJ 
UpdateMatricesJJ ,
(JJ, -
)JJ- .
{KK 	

QuaternionLL 
<LL 
floatLL 
>LL 
qLL 
=LL  !

QuaternionLL" ,
<LL, -
floatLL- 2
>LL2 3
.LL3 4"
CreateFromYawPitchRollLL4 J
(LLJ K
$numLLK N
*LLO P
MathFLLQ V
.LLV W
PILLW Y
/LLZ [
$numLL\ `
,LL` a
$numLLb c
,LLc d
$numLLe f
)LLf g
;LLg h
	Matrix4X4MM 
<MM 
floatMM 
>MM 

_transformMM '
=MM( )
	Matrix4X4MM* 3
<MM3 4
floatMM4 9
>MM9 :
.MM: ;
IdentityMM; C
;MMC D

_transformNN 
*=NN 
	Matrix4X4NN #
.NN# $
CreateScaleNN$ /
(NN/ 0
parentNN0 6
.NN6 7
	transformNN7 @
.NN@ A
scaleNNA F
)NNF G
;NNG H

_transformOO 
*=OO 
	Matrix4X4OO #
.OO# $ 
CreateFromQuaternionOO$ 8
(OO8 9
qOO9 :
)OO: ;
;OO; <

_transformPP 
*=PP 
	Matrix4X4PP #
.PP# $
CreateTranslationPP$ 5
(PP5 6
parentPP6 <
.PP< =
	transformPP= F
.PPF G
positionPPG O
)PPO P
;PPP Q
_transformMatricesRR 
[RR 
$numRR  
]RR  !
=RR" #

_transformRR$ .
;RR. / 
AVulkanBufferHandlerSS  
.SS  !!
UpdateTransformBufferSS! 6
(SS6 7
refSS7 :
_transformMatricesSS; M
,SSM N
refSSO R#
_trasnformsBufferMemorySSS j
)SSj k
;SSk l
}TT 	
internalVV 
virtualVV 
voidVV 
EnqueueDrawCommandsVV 1
(VV1 2
ulongVV2 7
[VV7 8
]VV8 9
_offsetVV: A
,VVA B
intVVC F

_loopIndexVVG Q
,VVQ R
refVVS V
CommandBufferVVW d
_commandBufferVVe s
)VVs t
{WW 	
ifXX 
(XX 
_renderXX 
)XX 
{YY 
BufferZZ 
[ZZ 
]ZZ 
_vertBufferZZ $
=ZZ% &
newZZ' *
BufferZZ+ 1
[ZZ1 2
]ZZ2 3
{ZZ4 5
_vertexBufferZZ6 C
}ZZD E
;ZZE F
fixed[[ 
([[ 
ulong[[ 
*[[ 
_offsetsPtr[[ )
=[[* +
_offset[[, 3
)[[3 4
fixed\\ 
(\\ 
Buffer\\ 
*\\ 
_vertBuffersPtr\\ .
=\\/ 0
_vertBuffer\\1 <
)\\< =
{]] 
VulkanRenderer^^ "
.^^" #
_vulkan^^# *
.^^* + 
CmdBindVertexBuffers^^+ ?
(^^? @
_commandBuffer^^@ N
,^^N O
$num^^P Q
,^^Q R
$num^^S T
,^^T U
_vertBuffersPtr^^V e
,^^e f
_offsetsPtr^^g r
)^^r s
;^^s t
}__ 
VulkanRenderer`` 
.`` 
_vulkan`` &
.``& '
CmdBindIndexBuffer``' 9
(``9 :
_commandBuffer``: H
,``H I
_indexBuffer``J V
,``V W
$num``X Y
,``Y Z
	IndexType``[ d
.``d e
Uint16``e k
)``k l
;``l m
VulkanRendereraa 
.aa 
_vulkanaa &
.aa& '!
CmdBindDescriptorSetsaa' <
(aa< =
_commandBufferaa= K
,aaK L
PipelineBindPointaaM ^
.aa^ _
Graphicsaa_ g
,aag h

Rasterizeraai s
.aas t
	_pipelineaat }
.aa} ~
_pipelineLayout	aa~ █
,
aa█ ▌
$num
aa▐ ░
,
aa░ ▒
$num
aa▓ ⌠
,
aa⌠ ■
_descriptorSets
aa∙ ╓
[
aa╓ ╔

_loopIndex
aa╔ ╞
]
aa╞ ╟
,
aa╟ ╠
$num
aa╡ Ё
,
aaЁ ╢
null
aa╣ ╧
)
aa╧ ╨
;
aa╨ ╩
VulkanRendererbb 
.bb 
_vulkanbb &
.bb& '
CmdDrawIndexedbb' 5
(bb5 6
_commandBufferbb6 D
,bbD E
(bbF G
uintbbG K
)bbK L
_meshbbL Q
.bbQ R
_indicesbbR Z
.bbZ [
Lengthbb[ a
,bba b
(bbc d
uintbbd h
)bbh i

_instancesbbi s
,bbs t
$numbbu v
,bbv w
$numbbx y
,bby z
$numbb{ |
)bb| }
;bb} ~
}cc 
}dd 	
}ee 
}ff ТK
─H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\ECS\RenderingComponents\Vulkan\LightsourceComponent.cs
	namespace		 	
ArctisAurora		
 
.		 

EngineWork		 !
.		! "
ECS		" %
.		% &
RenderingComponents		& 9
.		9 :
Vulkan		: @
{

 
internal 
unsafe 
class  
LightsourceComponent .
:. /
EntityComponent0 ?
{ 
bool 
_render 
= 
true 
; 
internal 
DescriptorSet 
[ 
]  
_descriptorSets! 0
;0 1
internal 
Buffer 
_trasnformsBuffer )
;) *
internal 
DeviceMemory #
_trasnformsBufferMemory 5
;5 6
internal 
Silk 
. 
NET 
. 
Vulkan  
.  !
Image! &
_depthImage' 2
;2 3
internal 
	ImageView 
_depthImageView *
;* +
internal 
DeviceMemory 
_depthBufferMemory 0
;0 1
internal 
Framebuffer 
_shadowFramebuffer /
;/ 0
internal 
	Matrix4X4 
< 
float  
>  !

_lightView" ,
;, -
internal 
	Matrix4X4 
< 
float  
>  !
_lightProjection" 2
;2 3
internal 
	Matrix4X4 
< 
float  
>  !
_lpv" &
;& '
internal 
Vector4D 
< 
float 
>  
_lightColor! ,
=- .
new/ 2
Vector4D3 ;
<; <
float< A
>A B
(B C
$numC D
,D E
$numF G
,G H
$numI J
,J K
$numL M
)M N
;N O
public!!  
LightsourceComponent!! #
(!!# $
)!!$ %
{"" 	#
CreateShadowFramebuffer$$ #
($$# $
new$$$ '
Extent2D$$( 0
($$0 1
$num$$1 5
,$$5 6
$num$$6 :
)$$: ;
)$$; <
;$$< =
}%% 	
public'' 
override'' 
void'' 
OnStart'' $
(''$ %
)''% &
{(( 	
VulkanRenderer)) 
.)) 
_rendererInstance)) ,
.)), -!
AddLightToRenderQueue))- B
())B C
parent))C I
)))I J
;))J K
VulkanRenderer** 
.** 
_rendererInstance** ,
.**, -"
RecreateCommandBuffers**- C
(**C D
)**D E
;**E F
}++ 	
internal-- 
void-- #
CreateShadowFramebuffer-- -
(--- .
Extent2D--. 6
_resolution--7 B
)--B C
{.. 	
CreateDepthImage// 
(// 
_resolution// (
)//( )
;//) *
var00 
_attachment00 
=00 
new00 !
[00! "
]00" #
{00$ %
_depthImageView00& 5
}006 7
;007 8
fixed22 
(22 
	ImageView22 
*22 
_imAttachmentPtr22 .
=22/ 0
_attachment221 <
)22< =
{33 !
FramebufferCreateInfo44 %
_framebufferInfo44& 6
=447 8
new449 <!
FramebufferCreateInfo44= R
(44R S
)44S T
{55 
SType66 
=66 
StructureType66 )
.66) *!
FramebufferCreateInfo66* ?
,66? @

RenderPass77 
=77  

Rasterizer77! +
.77+ ,

_swapchain77, 6
.776 7 
_shadowmapRenderPass777 K
,77K L
AttachmentCount88 #
=88$ %
(88& '
uint88' +
)88+ ,
_attachment88, 7
.887 8
Length888 >
,88> ?
PAttachments99  
=99! "
_imAttachmentPtr99# 3
,993 4
Width:: 
=:: 
_resolution:: '
.::' (
Width::( -
,::- .
Height;; 
=;; 
_resolution;; (
.;;( )
Height;;) /
,;;/ 0
Layers<< 
=<< 
$num<< 
}== 
;== 
if>> 
(>> 

Rasterizer>> 
.>> 
_vulkan>> &
.>>& '
CreateFramebuffer>>' 8
(>>8 9

Rasterizer>>9 C
.>>C D
_logicalDevice>>D R
,>>R S
ref>>T W
_framebufferInfo>>X h
,>>h i
null>>j n
,>>n o
out>>p s
_shadowFramebuffer	>>t ├
)
>>├ ┤
!=
>>┬ ┼
Result
>>▀ ▒
.
>>▒ ▓
Success
>>▓ ≥
)
>>≥  
{?? 
throw@@ 
new@@ 
	Exception@@ '
(@@' (
$str@@( G
)@@G H
;@@H I
}AA 
}BB 
}CC 	
internalEE 
voidEE 
UpdateVPMatricesEE &
(EE& '
uintEE' +
_currentImageEE, 9
)EE9 :
{FF 	
_lightProjectionGG 
=GG 
	Matrix4X4GG (
.GG( )'
CreateOrthographicOffCenterGG) D
(GGD E
-GGE F
$numGGF I
,GGI J
$numGGK N
,GGN O
-GGP Q
$numGGQ T
,GGT U
$numGGV Y
,GGY Z
$numGG[ \
,GG\ ]
$numGG^ b
)GGb c
;GGc d
_lightProjectionHH 
.HH 
M22HH  
*=HH! #
-HH$ %
$numHH% &
;HH& '

_lightViewII 
=II 
	Matrix4X4II "
.II" #
CreateLookAtII# /
(II/ 0
parentII0 6
.II6 7
	transformII7 @
.II@ A
positionIIA I
,III J
Vector3DIIK S
<IIS T
floatIIT Y
>IIY Z
.IIZ [
ZeroII[ _
,II_ `
Vector3DIIa i
<IIi j
floatIIj o
>IIo p
.IIp q
UnitYIIq v
)IIv w
;IIw x
_lpvJJ 
=JJ 
_lightProjectionJJ #
*JJ$ %

_lightViewJJ& 0
;JJ0 1
}KK 	
privateMM 
voidMM 
CreateDepthImageMM %
(MM% &
Extent2DMM& .
_resolutionMM/ :
)MM: ;
{NN 	
FormatOO 
_depthFormatOO 
=OO  !
GetDepthFormatOO" 0
(OO0 1
)OO1 2
;OO2 3 
AVulkanBufferHandlerPP  
.PP  !
CreateImagePP! ,
(PP, -
_resolutionPP- 8
.PP8 9
WidthPP9 >
,PP> ?
_resolutionPP@ K
.PPK L
HeightPPL R
,PPR S
_depthFormatPPT `
,PP` a
ImageTilingPPb m
.PPm n
OptimalPPn u
,PPu v
ImageUsageFlags	PPw ├
.
PP├ ┤'
DepthStencilAttachmentBit
PP┤ ═
|
PP║ ╒
ImageUsageFlags
PPё ╡
.
PP╡ Ё

SampledBit
PPЁ ╫
,
PP╫ ╬!
MemoryPropertyFlags
PP© р
.
PPр с
DeviceLocalBit
PPс А
,
PPА Б
ref
PPЦ Ф
_depthImage
PPГ Р
,
PPР С
ref
PPТ В 
_depthBufferMemory
PPЬ ┼
)
PP┼ ▀
;
PP▀ ▄
ImageViewCreateInfoQQ 
_createInfoQQ  +
=QQ, -
newQQ. 1
ImageViewCreateInfoQQ2 E
{RR 
STypeSS 
=SS 
StructureTypeSS %
.SS% &
ImageViewCreateInfoSS& 9
,SS9 :
ImageTT 
=TT 
_depthImageTT #
,TT# $
FormatUU 
=UU 
_depthFormatUU %
,UU% &
ViewTypeVV 
=VV 
ImageViewTypeVV (
.VV( )
Type2DVV) /
}WW 
;WW 
_createInfoYY 
.YY 
SubresourceRangeYY (
.YY( )

AspectMaskYY) 3
=YY4 5
ImageAspectFlagsYY6 F
.YYF G
DepthBitYYG O
;YYO P
_createInfoZZ 
.ZZ 
SubresourceRangeZZ (
.ZZ( )
BaseMipLevelZZ) 5
=ZZ6 7
$numZZ8 9
;ZZ9 :
_createInfo[[ 
.[[ 
SubresourceRange[[ (
.[[( )

LevelCount[[) 3
=[[4 5
$num[[6 7
;[[7 8
_createInfo\\ 
.\\ 
SubresourceRange\\ (
.\\( )
BaseArrayLayer\\) 7
=\\8 9
$num\\: ;
;\\; <
_createInfo]] 
.]] 
SubresourceRange]] (
.]]( )

LayerCount]]) 3
=]]4 5
$num]]6 7
;]]7 8
if__ 
(__ 

Rasterizer__ 
.__ 
_vulkan__ "
!__" #
.__# $
CreateImageView__$ 3
(__3 4

Rasterizer__4 >
.__> ?
_logicalDevice__? M
,__M N
ref__O R
_createInfo__S ^
,__^ _
null__` d
,__d e
out__f i
_depthImageView__j y
)__y z
!=__{ }
Result	__~ └
.
__└ ┘
Success
__┘ ▄
)
__▄ █
{`` 
throwaa 
newaa 
	Exceptionaa #
(aa# $
$straa$ C
)aaC D
;aaD E
}bb 
}cc 	
}dd 
}ee Р
`H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\EngineWork\ECS\EntityComponent.cs
	namespace 	
ArctisAurora
 
. 

EngineWork !
.! "
ComponentBehaviour" 4
{		 
internal

 
class

 
EntityComponent

 "
{ 
internal 
Entity 
parent 
; 
public 
virtual 
void 
OnStart #
(# $
)$ %
{ 	
} 	
public 
virtual 
void 
OnEnable $
($ %
)% &
{ 	
} 	
public 
virtual 
void 
	OnDisable %
(% &
)& '
{ 	
} 	
public 
virtual 
void 
OnTick "
(" #
)# $
{ 	
}   	
public"" 
virtual"" 
void"" 
	OnDestroy"" %
(""% &
)""& '
{## 	
}%% 	
}&& 
}'' АG
hH:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\CustomEntityComponents\SPHSimComponent.cs
	namespace 	
ArctisAurora
 
. "
CustomEntityComponents -
{		 
internal

 
class

 
SPHSimComponent

 "
:

# $
EntityComponent

% 4
{ 
internal 
List 
< 

Particle3D  
>  !

_particles" ,
=- .
new/ 2
List3 7
<7 8

Particle3D8 B
>B C
(C D
)D E
;E F
internal 
Simulator3D 

_simulator '
;' (
internal 
List 
< 
	Matrix4X4 
<  
float  %
>% &
>& '
_instanceMatrix( 7
=8 9
new: =
List> B
<B C
	Matrix4X4C L
<L M
floatM R
>R S
>S T
(T U
)U V
;V W
public 
override 
void 
OnTick #
(# $
)$ %
{ 	

_simulator 
. 
Update 
( 
$num  
/! "
$num# (
)( )
;) *
UpdatePositions3D 
( 

_particles (
)( )
;) *
} 	
internal 
void 
simSetup 
( 
int "
particleRoot# /
)/ 0
{ 	
float 
offsetX 
= 
( 
$num  
/! "
$num# $
)$ %
-& '
(( )
particleRoot) 5
*6 7
$num8 9
/: ;
$num< =
)= >
;> ?
float 
offsetY 
= 
( 
$num  
/! "
$num# $
)$ %
-& '
(( )
particleRoot) 5
*6 7
$num8 9
/: ;
$num< =
)= >
;> ?
float 
offsetZ 
= 
( 
$num  
/! "
$num# $
)$ %
-& '
(( )
particleRoot) 5
*6 7
$num8 9
/: ;
$num< =
)= >
;> ?
for 
( 
int 
i 
= 
$num 
; 
i 
< 
particleRoot (
;( )
i) *
++* ,
), -
{ 
for 
( 
int 
j 
= 
$num 
; 
j  !
<" #
particleRoot$ 0
;0 1
j2 3
++3 5
)5 6
{ 
for 
( 
int 
k 
=  
$num! "
;" #
k$ %
<& '
particleRoot( 4
;4 5
k6 7
++7 9
)9 :
{   

_particles!! "
.!!" #
Add!!# &
(!!& '
new!!' *

Particle3D!!+ 5
(!!5 6
(!!6 7
i!!7 8
*!!9 :
$num!!; <
+!!= >
offsetX!!? F
)!!F G
,!!G H
(!!I J
j!!J K
*!!L M
$num!!N O
+!!P Q
offsetY!!R Y
)!!Y Z
,!!Z [
k!!\ ]
*!!^ _
$num!!` a
+!!b c
offsetZ!!d k
)!!k l
)!!l m
;!!m n
}"" 
}## 
}$$ 

_simulator&& 
=&& 
new&& 
Simulator3D&& (
(&&( )

_particles&&) 3
,&&3 4
new&&5 8
Vector3D&&9 A
<&&A B
float&&B G
>&&G H
(&&H I
$num&&I L
,&&L M
$num&&N Q
,&&Q R
$num&&S V
)&&V W
)&&W X
;&&X Y
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i(( 
<(( 

_particles((  *
.((* +
Count((+ 0
;((0 1
i((2 3
++((3 5
)((5 6
{)) 
Vector3D** 
<** 
float** 
>** 
pos**  #
=**$ %
new**& )
Vector3D*** 2
<**2 3
float**3 8
>**8 9
(**9 :
parent**: @
.**@ A
	transform**A J
.**J K
position**K S
.**S T
X**T U
,**U V
parent**W ]
.**] ^
	transform**^ g
.**g h
position**h p
.**p q
Y**q r
,**r s
parent**t z
.**z {
	transform	**{ └
.
**└ ┘
position
**┘ █
.
**█ ▌
Z
**▌ ▐
)
**▐ ░
;
**░ ▒
	Matrix4X4-- 
<-- 
float-- 
>--  
transformation--! /
=--0 1
	Matrix4X4--2 ;
<--; <
float--< A
>--A B
.--B C
Identity--C K
;--K L
transformation.. 
*=.. !
	Matrix4X4.." +
...+ ,
CreateTranslation.., =
(..= >
pos..> A
)..A B
;..B C
_instanceMatrix22 
.22  
Add22  #
(22# $
transformation22$ 2
)222 3
;223 4
}33 
parent44 
.44 
GetComponent44 
<44  
MeshComponent44  -
>44- .
(44. /
)44/ 0
.440 1
MakeInstanced441 >
(44> ?
ref44? B
_instanceMatrix44C R
)44R S
;44S T
}55 	
public66 
void66 
UpdatePositions3D66 %
(66% &
List66& *
<66* +

Particle3D66+ 5
>665 6
ps667 9
)669 :
{77 	
for88 
(88 
int88 
i88 
=88 
$num88 
;88 
i88 
<88 
ps88  "
.88" #
Count88# (
;88( )
i88* +
++88+ -
)88- .
{99 
Vector3D:: 
<:: 
float:: 
>:: 
pos::  #
=::$ %
new::& )
Vector3D::* 2
<::2 3
float::3 8
>::8 9
(::9 :
ps::: <
[::< =
i::= >
]::> ?
.::? @
point::@ E
.::E F
X::F G
,::G H
ps::I K
[::K L
i::L M
]::M N
.::N O
point::O T
.::T U
Y::U V
,::V W
ps::X Z
[::Z [
i::[ \
]::\ ]
.::] ^
point::^ c
.::c d
Z::d e
)::e f
;::f g

Quaternion;; 
<;; 
float;;  
>;;  !
q;;" #
=;;$ %

Quaternion;;& 0
<;;0 1
float;;1 6
>;;6 7
.;;7 8"
CreateFromYawPitchRoll;;8 N
(;;N O
parent;;O U
.;;U V
	transform;;V _
.;;_ `
rotation;;` h
.;;h i
X;;i j
,;;j k
parent;;l r
.;;r s
	transform;;s |
.;;| }
rotation	;;} ┘
.
;;┘ ├
Y
;;├ ┤
,
;;┤ ┬
parent
;;┴ ▐
.
;;▐ ░
	transform
;;░ ≥
.
;;≥  
rotation
;;  ╒
.
;;╒ ё
Z
;;ё ╓
)
;;╓ ╔
;
;;╔ ╕
	Matrix4X4== 
<== 
float== 
>==  
transformation==! /
===0 1
	Matrix4X4==2 ;
<==; <
float==< A
>==A B
.==B C
Identity==C K
;==K L
transformation>> 
*=>> !
	Matrix4X4>>" +
.>>+ ,
CreateTranslation>>, =
(>>= >
pos>>> A
)>>A B
;>>B C
transformation?? 
*=?? !
	Matrix4X4??" +
.??+ , 
CreateFromQuaternion??, @
(??@ A
q??A B
)??B C
;??C D
transformation@@ 
*=@@ !
	Matrix4X4@@" +
.@@+ ,
CreateScale@@, 7
(@@7 8
parent@@8 >
.@@> ?
	transform@@? H
.@@H I
scale@@I N
)@@N O
;@@O P
_instanceMatrixBB 
[BB  
iBB  !
]BB! "
=BB# $
transformationBB% 3
;BB3 4
}CC 
VulkanRendererDD 
.DD 
_rendererInstanceDD ,
.DD, -
AddEntityToUpdateDD- >
(DD> ?
parentDD? E
)DDE F
;DDF G
}EE 	
publicGG 
overrideGG 
voidGG 
OnStartGG $
(GG$ %
)GG% &
{HH 	
baseII 
.II 
OnStartII 
(II 
)II 
;II 
}JJ 	
}KK 
}LL д
^H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\CustomEntities\TestingEntity.cs
	namespace 	
ArctisAurora
 
. 
CustomEntities %
{ 
public 

class 
TestingEntity 
:  
Entity! '
{ 
public		 
TestingEntity		 
(		 
)		 
{

 	
this 
. 
CreateComponent  
<  !
MeshComponent! .
>. /
(/ 0
)0 1
;1 2
} 	
public 
override 
void 
OnStart $
($ %
)% &
{ 	
base 
. 
OnStart 
( 
) 
; 
} 	
public 
override 
void 
OnTick #
(# $
)$ %
{ 	
base 
. 
OnTick 
( 
) 
; 
} 	
} 
} Ю
`H:\Creative\VS\ParticleSimulator\ParticleSim\ParticleSimulator\CustomEntities\SimulatorEntity.cs
	namespace 	
ArctisAurora
 
. 
CustomEntities %
{ 
internal 
class 
SimulatorEntity "
:# $
Entity% +
{ 
public		 
SimulatorEntity		 
(		 
)		  
{

 	
this 
. 
	transform 
. 
scale  
*=! #
$num$ %
;% &
this 
. 
CreateComponent  
<  !
SPHSimComponent! 0
>0 1
(1 2
)2 3
;3 4
this 
. 
CreateComponent  
<  !
MeshComponent! .
>. /
(/ 0
)0 1
;1 2
this 
. 
name 
= 
$str /
;/ 0
} 	
public 
override 
void 
OnStart $
($ %
)% &
{ 	
base 
. 
OnStart 
( 
) 
; 
} 	
public 
override 
void 
OnTick #
(# $
)$ %
{ 	
base 
. 
OnTick 
( 
) 
; 
} 	
} 
} 